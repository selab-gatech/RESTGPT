openapi: 3.0.1
info:
  title: YouTube Data
  description: Supports core YouTube features, such as uploading videos, creating and managing playlists, searching for content, and much more.
  termsOfService: https://developers.google.com/terms/
  contact:
    name: Google
    url: https://google.com
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  version: 1.0.0
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: youtube
externalDocs:
  url: https://developers.google.com/youtube/v3
servers:
  - url: http://localhost:9009/api
tags:
  - name: activities
  - name: captions
  - name: channelBanners
  - name: channelSections
  - name: channels
  - name: commentThreads
  - name: comments
  - name: guideCategories
  - name: i18nLanguages
  - name: i18nRegions
  - name: liveBroadcasts
  - name: liveChatBans
  - name: liveChatMessages
  - name: liveChatModerators
  - name: liveStreams
  - name: members
  - name: membershipsLevels
  - name: playlistItems
  - name: playlists
  - name: search
  - name: sponsors
  - name: subscriptions
  - name: superChatEvents
  - name: thumbnails
  - name: videoAbuseReportReasons
  - name: videoCategories
  - name: videos
  - name: watermarks
paths:
  /search:
    get:
      tags:
        - search
      description: Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching video, channel, and playlist resources, but you can also configure queries to only retrieve a specific type of resource.
      operationId: youtube.search.list
      parameters:
        - name: channelId
          in: query
          description: The channelId parameter indicates that the API response should only contain resources created by the channel
          schema:
            type: string
        - name: channelType
          in: query
          description: The channelType parameter lets you restrict a search to a particular type of channel.
          schema:
            type: string
            enum:
              - any
              - show
        - name: eventType
          in: query
          description: The eventType parameter restricts a search to broadcast events. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
            enum:
              - completed
              - live
              - upcoming
        - name: forContentOwner
          in: query
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The forContentOwner parameter restricts the search to only retrieve resources owned by the content owner specified by the onBehalfOfContentOwner parameter. The user must be authenticated using a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.
          schema:
            type: boolean
        - name: forDeveloper
          in: query
          description: The forDeveloper parameter restricts the search to only retrieve videos uploaded via the developer's application or website. The API server uses the request's authorization credentials to identify the developer. Therefore, a developer can restrict results to videos uploaded through the developer's own app or website but not to videos uploaded through other apps or sites.
          schema:
            type: boolean
        - name: forMine
          in: query
          description: The forMine parameter restricts the search to only retrieve videos owned by the authenticated user. If you set this parameter to true, then the type parameter's value must also be set to video.
          schema:
            type: boolean
        - name: location
          in: query
          description: |-
            The location parameter, in conjunction with the locationRadius parameter, defines a circular geographic area and also restricts a search to videos that specify, in their metadata, a geographic location that falls within that area. The parameter value is a string that specifies latitude/longitude coordinates e.g. (37.42307,-122.08427).


            - The location parameter value identifies the point at the center of the area.
            - The locationRadius parameter specifies the maximum distance that the location associated with a video can be from that point for the video to still be included in the search results.The API returns an error if your request specifies a value for the location parameter but does not also specify a value for the locationRadius parameter.
          schema:
            type: string
        - name: locationRadius
          in: query
          description: |-
            The locationRadius parameter, in conjunction with the location parameter, defines a circular geographic area.

            The parameter value must be a floating point number followed by a measurement unit. Valid measurement units are m, km, ft, and mi. For example, valid parameter values include 1500m, 5km, 10000ft, and 0.75mi. The API does not support locationRadius parameter values larger than 1000 kilometers.

            Note: See the definition of the location parameter for more information.
          schema:
            type: string
        - name: maxResults
          in: query
          description: The maxResults parameter specifies the maximum number of items that should be returned in the result set.
          schema:
            maximum: 50
            minimum: 0
            type: integer
            default: 5
        - name: onBehalfOfContentOwner
          in: query
          description: |-
            Note: This parameter is intended exclusively for YouTube content partners.

            The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
          schema:
            type: string
        - name: order
          in: query
          description: The order parameter specifies the method that will be used to order resources in the API response.
          schema:
            type: string
            default: relevance
            enum:
              - date
              - rating
              - relevance
              - title
              - videoCount
              - viewCount
        - name: pageToken
          in: query
          description: The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.
          schema:
            type: string
        - name: part
          in: query
          description: The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. Set the parameter value to snippet.
          required: true
          schema:
            type: string
            enum:
              - snippet
        - name: publishedAfter
          in: query
          description: The publishedAfter parameter indicates that the API response should only contain resources created after the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).
          schema:
            type: string
        - name: publishedBefore
          in: query
          description: The publishedBefore parameter indicates that the API response should only contain resources created before the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).
          schema:
            type: string
        - name: q
          in: query
          description: |-
            The q parameter specifies the query term to search for.

            Your request can also use the Boolean NOT (-) and OR (|) operators to exclude videos or to find videos that are associated with one of several search terms. For example, to search for videos matching either "boating" or "sailing", set the q parameter value to boating|sailing. Similarly, to search for videos matching either "boating" or "sailing" but not "fishing", set the q parameter value to boating|sailing -fishing. Note that the pipe character must be URL-escaped when it is sent in your API request. The URL-escaped value for the pipe character is %7C.
          schema:
            type: string
        - name: regionCode
          in: query
          description: The regionCode parameter instructs the API to return search results for the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.
          schema:
            type: string
        - name: relatedToVideoId
          in: query
          description: The relatedToVideoId parameter retrieves a list of videos that are related to the video that the parameter value identifies. The parameter value must be set to a YouTube video ID and, if you are using this parameter, the type parameter must be set to video.
          schema:
            type: string
        - name: relevanceLanguage
          in: query
          description: The relevanceLanguage parameter instructs the API to return search results that are most relevant to the specified language. The parameter value is typically an ISO 639-1 two-letter language code. However, you should use the values zh-Hans for simplified Chinese and zh-Hant for traditional Chinese. Please note that results in other languages will still be returned if they are highly relevant to the search query term.
          schema:
            type: string
        - name: safeSearch
          in: query
          description: The safeSearch parameter indicates whether the search results should include restricted content as well as standard content.
          schema:
            type: string
            enum:
              - moderate
              - none
              - strict
        - name: topicId
          in: query
          description: The topicId parameter indicates that the API response should only contain resources associated with the specified topic. The value identifies a Freebase topic ID.
          schema:
            type: string
        - name: type
          in: query
          description: The type parameter restricts a search query to only retrieve a particular type of resource. The value is a comma-separated list of resource types.
          schema:
            type: string
            default: video,channel,playlist
        - name: videoCaption
          in: query
          description: The videoCaption parameter indicates whether the API should filter video search results based on whether they have captions. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
            enum:
              - any
              - closedCaption
              - none
        - name: videoCategoryId
          in: query
          description: The videoCategoryId parameter filters video search results based on their category. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
        - name: videoDefinition
          in: query
          description: The videoDefinition parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos. HD videos are available for playback in at least 720p, though higher resolutions, like 1080p, might also be available. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
            enum:
              - any
              - high
              - standard
        - name: videoDimension
          in: query
          description: The videoDimension parameter lets you restrict a search to only retrieve 2D or 3D videos. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
            enum:
              - 2d
              - 3d
              - any
        - name: videoDuration
          in: query
          description: The videoDuration parameter filters video search results based on their duration. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
            enum:
              - any
              - long
              - medium
              - short
        - name: videoEmbeddable
          in: query
          description: The videoEmbeddable parameter lets you to restrict a search to only videos that can be embedded into a webpage. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
            enum:
              - any
              - 'true'
        - name: videoLicense
          in: query
          description: The videoLicense parameter filters search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
            enum:
              - any
              - creativeCommon
              - youtube
        - name: videoSyndicated
          in: query
          description: The videoSyndicated parameter lets you to restrict a search to only videos that can be played outside youtube.com. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
            enum:
              - any
              - 'true'
        - name: videoType
          in: query
          description: The videoType parameter lets you restrict a search to a particular type of videos. If you specify a value for this parameter, you must also set the type parameter's value to video.
          schema:
            type: string
            enum:
              - any
              - episode
              - movie
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchListResponse'
        '400':
          description: Bad request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not found
          content: {}
        '429':
          description: Too many requests
          content: {}
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
components:
  schemas:
    AccessPolicy:
      type: object
      properties:
        allowed:
          type: boolean
          description: The value of allowed indicates whether the access to the policy is allowed or denied by default.
        exception:
          type: array
          description: A list of region codes that identify countries where the default policy do not apply.
          items:
            type: string
      description: Rights management policy for YouTube resources.
    Activity:
      type: object
      properties:
        contentDetails:
          $ref: '#/components/schemas/ActivityContentDetails'
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the activity.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#activity".'
          default: youtube#activity
        snippet:
          $ref: '#/components/schemas/ActivitySnippet'
      description: An activity resource contains information about an action that a particular channel, or user, has taken on YouTube.The actions reported in activity feeds include rating a video, sharing a video, marking a video as a favorite, commenting on a video, uploading a video, and so forth. Each activity resource identifies the type of action, the channel associated with the action, and the resource(s) associated with the action, such as the video that was rated or uploaded.
    ActivityContentDetails:
      type: object
      properties:
        bulletin:
          $ref: '#/components/schemas/ActivityContentDetailsBulletin'
        channelItem:
          $ref: '#/components/schemas/ActivityContentDetailsChannelItem'
        comment:
          $ref: '#/components/schemas/ActivityContentDetailsComment'
        favorite:
          $ref: '#/components/schemas/ActivityContentDetailsFavorite'
        like:
          $ref: '#/components/schemas/ActivityContentDetailsLike'
        playlistItem:
          $ref: '#/components/schemas/ActivityContentDetailsPlaylistItem'
        promotedItem:
          $ref: '#/components/schemas/ActivityContentDetailsPromotedItem'
        recommendation:
          $ref: '#/components/schemas/ActivityContentDetailsRecommendation'
        social:
          $ref: '#/components/schemas/ActivityContentDetailsSocial'
        subscription:
          $ref: '#/components/schemas/ActivityContentDetailsSubscription'
        upload:
          $ref: '#/components/schemas/ActivityContentDetailsUpload'
      description: 'Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.'
    ActivityContentDetailsBulletin:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
      description: Details about a channel bulletin post.
    ActivityContentDetailsChannelItem:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
      description: Details about a resource which was added to a channel.
    ActivityContentDetailsComment:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
      description: Information about a resource that received a comment.
    ActivityContentDetailsFavorite:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
      description: Information about a video that was marked as a favorite video.
    ActivityContentDetailsLike:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
      description: Information about a resource that received a positive (like) rating.
    ActivityContentDetailsPlaylistItem:
      type: object
      properties:
        playlistId:
          type: string
          description: The value that YouTube uses to uniquely identify the playlist.
        playlistItemId:
          type: string
          description: ID of the item within the playlist.
        resourceId:
          $ref: '#/components/schemas/ResourceId'
      description: Information about a new playlist item.
    ActivityContentDetailsPromotedItem:
      type: object
      properties:
        adTag:
          type: string
          description: The URL the client should fetch to request a promoted item.
        clickTrackingUrl:
          type: string
          description: The URL the client should ping to indicate that the user clicked through on this promoted item.
        creativeViewUrl:
          type: string
          description: The URL the client should ping to indicate that the user was shown this promoted item.
        ctaType:
          type: string
          description: The type of call-to-action, a message to the user indicating action that can be taken.
          enum:
            - unspecified
            - visitAdvertiserSite
        customCtaButtonText:
          type: string
          description: The custom call-to-action button text. If specified, it will override the default button text for the cta_type.
        descriptionText:
          type: string
          description: The text description to accompany the promoted item.
        destinationUrl:
          type: string
          description: The URL the client should direct the user to, if the user chooses to visit the advertiser's website.
        forecastingUrl:
          type: array
          description: The list of forecasting URLs. The client should ping all of these URLs when a promoted item is not available, to indicate that a promoted item could have been shown.
          items:
            type: string
        impressionUrl:
          type: array
          description: The list of impression URLs. The client should ping all of these URLs to indicate that the user was shown this promoted item.
          items:
            type: string
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify the promoted video.
      description: Details about a resource which is being promoted.
    ActivityContentDetailsRecommendation:
      type: object
      properties:
        reason:
          type: string
          description: The reason that the resource is recommended to the user.
          enum:
            - unspecified
            - videoFavorited
            - videoLiked
            - videoWatched
        resourceId:
          $ref: '#/components/schemas/ResourceId'
        seedResourceId:
          $ref: '#/components/schemas/ResourceId'
      description: Information that identifies the recommended resource.
    ActivityContentDetailsSocial:
      type: object
      properties:
        author:
          type: string
          description: The author of the social network post.
        imageUrl:
          type: string
          description: An image of the post's author.
        referenceUrl:
          type: string
          description: The URL of the social network post.
        resourceId:
          $ref: '#/components/schemas/ResourceId'
        type:
          type: string
          description: The name of the social network.
          enum:
            - facebook
            - googlePlus
            - twitter
            - unspecified
      description: Details about a social network post.
    ActivityContentDetailsSubscription:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
      description: Information about a channel that a user subscribed to.
    ActivityContentDetailsUpload:
      type: object
      properties:
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify the uploaded video.
      description: Information about the uploaded video.
    ActivityListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of activities, or events, that match the request criteria.
          items:
            $ref: '#/components/schemas/Activity'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#activityListResponse".'
          default: youtube#activityListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    ActivitySnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel associated with the activity.
        channelTitle:
          type: string
          description: Channel title for the channel responsible for this activity
        description:
          type: string
          description: The description of the resource primarily associated with the activity.
        groupId:
          type: string
          description: The group ID associated with the activity. A group ID identifies user events that are associated with the same user and resource. For example, if a user rates a video and marks the same video as a favorite, the entries for those events would have the same group ID in the user's activity feed. In your user interface, you can avoid repetition by grouping events with the same groupId value.
        publishedAt:
          type: string
          description: The date and time that the video was uploaded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
        title:
          type: string
          description: The title of the resource primarily associated with the activity.
        type:
          type: string
          description: The type of activity that the resource describes.
          enum:
            - bulletin
            - channelItem
            - comment
            - favorite
            - like
            - playlistItem
            - promotedItem
            - recommendation
            - social
            - subscription
            - upload
      description: Basic details about an activity, including title, description, thumbnails, activity type and group.
    Caption:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the caption track.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#caption".'
          default: youtube#caption
        snippet:
          $ref: '#/components/schemas/CaptionSnippet'
      description: A caption resource represents a YouTube caption track. A caption track is associated with exactly one YouTube video.
    CaptionListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of captions that match the request criteria.
          items:
            $ref: '#/components/schemas/Caption'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#captionListResponse".'
          default: youtube#captionListResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    CaptionSnippet:
      type: object
      properties:
        audioTrackType:
          type: string
          description: The type of audio track associated with the caption track.
          enum:
            - commentary
            - descriptive
            - primary
            - unknown
        failureReason:
          type: string
          description: The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed.
          enum:
            - processingFailed
            - unknownFormat
            - unsupportedFormat
        isAutoSynced:
          type: boolean
          description: Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions.
        isCC:
          type: boolean
          description: Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false.
        isDraft:
          type: boolean
          description: Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false.
        isEasyReader:
          type: boolean
          description: Indicates whether caption track is formatted for "easy reader," meaning it is at a third-grade level for language learners. The default value is false.
        isLarge:
          type: boolean
          description: Indicates whether the caption track uses large text for the vision-impaired. The default value is false.
        language:
          type: string
          description: The language of the caption track. The property value is a BCP-47 language tag.
        lastUpdated:
          type: string
          description: The date and time when the caption track was last updated. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        name:
          type: string
          description: The name of the caption track. The name is intended to be visible to the user as an option during playback.
        status:
          type: string
          description: The caption track's status.
          enum:
            - failed
            - serving
            - syncing
        trackKind:
          type: string
          description: The caption track's type.
          enum:
            - ASR
            - forced
            - standard
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify the video associated with the caption track.
      description: Basic details about a caption track, such as its language and name.
    CdnSettings:
      type: object
      properties:
        format:
          type: string
          description: The format of the video stream that you are sending to Youtube.
        frameRate:
          type: string
          description: The frame rate of the inbound video data.
          enum:
            - 30fps
            - 60fps
            - variable
        ingestionInfo:
          $ref: '#/components/schemas/IngestionInfo'
        ingestionType:
          type: string
          description: The method or protocol used to transmit the video stream.
          enum:
            - dash
            - hls
            - rtmp
            - webrtc
        resolution:
          type: string
          description: The resolution of the inbound video data.
          enum:
            - 1080p
            - 1440p
            - 2160p
            - 240p
            - 360p
            - 480p
            - 720p
            - variable
      description: Brief description of the live stream cdn settings.
    Channel:
      type: object
      properties:
        auditDetails:
          $ref: '#/components/schemas/ChannelAuditDetails'
        brandingSettings:
          $ref: '#/components/schemas/ChannelBrandingSettings'
        contentDetails:
          $ref: '#/components/schemas/ChannelContentDetails'
        contentOwnerDetails:
          $ref: '#/components/schemas/ChannelContentOwnerDetails'
        conversionPings:
          $ref: '#/components/schemas/ChannelConversionPings'
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel.
        invideoPromotion:
          $ref: '#/components/schemas/InvideoPromotion'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channel".'
          default: youtube#channel
        localizations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ChannelLocalization'
          description: Localizations for different languages
        snippet:
          $ref: '#/components/schemas/ChannelSnippet'
        statistics:
          $ref: '#/components/schemas/ChannelStatistics'
        status:
          $ref: '#/components/schemas/ChannelStatus'
        topicDetails:
          $ref: '#/components/schemas/ChannelTopicDetails'
      description: A channel resource contains information about a YouTube channel.
    ChannelAuditDetails:
      type: object
      properties:
        communityGuidelinesGoodStanding:
          type: boolean
          description: Whether or not the channel respects the community guidelines.
        contentIdClaimsGoodStanding:
          type: boolean
          description: Whether or not the channel has any unresolved claims.
        copyrightStrikesGoodStanding:
          type: boolean
          description: Whether or not the channel has any copyright strikes.
      description: The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process.
    ChannelBannerResource:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelBannerResource".'
          default: youtube#channelBannerResource
        url:
          type: string
          description: The URL of this banner image.
      description: A channel banner returned as the response to a channel_banner.insert call.
    ChannelBrandingSettings:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/ChannelSettings'
        hints:
          type: array
          description: Additional experimental branding properties.
          items:
            $ref: '#/components/schemas/PropertyValue'
        image:
          $ref: '#/components/schemas/ImageSettings'
        watch:
          $ref: '#/components/schemas/WatchSettings'
      description: Branding properties of a YouTube channel.
    ChannelContentDetails:
      type: object
      properties:
        relatedPlaylists:
          type: object
          properties:
            favorites:
              type: string
              description: The ID of the playlist that contains the channel"s favorite videos. Use the  playlistItems.insert and  playlistItems.delete to add or remove items from that list.
            likes:
              type: string
              description: The ID of the playlist that contains the channel"s liked videos. Use the   playlistItems.insert and  playlistItems.delete to add or remove items from that list.
            uploads:
              type: string
              description: The ID of the playlist that contains the channel"s uploaded videos. Use the  videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.
            watchHistory:
              type: string
              description: The ID of the playlist that contains the channel"s watch history. Use the  playlistItems.insert and  playlistItems.delete to add or remove items from that list.
            watchLater:
              type: string
              description: The ID of the playlist that contains the channel"s watch later playlist. Use the playlistItems.insert and  playlistItems.delete to add or remove items from that list.
      description: Details about the content of a channel.
    ChannelContentOwnerDetails:
      type: object
      properties:
        contentOwner:
          type: string
          description: The ID of the content owner linked to the channel.
        timeLinked:
          type: string
          description: The date and time of when the channel was linked to the content owner. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
      description: The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.
    ChannelConversionPing:
      type: object
      properties:
        context:
          type: string
          description: Defines the context of the ping.
          enum:
            - cview
            - subscribe
            - unsubscribe
        conversionUrl:
          type: string
          description: 'The url (without the schema) that the player shall send the ping to. It''s at caller''s descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping.'
      description: Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.
    ChannelConversionPings:
      type: object
      properties:
        pings:
          type: array
          description: Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.
          items:
            $ref: '#/components/schemas/ChannelConversionPing'
      description: The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.
    ChannelListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of channels that match the request criteria.
          items:
            $ref: '#/components/schemas/Channel'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelListResponse".'
          default: youtube#channelListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    ChannelLocalization:
      type: object
      properties:
        description:
          type: string
          description: The localized strings for channel's description.
        title:
          type: string
          description: The localized strings for channel's title.
      description: Channel localization setting
    ChannelProfileDetails:
      type: object
      properties:
        channelId:
          type: string
          description: The YouTube channel ID.
        channelUrl:
          type: string
          description: The channel's URL.
        displayName:
          type: string
          description: The channel's display name.
        profileImageUrl:
          type: string
          description: The channels's avatar URL.
    ChannelSection:
      type: object
      properties:
        contentDetails:
          $ref: '#/components/schemas/ChannelSectionContentDetails'
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel section.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelSection".'
          default: youtube#channelSection
        localizations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ChannelSectionLocalization'
          description: Localizations for different languages
        snippet:
          $ref: '#/components/schemas/ChannelSectionSnippet'
        targeting:
          $ref: '#/components/schemas/ChannelSectionTargeting'
    ChannelSectionContentDetails:
      type: object
      properties:
        channels:
          type: array
          description: The channel ids for type multiple_channels.
          items:
            type: string
        playlists:
          type: array
          description: The playlist ids for type single_playlist and multiple_playlists. For singlePlaylist, only one playlistId is allowed.
          items:
            type: string
      description: Details about a channelsection, including playlists and channels.
    ChannelSectionListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of ChannelSections that match the request criteria.
          items:
            $ref: '#/components/schemas/ChannelSection'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#channelSectionListResponse".'
          default: youtube#channelSectionListResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    ChannelSectionLocalization:
      type: object
      properties:
        title:
          type: string
          description: The localized strings for channel section's title.
      description: ChannelSection localization setting
    ChannelSectionSnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel that published the channel section.
        defaultLanguage:
          type: string
          description: The language of the channel section's default title and description.
        localized:
          $ref: '#/components/schemas/ChannelSectionLocalization'
        position:
          type: integer
          description: The position of the channel section in the channel.
          format: uint32
        style:
          type: string
          description: The style of the channel section.
          enum:
            - channelsectionStyleUndefined
            - horizontalRow
            - verticalList
        title:
          type: string
          description: The channel section's title for multiple_playlists and multiple_channels.
        type:
          type: string
          description: The type of the channel section.
          enum:
            - allPlaylists
            - channelsectionTypeUndefined
            - completedEvents
            - likedPlaylists
            - likes
            - liveEvents
            - multipleChannels
            - multiplePlaylists
            - popularUploads
            - postedPlaylists
            - postedVideos
            - recentActivity
            - recentPosts
            - recentUploads
            - singlePlaylist
            - subscriptions
            - upcomingEvents
      description: Basic details about a channel section, including title, style and position.
    ChannelSectionTargeting:
      type: object
      properties:
        countries:
          type: array
          description: The country the channel section is targeting.
          items:
            type: string
        languages:
          type: array
          description: The language the channel section is targeting.
          items:
            type: string
        regions:
          type: array
          description: The region the channel section is targeting.
          items:
            type: string
      description: ChannelSection targeting setting.
    ChannelSettings:
      type: object
      properties:
        country:
          type: string
          description: The country of the channel.
        defaultLanguage:
          type: string
        defaultTab:
          type: string
          description: Which content tab users should see when viewing the channel.
        description:
          type: string
          description: Specifies the channel description.
        featuredChannelsTitle:
          type: string
          description: Title for the featured channels tab.
        featuredChannelsUrls:
          type: array
          description: The list of featured channels.
          items:
            type: string
        keywords:
          type: string
          description: Lists keywords associated with the channel, comma-separated.
        moderateComments:
          type: boolean
          description: Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible.
        profileColor:
          type: string
          description: A prominent color that can be rendered on this channel page.
        showBrowseView:
          type: boolean
          description: Whether the tab to browse the videos should be displayed.
        showRelatedChannels:
          type: boolean
          description: Whether related channels should be proposed.
        title:
          type: string
          description: Specifies the channel title.
        trackingAnalyticsAccountId:
          type: string
          description: The ID for a Google Analytics account to track and measure traffic to the channels.
        unsubscribedTrailer:
          type: string
          description: The trailer of the channel, for users that are not subscribers.
      description: Branding properties for the channel view.
    ChannelSnippet:
      type: object
      properties:
        country:
          type: string
          description: The country of the channel.
        customUrl:
          type: string
          description: The custom url of the channel.
        defaultLanguage:
          type: string
          description: The language of the channel's default title and description.
        description:
          type: string
          description: The description of the channel.
        localized:
          $ref: '#/components/schemas/ChannelLocalization'
        publishedAt:
          type: string
          description: The date and time that the channel was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
        title:
          type: string
          description: The channel's title.
      description: Basic details about a channel, including title, description and thumbnails.
    ChannelStatistics:
      type: object
      properties:
        commentCount:
          type: string
          description: The number of comments for the channel.
          format: uint64
        hiddenSubscriberCount:
          type: boolean
          description: Whether or not the number of subscribers is shown for this user.
        subscriberCount:
          type: string
          description: The number of subscribers that the channel has.
          format: uint64
        videoCount:
          type: string
          description: The number of videos uploaded to the channel.
          format: uint64
        viewCount:
          type: string
          description: The number of times the channel has been viewed.
          format: uint64
      description: 'Statistics about a channel: number of subscribers, number of videos in the channel, etc.'
    ChannelStatus:
      type: object
      properties:
        isLinked:
          type: boolean
          description: If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn't have a public YouTube identity.
        longUploadsStatus:
          type: string
          description: The long uploads status of this channel. See
          enum:
            - allowed
            - disallowed
            - eligible
            - longUploadsUnspecified
        privacyStatus:
          type: string
          description: Privacy status of the channel.
          enum:
            - private
            - public
            - unlisted
      description: JSON template for the status part of a channel.
    ChannelTopicDetails:
      type: object
      properties:
        topicCategories:
          type: array
          description: A list of Wikipedia URLs that describe the channel's content.
          items:
            type: string
        topicIds:
          type: array
          description: A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API.
          items:
            type: string
      description: Freebase topic information related to the channel.
    Comment:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the comment.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#comment".'
          default: youtube#comment
        snippet:
          $ref: '#/components/schemas/CommentSnippet'
      description: A comment represents a single YouTube comment.
    CommentListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of comments that match the request criteria.
          items:
            $ref: '#/components/schemas/Comment'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#commentListResponse".'
          default: youtube#commentListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    CommentSnippet:
      type: object
      properties:
        authorChannelId:
          type: object
          properties:
            value:
              type: string
          description: The id of the author's YouTube channel, if any.
        authorChannelUrl:
          type: string
          description: Link to the author's YouTube channel, if any.
        authorDisplayName:
          type: string
          description: The name of the user who posted the comment.
        authorProfileImageUrl:
          type: string
          description: The URL for the avatar of the user who posted the comment.
        canRate:
          type: boolean
          description: Whether the current viewer can rate this comment.
        channelId:
          type: string
          description: The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel.
        likeCount:
          type: integer
          description: The total number of likes this comment has received.
          format: uint32
        moderationStatus:
          type: string
          description: The comment's moderation status. Will not be set if the comments were requested through the id filter.
          enum:
            - heldForReview
            - likelySpam
            - published
            - rejected
        parentId:
          type: string
          description: The unique id of the parent comment, only set for replies.
        publishedAt:
          type: string
          description: The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        textDisplay:
          type: string
          description: The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc.
        textOriginal:
          type: string
          description: The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author.
        updatedAt:
          type: string
          description: The date and time when was last updated . The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        videoId:
          type: string
          description: The ID of the video the comment refers to, if any.
        viewerRating:
          type: string
          description: The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.
          enum:
            - dislike
            - like
            - none
            - unspecified
      description: Basic details about a comment, such as its author and text.
    CommentThread:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the comment thread.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#commentThread".'
          default: youtube#commentThread
        replies:
          $ref: '#/components/schemas/CommentThreadReplies'
        snippet:
          $ref: '#/components/schemas/CommentThreadSnippet'
      description: A comment thread represents information that applies to a top level comment and all its replies. It can also include the top level comment itself and some of the replies.
    CommentThreadListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of comment threads that match the request criteria.
          items:
            $ref: '#/components/schemas/CommentThread'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#commentThreadListResponse".'
          default: youtube#commentThreadListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    CommentThreadReplies:
      type: object
      properties:
        comments:
          type: array
          description: A limited number of replies. Unless the number of replies returned equals total_reply_count in the snippet the returned replies are only a subset of the total number of replies.
          items:
            $ref: '#/components/schemas/Comment'
      description: Comments written in (direct or indirect) reply to the top level comment.
    CommentThreadSnippet:
      type: object
      properties:
        canReply:
          type: boolean
          description: Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field.
        channelId:
          type: string
          description: The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself.
        isPublic:
          type: boolean
          description: Whether the thread (and therefore all its comments) is visible to all YouTube users.
        topLevelComment:
          $ref: '#/components/schemas/Comment'
        totalReplyCount:
          type: integer
          description: The total number of replies (not including the top level comment).
          format: uint32
        videoId:
          type: string
          description: The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment.
      description: Basic details about a comment thread.
    ContentRating:
      type: object
      properties:
        acbRating:
          type: string
          description: The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming.
          enum:
            - acbC
            - acbE
            - acbG
            - acbM
            - acbMa15plus
            - acbP
            - acbPg
            - acbR18plus
            - acbUnrated
        agcomRating:
          type: string
          description: The video's rating from Italy's Autorità per le Garanzie nelle Comunicazioni (AGCOM).
          enum:
            - agcomT
            - agcomUnrated
            - agcomVm14
            - agcomVm18
        anatelRating:
          type: string
          description: The video's Anatel (Asociación Nacional de Televisión) rating for Chilean television.
          enum:
            - anatelA
            - anatelF
            - anatelI
            - anatelI10
            - anatelI12
            - anatelI7
            - anatelR
            - anatelUnrated
        bbfcRating:
          type: string
          description: The video's British Board of Film Classification (BBFC) rating.
          enum:
            - bbfc12
            - bbfc12a
            - bbfc15
            - bbfc18
            - bbfcPg
            - bbfcR18
            - bbfcU
            - bbfcUnrated
        bfvcRating:
          type: string
          description: The video's rating from Thailand's Board of Film and Video Censors.
          enum:
            - bfvc13
            - bfvc15
            - bfvc18
            - bfvc20
            - bfvcB
            - bfvcE
            - bfvcG
            - bfvcUnrated
        bmukkRating:
          type: string
          description: The video's rating from the Austrian Board of Media Classification (Bundesministerium für Unterricht, Kunst und Kultur).
          enum:
            - bmukk10
            - bmukk12
            - bmukk14
            - bmukk16
            - bmukk6
            - bmukk8
            - bmukkAa
            - bmukkUnrated
        catvRating:
          type: string
          description: Rating system for Canadian TV - Canadian TV Classification System The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
          enum:
            - catv14plus
            - catv18plus
            - catvC
            - catvC8
            - catvG
            - catvPg
            - catvUnrated
        catvfrRating:
          type: string
          description: The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
          enum:
            - catvfr13plus
            - catvfr16plus
            - catvfr18plus
            - catvfr8plus
            - catvfrG
            - catvfrUnrated
        cbfcRating:
          type: string
          description: The video's Central Board of Film Certification (CBFC - India) rating.
          enum:
            - cbfcA
            - cbfcS
            - cbfcU
            - cbfcUA
            - cbfcUnrated
        cccRating:
          type: string
          description: The video's Consejo de Calificación Cinematográfica (Chile) rating.
          enum:
            - ccc14
            - ccc18
            - ccc18s
            - ccc18v
            - ccc6
            - cccTe
            - cccUnrated
        cceRating:
          type: string
          description: The video's rating from Portugal's Comissão de Classificação de Espect´culos.
          enum:
            - cceM12
            - cceM14
            - cceM16
            - cceM18
            - cceM4
            - cceM6
            - cceUnrated
        chfilmRating:
          type: string
          description: The video's rating in Switzerland.
          enum:
            - chfilm0
            - chfilm12
            - chfilm16
            - chfilm18
            - chfilm6
            - chfilmUnrated
        chvrsRating:
          type: string
          description: The video's Canadian Home Video Rating System (CHVRS) rating.
          enum:
            - chvrs14a
            - chvrs18a
            - chvrsE
            - chvrsG
            - chvrsPg
            - chvrsR
            - chvrsUnrated
        cicfRating:
          type: string
          description: The video's rating from the Commission de Contrôle des Films (Belgium).
          enum:
            - cicfE
            - cicfKntEna
            - cicfKtEa
            - cicfUnrated
        cnaRating:
          type: string
          description: The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA).
          enum:
            - cna12
            - cna15
            - cna18
            - cna18plus
            - cnaAp
            - cnaUnrated
        cncRating:
          type: string
          description: Rating system in France - Commission de classification cinematographique
          enum:
            - cnc10
            - cnc12
            - cnc16
            - cnc18
            - cncE
            - cncInterdiction
            - cncT
            - cncUnrated
        csaRating:
          type: string
          description: The video's rating from France's Conseil supérieur de l?audiovisuel, which rates broadcast content.
          enum:
            - csa10
            - csa12
            - csa16
            - csa18
            - csaInterdiction
            - csaT
            - csaUnrated
        cscfRating:
          type: string
          description: The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF).
          enum:
            - cscf12
            - cscf16
            - cscf18
            - cscf6
            - cscf9
            - cscfA
            - cscfAl
            - cscfUnrated
        czfilmRating:
          type: string
          description: The video's rating in the Czech Republic.
          enum:
            - czfilm12
            - czfilm14
            - czfilm18
            - czfilmU
            - czfilmUnrated
        djctqRating:
          type: string
          description: The video's Departamento de Justiça, Classificação, Qualificação e Títulos (DJCQT - Brazil) rating.
          enum:
            - djctq10
            - djctq1012
            - djctq1014
            - djctq1016
            - djctq1018
            - djctq12
            - djctq1214
            - djctq1216
            - djctq1218
            - djctq14
            - djctq1416
            - djctq1418
            - djctq16
            - djctq1618
            - djctq18
            - djctqEr
            - djctqL
            - djctqL10
            - djctqL12
            - djctqL14
            - djctqL16
            - djctqL18
            - djctqUnrated
        djctqRatingReasons:
          type: array
          description: Reasons that explain why the video received its DJCQT (Brazil) rating.
          items:
            type: string
            enum:
              - djctqCriminalActs
              - djctqDrugs
              - djctqExplicitSex
              - djctqExtremeViolence
              - djctqIllegalDrugs
              - djctqImpactingContent
              - djctqInappropriateLanguage
              - djctqLegalDrugs
              - djctqNudity
              - djctqSex
              - djctqSexualContent
              - djctqViolence
        ecbmctRating:
          type: string
          description: Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism
          enum:
            - ecbmct13a
            - ecbmct13plus
            - ecbmct15a
            - ecbmct15plus
            - ecbmct18plus
            - ecbmct7a
            - ecbmct7plus
            - ecbmctG
            - ecbmctUnrated
        eefilmRating:
          type: string
          description: The video's rating in Estonia.
          enum:
            - eefilmK12
            - eefilmK14
            - eefilmK16
            - eefilmK6
            - eefilmL
            - eefilmMs12
            - eefilmMs6
            - eefilmPere
            - eefilmUnrated
        egfilmRating:
          type: string
          description: The video's rating in Egypt.
          enum:
            - egfilm18
            - egfilmBn
            - egfilmGn
            - egfilmUnrated
        eirinRating:
          type: string
          description: The video's Eirin (映倫) rating. Eirin is the Japanese rating system.
          enum:
            - eirinG
            - eirinPg12
            - eirinR15plus
            - eirinR18plus
            - eirinUnrated
        fcbmRating:
          type: string
          description: The video's rating from Malaysia's Film Censorship Board.
          enum:
            - fcbm18
            - fcbm18pa
            - fcbm18pl
            - fcbm18sg
            - fcbm18sx
            - fcbmP13
            - fcbmPg13
            - fcbmU
            - fcbmUnrated
        fcoRating:
          type: string
          description: The video's rating from Hong Kong's Office for Film, Newspaper and Article Administration.
          enum:
            - fcoI
            - fcoIi
            - fcoIia
            - fcoIib
            - fcoIii
            - fcoUnrated
        fmocRating:
          type: string
          description: This property has been deprecated. Use the contentDetails.contentRating.cncRating instead.
          enum:
            - fmoc10
            - fmoc12
            - fmoc16
            - fmoc18
            - fmocE
            - fmocU
            - fmocUnrated
        fpbRating:
          type: string
          description: The video's rating from South Africa's Film and Publication Board.
          enum:
            - fpb10
            - fpb1012Pg
            - fpb13
            - fpb16
            - fpb18
            - fpb79Pg
            - fpbA
            - fpbPg
            - fpbUnrated
            - fpbX18
            - fpbXx
        fpbRatingReasons:
          type: array
          description: Reasons that explain why the video received its FPB (South Africa) rating.
          items:
            type: string
            enum:
              - fpbBlasphemy
              - fpbCriminalTechniques
              - fpbDrugs
              - fpbHorror
              - fpbImitativeActsTechniques
              - fpbLanguage
              - fpbNudity
              - fpbPrejudice
              - fpbSex
              - fpbSexualViolence
              - fpbViolence
        fskRating:
          type: string
          description: The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating.
          enum:
            - fsk0
            - fsk12
            - fsk16
            - fsk18
            - fsk6
            - fskUnrated
        grfilmRating:
          type: string
          description: The video's rating in Greece.
          enum:
            - grfilmE
            - grfilmK
            - grfilmK12
            - grfilmK13
            - grfilmK15
            - grfilmK17
            - grfilmK18
            - grfilmUnrated
        icaaRating:
          type: string
          description: The video's Instituto de la Cinematografía y de las Artes Audiovisuales (ICAA - Spain) rating.
          enum:
            - icaa12
            - icaa13
            - icaa16
            - icaa18
            - icaa7
            - icaaApta
            - icaaUnrated
            - icaaX
        ifcoRating:
          type: string
          description: The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information.
          enum:
            - ifco12
            - ifco12a
            - ifco15
            - ifco15a
            - ifco16
            - ifco18
            - ifcoG
            - ifcoPg
            - ifcoUnrated
        ilfilmRating:
          type: string
          description: The video's rating in Israel.
          enum:
            - ilfilm12
            - ilfilm14
            - ilfilm16
            - ilfilm18
            - ilfilmAa
            - ilfilmUnrated
        incaaRating:
          type: string
          description: The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating.
          enum:
            - incaaAtp
            - incaaC
            - incaaSam13
            - incaaSam16
            - incaaSam18
            - incaaUnrated
        kfcbRating:
          type: string
          description: The video's rating from the Kenya Film Classification Board.
          enum:
            - kfcb16plus
            - kfcbG
            - kfcbPg
            - kfcbR
            - kfcbUnrated
        kijkwijzerRating:
          type: string
          description: voor de Classificatie van Audiovisuele Media (Netherlands).
          enum:
            - kijkwijzer12
            - kijkwijzer16
            - kijkwijzer18
            - kijkwijzer6
            - kijkwijzer9
            - kijkwijzerAl
            - kijkwijzerUnrated
        kmrbRating:
          type: string
          description: The video's Korea Media Rating Board (영상물등급위원회) rating. The KMRB rates videos in South Korea.
          enum:
            - kmrb12plus
            - kmrb15plus
            - kmrbAll
            - kmrbR
            - kmrbTeenr
            - kmrbUnrated
        lsfRating:
          type: string
          description: The video's rating from Indonesia's Lembaga Sensor Film.
          enum:
            - lsf13
            - lsf17
            - lsf21
            - lsfA
            - lsfBo
            - lsfD
            - lsfR
            - lsfSu
            - lsfUnrated
        mccaaRating:
          type: string
          description: The video's rating from Malta's Film Age-Classification Board.
          enum:
            - mccaa12
            - mccaa12a
            - mccaa14
            - mccaa15
            - mccaa16
            - mccaa18
            - mccaaPg
            - mccaaU
            - mccaaUnrated
        mccypRating:
          type: string
          description: The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People.
          enum:
            - mccyp11
            - mccyp15
            - mccyp7
            - mccypA
            - mccypUnrated
        mcstRating:
          type: string
          description: The video's rating system for Vietnam - MCST
          enum:
            - mcst0
            - mcst16plus
            - mcstC13
            - mcstC16
            - mcstC18
            - mcstGPg
            - mcstP
            - mcstUnrated
        mdaRating:
          type: string
          description: The video's rating from Singapore's Media Development Authority (MDA) and, specifically, it's Board of Film Censors (BFC).
          enum:
            - mdaG
            - mdaM18
            - mdaNc16
            - mdaPg
            - mdaPg13
            - mdaR21
            - mdaUnrated
        medietilsynetRating:
          type: string
          description: The video's rating from Medietilsynet, the Norwegian Media Authority.
          enum:
            - medietilsynet11
            - medietilsynet12
            - medietilsynet15
            - medietilsynet18
            - medietilsynet6
            - medietilsynet7
            - medietilsynet9
            - medietilsynetA
            - medietilsynetUnrated
        mekuRating:
          type: string
          description: The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute).
          enum:
            - meku12
            - meku16
            - meku18
            - meku7
            - mekuS
            - mekuUnrated
        menaMpaaRating:
          type: string
          description: The rating system for MENA countries, a clone of MPAA. It is needed to
          enum:
            - menaMpaaG
            - menaMpaaPg
            - menaMpaaPg13
            - menaMpaaR
            - menaMpaaUnrated
        mibacRating:
          type: string
          description: The video's rating from the Ministero dei Beni e delle Attività Culturali e del Turismo (Italy).
          enum:
            - mibacT
            - mibacUnrated
            - mibacVap
            - mibacVm12
            - mibacVm14
            - mibacVm18
        mocRating:
          type: string
          description: The video's Ministerio de Cultura (Colombia) rating.
          enum:
            - moc12
            - moc15
            - moc18
            - moc7
            - mocBanned
            - mocE
            - mocT
            - mocUnrated
            - mocX
        moctwRating:
          type: string
          description: The video's rating from Taiwan's Ministry of Culture (文化部).
          enum:
            - moctwG
            - moctwP
            - moctwPg
            - moctwR
            - moctwR12
            - moctwR15
            - moctwUnrated
        mpaaRating:
          type: string
          description: The video's Motion Picture Association of America (MPAA) rating.
          enum:
            - mpaaG
            - mpaaNc17
            - mpaaPg
            - mpaaPg13
            - mpaaR
            - mpaaUnrated
            - mpaaX
        mpaatRating:
          type: string
          description: The rating system for trailer, DVD, and Ad in the US. See http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html.
          enum:
            - mpaatGb
            - mpaatRb
        mtrcbRating:
          type: string
          description: The video's rating from the Movie and Television Review and Classification Board (Philippines).
          enum:
            - mtrcbG
            - mtrcbPg
            - mtrcbR13
            - mtrcbR16
            - mtrcbR18
            - mtrcbUnrated
            - mtrcbX
        nbcRating:
          type: string
          description: The video's rating from the Maldives National Bureau of Classification.
          enum:
            - nbc12plus
            - nbc15plus
            - nbc18plus
            - nbc18plusr
            - nbcG
            - nbcPg
            - nbcPu
            - nbcUnrated
        nbcplRating:
          type: string
          description: The video's rating in Poland.
          enum:
            - nbcpl18plus
            - nbcplI
            - nbcplIi
            - nbcplIii
            - nbcplIv
            - nbcplUnrated
        nfrcRating:
          type: string
          description: The video's rating from the Bulgarian National Film Center.
          enum:
            - nfrcA
            - nfrcB
            - nfrcC
            - nfrcD
            - nfrcUnrated
            - nfrcX
        nfvcbRating:
          type: string
          description: The video's rating from Nigeria's National Film and Video Censors Board.
          enum:
            - nfvcb12
            - nfvcb12a
            - nfvcb15
            - nfvcb18
            - nfvcbG
            - nfvcbPg
            - nfvcbRe
            - nfvcbUnrated
        nkclvRating:
          type: string
          description: The video's rating from the Nacionãlais Kino centrs (National Film Centre of Latvia).
          enum:
            - nkclv12plus
            - nkclv16plus
            - nkclv18plus
            - nkclv7plus
            - nkclvU
            - nkclvUnrated
        nmcRating:
          type: string
          enum:
            - nmc15plus
            - nmc18plus
            - nmc18tc
            - nmcG
            - nmcPg
            - nmcPg13
            - nmcPg15
            - nmcUnrated
        oflcRating:
          type: string
          description: The video's Office of Film and Literature Classification (OFLC - New Zealand) rating.
          enum:
            - oflcG
            - oflcM
            - oflcPg
            - oflcR13
            - oflcR15
            - oflcR16
            - oflcR18
            - oflcRp13
            - oflcRp16
            - oflcRp18
            - oflcUnrated
        pefilmRating:
          type: string
          description: The video's rating in Peru.
          enum:
            - pefilm14
            - pefilm18
            - pefilmPg
            - pefilmPt
            - pefilmUnrated
        rcnofRating:
          type: string
          description: The video's rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film.
          enum:
            - rcnofI
            - rcnofIi
            - rcnofIii
            - rcnofIv
            - rcnofUnrated
            - rcnofV
            - rcnofVi
        resorteviolenciaRating:
          type: string
          description: The video's rating in Venezuela.
          enum:
            - resorteviolenciaA
            - resorteviolenciaB
            - resorteviolenciaC
            - resorteviolenciaD
            - resorteviolenciaE
            - resorteviolenciaUnrated
        rtcRating:
          type: string
          description: The video's General Directorate of Radio, Television and Cinematography (Mexico) rating.
          enum:
            - rtcA
            - rtcAa
            - rtcB
            - rtcB15
            - rtcC
            - rtcD
            - rtcUnrated
        rteRating:
          type: string
          description: The video's rating from Ireland's Raidió Teilifís Éireann.
          enum:
            - rteCh
            - rteGa
            - rteMa
            - rtePs
            - rteUnrated
        russiaRating:
          type: string
          description: The video's National Film Registry of the Russian Federation (MKRF - Russia) rating.
          enum:
            - russia0
            - russia12
            - russia16
            - russia18
            - russia6
            - russiaUnrated
        skfilmRating:
          type: string
          description: The video's rating in Slovakia.
          enum:
            - skfilmG
            - skfilmP2
            - skfilmP5
            - skfilmP8
            - skfilmUnrated
        smaisRating:
          type: string
          description: The video's rating in Iceland.
          enum:
            - smais12
            - smais14
            - smais16
            - smais18
            - smais7
            - smaisL
            - smaisUnrated
        smsaRating:
          type: string
          description: The video's rating from Statens medieråd (Sweden's National Media Council).
          enum:
            - smsa11
            - smsa15
            - smsa7
            - smsaA
            - smsaUnrated
        tvpgRating:
          type: string
          description: The video's TV Parental Guidelines (TVPG) rating.
          enum:
            - pg14
            - tvpgG
            - tvpgMa
            - tvpgPg
            - tvpgUnrated
            - tvpgY
            - tvpgY7
            - tvpgY7Fv
        ytRating:
          type: string
          description: A rating that YouTube uses to identify age-restricted content.
          enum:
            - ytAgeRestricted
      description: 'Ratings schemes. The country-specific ratings are mostly for movies and shows. NEXT_ID: 72'
    GeoPoint:
      type: object
      properties:
        altitude:
          type: number
          description: Altitude above the reference ellipsoid, in meters.
          format: double
        latitude:
          type: number
          description: Latitude in degrees.
          format: double
        longitude:
          type: number
          description: Longitude in degrees.
          format: double
      description: Geographical coordinates of a point, in WGS84.
    GuideCategory:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the guide category.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#guideCategory".'
          default: youtube#guideCategory
        snippet:
          $ref: '#/components/schemas/GuideCategorySnippet'
      description: A guideCategory resource identifies a category that YouTube algorithmically assigns based on a channel's content or other indicators, such as the channel's popularity. The list is similar to video categories, with the difference being that a video's uploader can assign a video category but only YouTube can assign a channel category.
    GuideCategoryListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of categories that can be associated with YouTube channels. In this map, the category ID is the map key, and its value is the corresponding guideCategory resource.
          items:
            $ref: '#/components/schemas/GuideCategory'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#guideCategoryListResponse".'
          default: youtube#guideCategoryListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    GuideCategorySnippet:
      type: object
      properties:
        channelId:
          type: string
          default: UCBR8-60-B28hp2BmDPdntcQ
        title:
          type: string
          description: Description of the guide category.
      description: Basic details about a guide category.
    I18nLanguage:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the i18n language.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nLanguage".'
          default: youtube#i18nLanguage
        snippet:
          $ref: '#/components/schemas/I18nLanguageSnippet'
      description: An i18nLanguage resource identifies a UI language currently supported by YouTube.
    I18nLanguageListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of supported i18n languages. In this map, the i18n language ID is the map key, and its value is the corresponding i18nLanguage resource.
          items:
            $ref: '#/components/schemas/I18nLanguage'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nLanguageListResponse".'
          default: youtube#i18nLanguageListResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    I18nLanguageSnippet:
      type: object
      properties:
        hl:
          type: string
          description: A short BCP-47 code that uniquely identifies a language.
        name:
          type: string
          description: The human-readable name of the language in the language itself.
      description: Basic details about an i18n language, such as language code and human-readable name.
    I18nRegion:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the i18n region.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nRegion".'
          default: youtube#i18nRegion
        snippet:
          $ref: '#/components/schemas/I18nRegionSnippet'
      description: A i18nRegion resource identifies a region where YouTube is available.
    I18nRegionListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of regions where YouTube is available. In this map, the i18n region ID is the map key, and its value is the corresponding i18nRegion resource.
          items:
            $ref: '#/components/schemas/I18nRegion'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#i18nRegionListResponse".'
          default: youtube#i18nRegionListResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    I18nRegionSnippet:
      type: object
      properties:
        gl:
          type: string
          description: The region code as a 2-letter ISO country code.
        name:
          type: string
          description: The human-readable name of the region.
      description: Basic details about an i18n region, such as region code and human-readable name.
    ImageSettings:
      type: object
      properties:
        backgroundImageUrl:
          $ref: '#/components/schemas/LocalizedProperty'
        bannerExternalUrl:
          type: string
          description: This is used only in update requests; if it's set, we use this URL to generate all of the above banner URLs.
        bannerImageUrl:
          type: string
          description: Banner image. Desktop size (1060x175).
        bannerMobileExtraHdImageUrl:
          type: string
          description: Banner image. Mobile size high resolution (1440x395).
        bannerMobileHdImageUrl:
          type: string
          description: Banner image. Mobile size high resolution (1280x360).
        bannerMobileImageUrl:
          type: string
          description: Banner image. Mobile size (640x175).
        bannerMobileLowImageUrl:
          type: string
          description: Banner image. Mobile size low resolution (320x88).
        bannerMobileMediumHdImageUrl:
          type: string
          description: Banner image. Mobile size medium/high resolution (960x263).
        bannerTabletExtraHdImageUrl:
          type: string
          description: Banner image. Tablet size extra high resolution (2560x424).
        bannerTabletHdImageUrl:
          type: string
          description: Banner image. Tablet size high resolution (2276x377).
        bannerTabletImageUrl:
          type: string
          description: Banner image. Tablet size (1707x283).
        bannerTabletLowImageUrl:
          type: string
          description: Banner image. Tablet size low resolution (1138x188).
        bannerTvHighImageUrl:
          type: string
          description: Banner image. TV size high resolution (1920x1080).
        bannerTvImageUrl:
          type: string
          description: Banner image. TV size extra high resolution (2120x1192).
        bannerTvLowImageUrl:
          type: string
          description: Banner image. TV size low resolution (854x480).
        bannerTvMediumImageUrl:
          type: string
          description: Banner image. TV size medium resolution (1280x720).
        largeBrandedBannerImageImapScript:
          $ref: '#/components/schemas/LocalizedProperty'
        largeBrandedBannerImageUrl:
          $ref: '#/components/schemas/LocalizedProperty'
        smallBrandedBannerImageImapScript:
          $ref: '#/components/schemas/LocalizedProperty'
        smallBrandedBannerImageUrl:
          $ref: '#/components/schemas/LocalizedProperty'
        trackingImageUrl:
          type: string
          description: The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages.
        watchIconImageUrl:
          type: string
          description: The URL for the image that appears above the top-left corner of the video player. This is a 25-pixel-high image with a flexible width that cannot exceed 170 pixels.
      description: Branding properties for images associated with the channel.
    IngestionInfo:
      type: object
      properties:
        backupIngestionAddress:
          type: string
          description: The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL.
        ingestionAddress:
          type: string
          description: |-
            The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL.

            Depending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format:

            STREAM_URL/STREAM_NAME
        streamName:
          type: string
          description: The HTTP or RTMP stream name that YouTube assigns to the video stream.
      description: Describes information necessary for ingesting an RTMP or an HTTP stream.
    InvideoBranding:
      type: object
      properties:
        imageBytes:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        imageUrl:
          type: string
        position:
          $ref: '#/components/schemas/InvideoPosition'
        targetChannelId:
          type: string
        timing:
          $ref: '#/components/schemas/InvideoTiming'
    InvideoPosition:
      type: object
      properties:
        cornerPosition:
          type: string
          description: Describes in which corner of the video the visual widget will appear.
          enum:
            - bottomLeft
            - bottomRight
            - topLeft
            - topRight
        type:
          type: string
          description: Defines the position type.
          enum:
            - corner
      description: Describes the spatial position of a visual widget inside a video. It is a union of various position types, out of which only will be set one.
    InvideoPromotion:
      type: object
      properties:
        defaultTiming:
          $ref: '#/components/schemas/InvideoTiming'
        items:
          type: array
          description: List of promoted items in decreasing priority.
          items:
            $ref: '#/components/schemas/PromotedItem'
        position:
          $ref: '#/components/schemas/InvideoPosition'
        useSmartTiming:
          type: boolean
          description: Indicates whether the channel's promotional campaign uses "smart timing." This feature attempts to show promotions at a point in the video when they are more likely to be clicked and less likely to disrupt the viewing experience. This feature also picks up a single promotion to show on each video.
      description: Describes an invideo promotion campaign consisting of multiple promoted items. A campaign belongs to a single channel_id.
    InvideoTiming:
      type: object
      properties:
        durationMs:
          type: string
          description: Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default.
          format: uint64
        offsetMs:
          type: string
          description: Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds.
          format: uint64
        type:
          type: string
          description: Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video.
          enum:
            - offsetFromEnd
            - offsetFromStart
      description: Describes a temporal position of a visual widget inside a video.
    LanguageTag:
      type: object
      properties:
        value:
          type: string
    LevelDetails:
      type: object
      properties:
        displayName:
          type: string
    LiveBroadcast:
      type: object
      properties:
        contentDetails:
          $ref: '#/components/schemas/LiveBroadcastContentDetails'
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the broadcast.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveBroadcast".'
          default: youtube#liveBroadcast
        snippet:
          $ref: '#/components/schemas/LiveBroadcastSnippet'
        statistics:
          $ref: '#/components/schemas/LiveBroadcastStatistics'
        status:
          $ref: '#/components/schemas/LiveBroadcastStatus'
      description: A liveBroadcast resource represents an event that will be streamed, via live video, on YouTube.
    LiveBroadcastContentDetails:
      type: object
      properties:
        boundStreamId:
          type: string
          description: This value uniquely identifies the live stream bound to the broadcast.
        boundStreamLastUpdateTimeMs:
          type: string
          description: The date and time that the live stream referenced by boundStreamId was last updated.
          format: date-time
        closedCaptionsType:
          type: string
          enum:
            - closedCaptionsDisabled
            - closedCaptionsEmbedded
            - closedCaptionsHttpPost
        enableAutoStart:
          type: boolean
          description: This setting indicates whether auto start is enabled for this broadcast.
        enableClosedCaptions:
          type: boolean
          description: This setting indicates whether HTTP POST closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API. This is mutually exclusive with using the closed_captions_type property, and is equivalent to setting closed_captions_type to CLOSED_CAPTIONS_HTTP_POST.
        enableContentEncryption:
          type: boolean
          description: This setting indicates whether YouTube should enable content encryption for the broadcast.
        enableDvr:
          type: boolean
          description: |-
            This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true.



            Important: You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends.
        enableEmbed:
          type: boolean
          description: This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video.
        enableLowLatency:
          type: boolean
          description: Indicates whether this broadcast has low latency enabled.
        latencyPreference:
          type: string
          description: If both this and enable_low_latency are set, they must match. LATENCY_NORMAL should match enable_low_latency=false LATENCY_LOW should match enable_low_latency=true LATENCY_ULTRA_LOW should have enable_low_latency omitted.
          enum:
            - low
            - normal
            - ultraLow
        mesh:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        monitorStream:
          $ref: '#/components/schemas/MonitorStreamInfo'
        projection:
          type: string
          description: The projection format of this broadcast. This defaults to rectangular.
          enum:
            - '360'
            - mesh
            - rectangular
        recordFromStart:
          type: boolean
          description: |-
            Automatically start recording after the event goes live. The default value for this property is true.



            Important: You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback.
        startWithSlate:
          type: boolean
          description: This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast's status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint's eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers.
        stereoLayout:
          type: string
          enum:
            - left_right
            - mono
            - top_bottom
      description: Detailed settings of a broadcast.
    LiveBroadcastListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of broadcasts that match the request criteria.
          items:
            $ref: '#/components/schemas/LiveBroadcast'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveBroadcastListResponse".'
          default: youtube#liveBroadcastListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    LiveBroadcastSnippet:
      type: object
      properties:
        actualEndTime:
          type: string
          description: The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        actualStartTime:
          type: string
          description: The date and time that the broadcast actually started. This information is only available once the broadcast's state is live. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        broadcastType:
          type: string
          enum:
            - fludd
            - fluddArchive
            - gplusHoa
            - lcrEncoder
            - mobile
            - persistent
            - premiere
            - unspecified
            - webcam
            - ytHoa
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast.
        description:
          type: string
          description: The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource.
        isDefaultBroadcast:
          type: boolean
        liveChatId:
          type: string
          description: The id of the live chat for this broadcast.
        publishedAt:
          type: string
          description: The date and time that the broadcast was added to YouTube's live broadcast schedule. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        scheduledEndTime:
          type: string
          description: The date and time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        scheduledStartTime:
          type: string
          description: The date and time that the broadcast is scheduled to start. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
        title:
          type: string
          description: The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource.
    LiveBroadcastStatistics:
      type: object
      properties:
        concurrentViewers:
          type: string
          description: The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.
          format: uint64
        totalChatCount:
          type: string
          description: The total number of live chat messages currently on the broadcast. The property and its value will be present if the broadcast is public, has the live chat feature enabled, and has at least one message. Note that this field will not be filled after the broadcast ends. So this property would not identify the number of chat messages for an archived video of a completed live broadcast.
          format: uint64
      description: Statistics about the live broadcast. These represent a snapshot of the values at the time of the request. Statistics are only returned for live broadcasts.
    LiveBroadcastStatus:
      type: object
      properties:
        lifeCycleStatus:
          type: string
          description: The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method.
          enum:
            - complete
            - created
            - live
            - liveStarting
            - ready
            - revoked
            - testStarting
            - testing
        liveBroadcastPriority:
          type: string
          description: Priority of the live broadcast event (internal state).
          enum:
            - high
            - low
            - normal
        privacyStatus:
          type: string
          description: The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource.
          enum:
            - private
            - public
            - unlisted
        recordingStatus:
          type: string
          description: The broadcast's recording status.
          enum:
            - notRecording
            - recorded
            - recording
    LiveChatBan:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the ban.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatBan".'
          default: youtube#liveChatBan
        snippet:
          $ref: '#/components/schemas/LiveChatBanSnippet'
      description: A liveChatBan resource represents a ban for a YouTube live chat.
    LiveChatBanSnippet:
      type: object
      properties:
        banDurationSeconds:
          type: string
          description: The duration of a ban, only filled if the ban has type TEMPORARY.
          format: uint64
        bannedUserDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
        liveChatId:
          type: string
          description: The chat this ban is pertinent to.
        type:
          type: string
          description: The type of ban.
          enum:
            - permanent
            - temporary
    LiveChatFanFundingEventDetails:
      type: object
      properties:
        amountDisplayString:
          type: string
          description: A rendered string that displays the fund amount and currency to the user.
        amountMicros:
          type: string
          description: The amount of the fund.
          format: uint64
        currency:
          type: string
          description: The currency in which the fund was made.
        userComment:
          type: string
          description: The comment added by the user to this fan funding event.
    LiveChatMessage:
      type: object
      properties:
        authorDetails:
          $ref: '#/components/schemas/LiveChatMessageAuthorDetails'
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the message.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatMessage".'
          default: youtube#liveChatMessage
        snippet:
          $ref: '#/components/schemas/LiveChatMessageSnippet'
      description: A liveChatMessage resource represents a chat message in a YouTube Live Chat.
    LiveChatMessageAuthorDetails:
      type: object
      properties:
        channelId:
          type: string
          description: The YouTube channel ID.
        channelUrl:
          type: string
          description: The channel's URL.
        displayName:
          type: string
          description: The channel's display name.
        isChatModerator:
          type: boolean
          description: Whether the author is a moderator of the live chat.
        isChatOwner:
          type: boolean
          description: Whether the author is the owner of the live chat.
        isChatSponsor:
          type: boolean
          description: Whether the author is a sponsor of the live chat.
        isVerified:
          type: boolean
          description: Whether the author's identity has been verified by YouTube.
        profileImageUrl:
          type: string
          description: The channels's avatar URL.
    LiveChatMessageDeletedDetails:
      type: object
      properties:
        deletedMessageId:
          type: string
    LiveChatMessageListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of live chat messages.
          items:
            $ref: '#/components/schemas/LiveChatMessage'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatMessageListResponse".'
          default: youtube#liveChatMessageListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        offlineAt:
          type: string
          description: The date and time when the underlying stream went offline. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        pollingIntervalMillis:
          type: integer
          description: The amount of time the client should wait before polling again.
          format: uint32
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    LiveChatMessageRetractedDetails:
      type: object
      properties:
        retractedMessageId:
          type: string
    LiveChatMessageSnippet:
      type: object
      properties:
        authorChannelId:
          type: string
          description: The ID of the user that authored this message, this field is not always filled. textMessageEvent - the user that wrote the message fanFundingEvent - the user that funded the broadcast newSponsorEvent - the user that just became a sponsor messageDeletedEvent - the moderator that took the action messageRetractedEvent - the author that retracted their message userBannedEvent - the moderator that took the action superChatEvent - the user that made the purchase
        displayMessage:
          type: string
          description: Contains a string that can be displayed to the user. If this field is not present the message is silent, at the moment only messages of type TOMBSTONE and CHAT_ENDED_EVENT are silent.
        fanFundingEventDetails:
          $ref: '#/components/schemas/LiveChatFanFundingEventDetails'
        hasDisplayContent:
          type: boolean
          description: Whether the message has display content that should be displayed to users.
        liveChatId:
          type: string
        messageDeletedDetails:
          $ref: '#/components/schemas/LiveChatMessageDeletedDetails'
        messageRetractedDetails:
          $ref: '#/components/schemas/LiveChatMessageRetractedDetails'
        pollClosedDetails:
          $ref: '#/components/schemas/LiveChatPollClosedDetails'
        pollEditedDetails:
          $ref: '#/components/schemas/LiveChatPollEditedDetails'
        pollOpenedDetails:
          $ref: '#/components/schemas/LiveChatPollOpenedDetails'
        pollVotedDetails:
          $ref: '#/components/schemas/LiveChatPollVotedDetails'
        publishedAt:
          type: string
          description: The date and time when the message was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        superChatDetails:
          $ref: '#/components/schemas/LiveChatSuperChatDetails'
        superStickerDetails:
          $ref: '#/components/schemas/LiveChatSuperStickerDetails'
        textMessageDetails:
          $ref: '#/components/schemas/LiveChatTextMessageDetails'
        type:
          type: string
          description: The type of message, this will always be present, it determines the contents of the message as well as which fields will be present.
          enum:
            - chatEndedEvent
            - fanFundingEvent
            - messageDeletedEvent
            - messageRetractedEvent
            - newSponsorEvent
            - pollClosedEvent
            - pollEditedEvent
            - pollOpenedEvent
            - pollVotedEvent
            - sponsorOnlyModeEndedEvent
            - sponsorOnlyModeStartedEvent
            - superChatEvent
            - superStickerEvent
            - textMessageEvent
            - tombstone
            - userBannedEvent
        userBannedDetails:
          $ref: '#/components/schemas/LiveChatUserBannedMessageDetails'
    LiveChatModerator:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the moderator.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatModerator".'
          default: youtube#liveChatModerator
        snippet:
          $ref: '#/components/schemas/LiveChatModeratorSnippet'
      description: A liveChatModerator resource represents a moderator for a YouTube live chat. A chat moderator has the ability to ban/unban users from a chat, remove message, etc.
    LiveChatModeratorListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of moderators that match the request criteria.
          items:
            $ref: '#/components/schemas/LiveChatModerator'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatModeratorListResponse".'
          default: youtube#liveChatModeratorListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    LiveChatModeratorSnippet:
      type: object
      properties:
        liveChatId:
          type: string
          description: The ID of the live chat this moderator can act on.
        moderatorDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
    LiveChatPollClosedDetails:
      type: object
      properties:
        pollId:
          type: string
          description: The id of the poll that was closed.
    LiveChatPollEditedDetails:
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/LiveChatPollItem'
        prompt:
          type: string
    LiveChatPollItem:
      type: object
      properties:
        description:
          type: string
          description: Plain text description of the item.
        itemId:
          type: string
    LiveChatPollOpenedDetails:
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/LiveChatPollItem'
        prompt:
          type: string
    LiveChatPollVotedDetails:
      type: object
      properties:
        itemId:
          type: string
          description: The poll item the user chose.
        pollId:
          type: string
          description: The poll the user voted on.
    LiveChatSuperChatDetails:
      type: object
      properties:
        amountDisplayString:
          type: string
          description: A rendered string that displays the fund amount and currency to the user.
        amountMicros:
          type: string
          description: The amount purchased by the user, in micros (1,750,000 micros = 1.75).
          format: uint64
        currency:
          type: string
          description: The currency in which the purchase was made.
        tier:
          type: integer
          description: The tier in which the amount belongs. Lower amounts belong to lower tiers. The lowest tier is 1.
          format: uint32
        userComment:
          type: string
          description: The comment added by the user to this Super Chat event.
    LiveChatSuperStickerDetails:
      type: object
      properties:
        amountDisplayString:
          type: string
          description: A rendered string that displays the fund amount and currency to the user.
        amountMicros:
          type: string
          description: The amount purchased by the user, in micros (1,750,000 micros = 1.75).
          format: uint64
        currency:
          type: string
          description: The currency in which the purchase was made.
        superStickerMetadata:
          $ref: '#/components/schemas/SuperStickerMetadata'
        tier:
          type: integer
          description: The tier in which the amount belongs. Lower amounts belong to lower tiers. The lowest tier is 1.
          format: uint32
    LiveChatTextMessageDetails:
      type: object
      properties:
        messageText:
          type: string
          description: The user's message.
    LiveChatUserBannedMessageDetails:
      type: object
      properties:
        banDurationSeconds:
          type: string
          description: The duration of the ban. This property is only present if the banType is temporary.
          format: uint64
        banType:
          type: string
          description: The type of ban.
          enum:
            - permanent
            - temporary
        bannedUserDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
    LiveStream:
      type: object
      properties:
        cdn:
          $ref: '#/components/schemas/CdnSettings'
        contentDetails:
          $ref: '#/components/schemas/LiveStreamContentDetails'
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the stream.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveStream".'
          default: youtube#liveStream
        snippet:
          $ref: '#/components/schemas/LiveStreamSnippet'
        status:
          $ref: '#/components/schemas/LiveStreamStatus'
      description: A live stream describes a live ingestion point.
    LiveStreamConfigurationIssue:
      type: object
      properties:
        description:
          type: string
          description: The long-form description of the issue and how to resolve it.
        reason:
          type: string
          description: The short-form reason for this issue.
        severity:
          type: string
          description: How severe this issue is to the stream.
          enum:
            - error
            - info
            - warning
        type:
          type: string
          description: The kind of error happening.
          enum:
            - audioBitrateHigh
            - audioBitrateLow
            - audioBitrateMismatch
            - audioCodec
            - audioCodecMismatch
            - audioSampleRate
            - audioSampleRateMismatch
            - audioStereoMismatch
            - audioTooManyChannels
            - badContainer
            - bitrateHigh
            - bitrateLow
            - frameRateHigh
            - framerateMismatch
            - gopMismatch
            - gopSizeLong
            - gopSizeOver
            - gopSizeShort
            - interlacedVideo
            - multipleAudioStreams
            - multipleVideoStreams
            - noAudioStream
            - noVideoStream
            - openGop
            - resolutionMismatch
            - videoBitrateMismatch
            - videoCodec
            - videoCodecMismatch
            - videoIngestionFasterThanRealtime
            - videoIngestionStarved
            - videoInterlaceMismatch
            - videoProfileMismatch
            - videoResolutionSuboptimal
            - videoResolutionUnsupported
    LiveStreamContentDetails:
      type: object
      properties:
        closedCaptionsIngestionUrl:
          type: string
          description: The ingestion URL where the closed captions of this stream are sent.
        isReusable:
          type: boolean
          description: |-
            Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times.

            If you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways:
            - A non-reusable stream can only be bound to one broadcast.
            - A non-reusable stream might be deleted by an automated process after the broadcast ends.
            - The  liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream.
      description: Detailed settings of a stream.
    LiveStreamHealthStatus:
      type: object
      properties:
        configurationIssues:
          type: array
          description: The configurations issues on this stream
          items:
            $ref: '#/components/schemas/LiveStreamConfigurationIssue'
        lastUpdateTimeSeconds:
          type: string
          description: The last time this status was updated (in seconds)
          format: uint64
        status:
          type: string
          description: The status code of this stream
          enum:
            - bad
            - good
            - noData
            - ok
            - revoked
    LiveStreamListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of live streams that match the request criteria.
          items:
            $ref: '#/components/schemas/LiveStream'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#liveStreamListResponse".'
          default: youtube#liveStreamListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    LiveStreamSnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel that is transmitting the stream.
        description:
          type: string
          description: The stream's description. The value cannot be longer than 10000 characters.
        isDefaultStream:
          type: boolean
        publishedAt:
          type: string
          description: The date and time that the stream was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        title:
          type: string
          description: The stream's title. The value must be between 1 and 128 characters long.
    LiveStreamStatus:
      type: object
      properties:
        healthStatus:
          $ref: '#/components/schemas/LiveStreamHealthStatus'
        streamStatus:
          type: string
          enum:
            - active
            - created
            - error
            - inactive
            - ready
      description: Brief description of the live stream status.
    LocalizedProperty:
      type: object
      properties:
        default:
          type: string
        defaultLanguage:
          $ref: '#/components/schemas/LanguageTag'
        localized:
          type: array
          items:
            $ref: '#/components/schemas/LocalizedString'
    LocalizedString:
      type: object
      properties:
        language:
          type: string
        value:
          type: string
    Member:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the member.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#member".'
          default: youtube#member
        snippet:
          $ref: '#/components/schemas/MemberSnippet'
      description: A member resource represents a member for a YouTube channel. A member provides recurring monetary support to a creator and receives special benefits.
    MemberListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of members that match the request criteria.
          items:
            $ref: '#/components/schemas/Member'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#memberListResponse".'
          default: youtube#memberListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    MemberSnippet:
      type: object
      properties:
        creatorChannelId:
          type: string
          description: The id of the channel that's offering memberships.
        memberDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
        membershipsDetails:
          $ref: '#/components/schemas/MembershipsDetails'
    MembershipsDetails:
      type: object
      properties:
        accessibleLevels:
          type: array
          description: All levels that the user has access to. This includes the purchased level and all other levels that are included because of a higher purchase.
          items:
            type: string
        memberSince:
          type: string
          description: The date and time when the user became a continuous member across all levels.
        memberSinceCurrentLevel:
          type: string
          description: The date and time when the user started to continuously have access to the currently highest level.
        memberTotalDuration:
          type: integer
          description: The cumulative time the user has been a member across all levels in complete months (the time is rounded down to the nearest integer).
          format: int32
        memberTotalDurationCurrentLevel:
          type: integer
          description: The cumulative time the user has had access to the currently highest level in complete months (the time is rounded down to the nearest integer).
          format: int32
        purchasedLevel:
          type: string
          description: The highest level the user has access to at the moment.
    MembershipsLevel:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the memberships level.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#membershipsLevel".'
          default: youtube#membershipsLevel
        snippet:
          $ref: '#/components/schemas/MembershipsLevelSnippet'
      description: A membershipsLevel resource represents an offer made by YouTube creators for their fans. Users can become members of the channel by joining one of the available levels. They will provide recurring monetary support and receives special benefits.
    MembershipsLevelListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of pricing levels offered by a creator to the fans.
          items:
            $ref: '#/components/schemas/MembershipsLevel'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#membershipsLevelListResponse".'
          default: youtube#membershipsLevelListResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    MembershipsLevelSnippet:
      type: object
      properties:
        creatorChannelId:
          type: string
          description: The id of the channel that's offering channel memberships.
        levelDetails:
          $ref: '#/components/schemas/LevelDetails'
    MonitorStreamInfo:
      type: object
      properties:
        broadcastStreamDelayMs:
          type: integer
          description: If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay.
          format: uint32
        embedHtml:
          type: string
          description: HTML code that embeds a player that plays the monitor stream.
        enableMonitorStream:
          type: boolean
          description: |-
            This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints.

            You need to set this value to true if you intend to have a broadcast delay for your event.

            Note: This property cannot be updated once the broadcast is in the testing or live state.
      description: Settings and Info of the monitor stream
    Nonprofit:
      type: object
      properties:
        nonprofitId:
          $ref: '#/components/schemas/NonprofitId'
        nonprofitLegalName:
          type: string
          description: Legal name of the nonprofit.
      description: Nonprofit information.
    NonprofitId:
      type: object
      properties:
        value:
          type: string
    PageInfo:
      type: object
      properties:
        resultsPerPage:
          type: integer
          description: The number of results included in the API response.
          format: int32
        totalResults:
          type: integer
          description: The total number of results in the result set.
          format: int32
      description: Paging details for lists of resources, including total number of items available and number of resources returned in a single page.
    Playlist:
      type: object
      properties:
        contentDetails:
          $ref: '#/components/schemas/PlaylistContentDetails'
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the playlist.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlist".'
          default: youtube#playlist
        localizations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PlaylistLocalization'
          description: Localizations for different languages
        player:
          $ref: '#/components/schemas/PlaylistPlayer'
        snippet:
          $ref: '#/components/schemas/PlaylistSnippet'
        status:
          $ref: '#/components/schemas/PlaylistStatus'
      description: |-
        A playlist resource represents a YouTube playlist. A playlist is a collection of videos that can be viewed sequentially and shared with other users. A playlist can contain up to 200 videos, and YouTube does not limit the number of playlists that each user creates. By default, playlists are publicly visible to other users, but playlists can be public or private.

        YouTube also uses playlists to identify special collections of videos for a channel, such as:
        - uploaded videos
        - favorite videos
        - positively rated (liked) videos
        - watch history
        - watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the  channel resource for a given channel.

        You can then use the   playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the   playlistItems.insert and   playlistItems.delete methods.
    PlaylistContentDetails:
      type: object
      properties:
        itemCount:
          type: integer
          description: The number of videos in the playlist.
          format: uint32
    PlaylistItem:
      type: object
      properties:
        contentDetails:
          $ref: '#/components/schemas/PlaylistItemContentDetails'
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the playlist item.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlistItem".'
          default: youtube#playlistItem
        snippet:
          $ref: '#/components/schemas/PlaylistItemSnippet'
        status:
          $ref: '#/components/schemas/PlaylistItemStatus'
      description: |-
        A playlistItem resource identifies another resource, such as a video, that is included in a playlist. In addition, the playlistItem  resource contains details about the included resource that pertain specifically to how that resource is used in that playlist.

        YouTube uses playlists to identify special collections of videos for a channel, such as:
        - uploaded videos
        - favorite videos
        - positively rated (liked) videos
        - watch history
        - watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information.

        You can retrieve the playlist IDs for each of these lists from the  channel resource  for a given channel. You can then use the   playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the   playlistItems.insert and   playlistItems.delete methods. For example, if a user gives a positive rating to a video, you would insert that video into the liked videos playlist for that user's channel.
    PlaylistItemContentDetails:
      type: object
      properties:
        endAt:
          type: string
          description: The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video.
        note:
          type: string
          description: A user-generated note for this item.
        startAt:
          type: string
          description: The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0.
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.
        videoPublishedAt:
          type: string
          description: The date and time that the video was published to YouTube. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
    PlaylistItemListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of playlist items that match the request criteria.
          items:
            $ref: '#/components/schemas/PlaylistItem'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlistItemListResponse".'
          default: youtube#playlistItemListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    PlaylistItemSnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the user that added the item to the playlist.
        channelTitle:
          type: string
          description: Channel title for the channel that the playlist item belongs to.
        description:
          type: string
          description: The item's description.
        playlistId:
          type: string
          description: The ID that YouTube uses to uniquely identify the playlist that the playlist item is in.
        position:
          type: integer
          description: The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.
          format: uint32
        publishedAt:
          type: string
          description: The date and time that the item was added to the playlist. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        resourceId:
          $ref: '#/components/schemas/ResourceId'
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
        title:
          type: string
          description: The item's title.
      description: Basic details about a playlist, including title, description and thumbnails.
    PlaylistItemStatus:
      type: object
      properties:
        privacyStatus:
          type: string
          description: This resource's privacy status.
          enum:
            - private
            - public
            - unlisted
      description: Information about the playlist item's privacy status.
    PlaylistListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of playlists that match the request criteria.
          items:
            $ref: '#/components/schemas/Playlist'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#playlistListResponse".'
          default: youtube#playlistListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    PlaylistLocalization:
      type: object
      properties:
        description:
          type: string
          description: The localized strings for playlist's description.
        title:
          type: string
          description: The localized strings for playlist's title.
      description: Playlist localization setting
    PlaylistPlayer:
      type: object
      properties:
        embedHtml:
          type: string
          description: An <iframe> tag that embeds a player that will play the playlist.
    PlaylistSnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel that published the playlist.
        channelTitle:
          type: string
          description: The channel title of the channel that the video belongs to.
        defaultLanguage:
          type: string
          description: The language of the playlist's default title and description.
        description:
          type: string
          description: The playlist's description.
        localized:
          $ref: '#/components/schemas/PlaylistLocalization'
        publishedAt:
          type: string
          description: The date and time that the playlist was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        tags:
          type: array
          description: Keyword tags associated with the playlist.
          items:
            type: string
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
        title:
          type: string
          description: The playlist's title.
      description: Basic details about a playlist, including title, description and thumbnails.
    PlaylistStatus:
      type: object
      properties:
        privacyStatus:
          type: string
          description: The playlist's privacy status.
          enum:
            - private
            - public
            - unlisted
    PromotedItem:
      type: object
      properties:
        customMessage:
          type: string
          description: A custom message to display for this promotion. This field is currently ignored unless the promoted item is a website.
        id:
          $ref: '#/components/schemas/PromotedItemId'
        promotedByContentOwner:
          type: boolean
          description: If true, the content owner's name will be used when displaying the promotion. This field can only be set when the update is made on behalf of the content owner.
        timing:
          $ref: '#/components/schemas/InvideoTiming'
      description: Describes a single promoted item.
    PromotedItemId:
      type: object
      properties:
        recentlyUploadedBy:
          type: string
          description: If type is recentUpload, this field identifies the channel from which to take the recent upload. If missing, the channel is assumed to be the same channel for which the invideoPromotion is set.
        type:
          type: string
          description: Describes the type of the promoted item.
          enum:
            - recentUpload
            - video
            - website
        videoId:
          type: string
          description: If the promoted item represents a video, this field represents the unique YouTube ID identifying it. This field will be present only if type has the value video.
        websiteUrl:
          type: string
          description: If the promoted item represents a website, this field represents the url pointing to the website. This field will be present only if type has the value website.
      description: Describes a single promoted item id. It is a union of various possible types.
    PropertyValue:
      type: object
      properties:
        property:
          type: string
          description: A property.
        value:
          type: string
          description: The property's value.
      description: A pair Property / Value.
    ResourceId:
      type: object
      properties:
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel.
        kind:
          type: string
          description: The type of the API resource.
        playlistId:
          type: string
          description: The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist.
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video.
      description: A resource id is a generic reference that points to another YouTube resource.
    SearchListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of results that match the search criteria.
          items:
            $ref: '#/components/schemas/SearchResult'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#searchListResponse".'
          default: youtube#searchListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        regionCode:
          type: string
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    SearchResult:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          $ref: '#/components/schemas/ResourceId'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#searchResult".'
          default: youtube#searchResult
        snippet:
          $ref: '#/components/schemas/SearchResultSnippet'
      description: A search result contains information about a YouTube video, channel, or playlist that matches the search parameters specified in an API request. While a search result points to a uniquely identifiable resource, like a video, it does not have its own persistent data.
    SearchResultSnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The value that YouTube uses to uniquely identify the channel that published the resource that the search result identifies.
        channelTitle:
          type: string
          description: The title of the channel that published the resource that the search result identifies.
        description:
          type: string
          description: A description of the search result.
        liveBroadcastContent:
          type: string
          description: It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's "none" if there is not any upcoming/active live broadcasts.
          enum:
            - live
            - none
            - upcoming
        publishedAt:
          type: string
          description: The creation date and time of the resource that the search result identifies. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
        title:
          type: string
          description: The title of the search result.
      description: Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.
    Sponsor:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#sponsor".'
          default: youtube#sponsor
        snippet:
          $ref: '#/components/schemas/SponsorSnippet'
      description: A sponsor resource represents a sponsor for a YouTube channel. A sponsor provides recurring monetary support to a creator and receives special benefits.
    SponsorListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of sponsors that match the request criteria.
          items:
            $ref: '#/components/schemas/Sponsor'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#sponsorListResponse".'
          default: youtube#sponsorListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    SponsorSnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The id of the channel being sponsored.
        cumulativeDurationMonths:
          type: integer
          description: The cumulative time a user has been a sponsor in months.
          format: int32
        sponsorDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
        sponsorSince:
          type: string
          description: The date and time when the user became a sponsor. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
    Subscription:
      type: object
      properties:
        contentDetails:
          $ref: '#/components/schemas/SubscriptionContentDetails'
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the subscription.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#subscription".'
          default: youtube#subscription
        snippet:
          $ref: '#/components/schemas/SubscriptionSnippet'
        subscriberSnippet:
          $ref: '#/components/schemas/SubscriptionSubscriberSnippet'
      description: A subscription resource contains information about a YouTube user subscription. A subscription notifies a user when new videos are added to a channel or when another user takes one of several actions on YouTube, such as uploading a video, rating a video, or commenting on a video.
    SubscriptionContentDetails:
      type: object
      properties:
        activityType:
          type: string
          description: The type of activity this subscription is for (only uploads, everything).
          enum:
            - all
            - uploads
        newItemCount:
          type: integer
          description: The number of new items in the subscription since its content was last read.
          format: uint32
        totalItemCount:
          type: integer
          description: The approximate number of items that the subscription points to.
          format: uint32
      description: Details about the content to witch a subscription refers.
    SubscriptionListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of subscriptions that match the request criteria.
          items:
            $ref: '#/components/schemas/Subscription'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#subscriptionListResponse".'
          default: youtube#subscriptionListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    SubscriptionSnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the subscriber's channel.
        channelTitle:
          type: string
          description: Channel title for the channel that the subscription belongs to.
        description:
          type: string
          description: The subscription's details.
        publishedAt:
          type: string
          description: The date and time that the subscription was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        resourceId:
          $ref: '#/components/schemas/ResourceId'
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
        title:
          type: string
          description: The subscription's title.
      description: Basic details about a subscription, including title, description and thumbnails of the subscribed item.
    SubscriptionSubscriberSnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The channel ID of the subscriber.
        description:
          type: string
          description: The description of the subscriber.
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
        title:
          type: string
          description: The title of the subscriber.
      description: Basic details about a subscription's subscriber including title, description, channel ID and thumbnails.
    SuperChatEvent:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the Super Chat event.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#superChatEvent".'
          default: youtube#superChatEvent
        snippet:
          $ref: '#/components/schemas/SuperChatEventSnippet'
      description: A superChatEvent resource represents a Super Chat purchase on a YouTube channel.
    SuperChatEventListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of Super Chat purchases that match the request criteria.
          items:
            $ref: '#/components/schemas/SuperChatEvent'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#superChatEventListResponse".'
          default: youtube#superChatEventListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    SuperChatEventSnippet:
      type: object
      properties:
        amountMicros:
          type: string
          description: The purchase amount, in micros of the purchase currency. e.g., 1 is represented as 1000000.
          format: uint64
        channelId:
          type: string
          description: Channel id where the event occurred.
        commentText:
          type: string
          description: The text contents of the comment left by the user.
        createdAt:
          type: string
          description: The date and time when the event occurred. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        currency:
          type: string
          description: The currency in which the purchase was made. ISO 4217.
        displayString:
          type: string
          description: A rendered string that displays the purchase amount and currency (e.g., "$1.00"). The string is rendered for the given language.
        isSuperChatForGood:
          type: boolean
          description: True if this event is a Super Chat for Good purchase.
        isSuperStickerEvent:
          type: boolean
          description: True if this event is a Super Sticker event.
        messageType:
          type: integer
          description: The tier for the paid message, which is based on the amount of money spent to purchase the message.
          format: uint32
        nonprofit:
          $ref: '#/components/schemas/Nonprofit'
        superStickerMetadata:
          $ref: '#/components/schemas/SuperStickerMetadata'
        supporterDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
    SuperStickerMetadata:
      type: object
      properties:
        altText:
          type: string
          description: Internationalized alt text that describes the sticker image and any animation associated with it.
        altTextLanguage:
          type: string
          description: Specifies the localization language in which the alt text is returned.
        stickerId:
          type: string
          description: Unique identifier of the Super Sticker. This is a shorter form of the alt_text that includes pack name and a recognizable characteristic of the sticker.
    Thumbnail:
      type: object
      properties:
        height:
          type: integer
          description: (Optional) Height of the thumbnail image.
          format: uint32
        url:
          type: string
          description: The thumbnail image's URL.
        width:
          type: integer
          description: (Optional) Width of the thumbnail image.
          format: uint32
      description: A thumbnail is an image representing a YouTube resource.
    ThumbnailDetails:
      type: object
      properties:
        default:
          $ref: '#/components/schemas/Thumbnail'
        high:
          $ref: '#/components/schemas/Thumbnail'
        maxres:
          $ref: '#/components/schemas/Thumbnail'
        medium:
          $ref: '#/components/schemas/Thumbnail'
        standard:
          $ref: '#/components/schemas/Thumbnail'
      description: Internal representation of thumbnails for a YouTube resource.
    ThumbnailSetResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of thumbnails.
          items:
            $ref: '#/components/schemas/ThumbnailDetails'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#thumbnailSetResponse".'
          default: youtube#thumbnailSetResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    TokenPagination:
      type: object
      description: Stub token pagination template to suppress results.
    Video:
      type: object
      properties:
        ageGating:
          $ref: '#/components/schemas/VideoAgeGating'
        contentDetails:
          $ref: '#/components/schemas/VideoContentDetails'
        etag:
          type: string
          description: Etag of this resource.
        fileDetails:
          $ref: '#/components/schemas/VideoFileDetails'
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the video.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#video".'
          default: youtube#video
        liveStreamingDetails:
          $ref: '#/components/schemas/VideoLiveStreamingDetails'
        localizations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VideoLocalization'
          description: List with all localizations.
        monetizationDetails:
          $ref: '#/components/schemas/VideoMonetizationDetails'
        player:
          $ref: '#/components/schemas/VideoPlayer'
        processingDetails:
          $ref: '#/components/schemas/VideoProcessingDetails'
        projectDetails:
          $ref: '#/components/schemas/VideoProjectDetails'
        recordingDetails:
          $ref: '#/components/schemas/VideoRecordingDetails'
        snippet:
          $ref: '#/components/schemas/VideoSnippet'
        statistics:
          $ref: '#/components/schemas/VideoStatistics'
        status:
          $ref: '#/components/schemas/VideoStatus'
        suggestions:
          $ref: '#/components/schemas/VideoSuggestions'
        topicDetails:
          $ref: '#/components/schemas/VideoTopicDetails'
      description: A video resource represents a YouTube video.
    VideoAbuseReport:
      type: object
      properties:
        comments:
          type: string
          description: Additional comments regarding the abuse report.
        language:
          type: string
          description: The language that the content was viewed in.
        reasonId:
          type: string
          description: The high-level, or primary, reason that the content is abusive. The value is an abuse report reason ID.
        secondaryReasonId:
          type: string
          description: The specific, or secondary, reason that this content is abusive (if available). The value is an abuse report reason ID that is a valid secondary reason for the primary reason.
        videoId:
          type: string
          description: The ID that YouTube uses to uniquely identify the video.
    VideoAbuseReportReason:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID of this abuse report reason.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoAbuseReportReason".'
          default: youtube#videoAbuseReportReason
        snippet:
          $ref: '#/components/schemas/VideoAbuseReportReasonSnippet'
      description: A videoAbuseReportReason resource identifies a reason that a video could be reported as abusive. Video abuse report reasons are used with video.ReportAbuse.
    VideoAbuseReportReasonListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of valid abuse reasons that are used with video.ReportAbuse.
          items:
            $ref: '#/components/schemas/VideoAbuseReportReason'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoAbuseReportReasonListResponse".'
          default: youtube#videoAbuseReportReasonListResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    VideoAbuseReportReasonSnippet:
      type: object
      properties:
        label:
          type: string
          description: The localized label belonging to this abuse report reason.
        secondaryReasons:
          type: array
          description: The secondary reasons associated with this reason, if any are available. (There might be 0 or more.)
          items:
            $ref: '#/components/schemas/VideoAbuseReportSecondaryReason'
      description: Basic details about a video category, such as its localized title.
    VideoAbuseReportSecondaryReason:
      type: object
      properties:
        id:
          type: string
          description: The ID of this abuse report secondary reason.
        label:
          type: string
          description: The localized label for this abuse report secondary reason.
    VideoAgeGating:
      type: object
      properties:
        alcoholContent:
          type: boolean
          description: Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content.
        restricted:
          type: boolean
          description: Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present.
        videoGameRating:
          type: string
          description: Video game rating, if any.
          enum:
            - anyone
            - m15Plus
            - m16Plus
            - m17Plus
    VideoCategory:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the video category.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoCategory".'
          default: youtube#videoCategory
        snippet:
          $ref: '#/components/schemas/VideoCategorySnippet'
      description: A videoCategory resource identifies a category that has been or could be associated with uploaded videos.
    VideoCategoryListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of video categories that can be associated with YouTube videos. In this map, the video category ID is the map key, and its value is the corresponding videoCategory resource.
          items:
            $ref: '#/components/schemas/VideoCategory'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoCategoryListResponse".'
          default: youtube#videoCategoryListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    VideoCategorySnippet:
      type: object
      properties:
        assignable:
          type: boolean
        channelId:
          type: string
          description: The YouTube channel that created the video category.
          default: UCBR8-60-B28hp2BmDPdntcQ
        title:
          type: string
          description: The video category's title.
      description: Basic details about a video category, such as its localized title.
    VideoContentDetails:
      type: object
      properties:
        caption:
          type: string
          description: The value of captions indicates whether the video has captions or not.
          enum:
            - 'false'
            - 'true'
        contentRating:
          $ref: '#/components/schemas/ContentRating'
        countryRestriction:
          $ref: '#/components/schemas/AccessPolicy'
        definition:
          type: string
          description: The value of definition indicates whether the video is available in high definition or only in standard definition.
          enum:
            - hd
            - sd
        dimension:
          type: string
          description: The value of dimension indicates whether the video is available in 3D or in 2D.
        duration:
          type: string
          description: 'The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long.'
        hasCustomThumbnail:
          type: boolean
          description: Indicates whether the video uploader has provided a custom thumbnail image for the video. This property is only visible to the video uploader.
        licensedContent:
          type: boolean
          description: The value of is_license_content indicates whether the video is licensed content.
        projection:
          type: string
          description: Specifies the projection format of the video.
          enum:
            - '360'
            - rectangular
        regionRestriction:
          $ref: '#/components/schemas/VideoContentDetailsRegionRestriction'
      description: Details about the content of a YouTube Video.
    VideoContentDetailsRegionRestriction:
      type: object
      properties:
        allowed:
          type: array
          description: A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries.
          items:
            type: string
        blocked:
          type: array
          description: A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries.
          items:
            type: string
      description: DEPRECATED Region restriction of the video.
    VideoFileDetails:
      type: object
      properties:
        audioStreams:
          type: array
          description: A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream.
          items:
            $ref: '#/components/schemas/VideoFileDetailsAudioStream'
        bitrateBps:
          type: string
          description: The uploaded video file's combined (video and audio) bitrate in bits per second.
          format: uint64
        container:
          type: string
          description: The uploaded video file's container format.
        creationTime:
          type: string
          description: |-
            The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported:
            - Date only: YYYY-MM-DD
            - Naive time: YYYY-MM-DDTHH:MM:SS
            - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM
        durationMs:
          type: string
          description: The length of the uploaded video in milliseconds.
          format: uint64
        fileName:
          type: string
          description: The uploaded file's name. This field is present whether a video file or another type of file was uploaded.
        fileSize:
          type: string
          description: The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded.
          format: uint64
        fileType:
          type: string
          description: The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded.
          enum:
            - archive
            - audio
            - document
            - image
            - other
            - project
            - video
        videoStreams:
          type: array
          description: A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream.
          items:
            $ref: '#/components/schemas/VideoFileDetailsVideoStream'
      description: Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information.
    VideoFileDetailsAudioStream:
      type: object
      properties:
        bitrateBps:
          type: string
          description: The audio stream's bitrate, in bits per second.
          format: uint64
        channelCount:
          type: integer
          description: The number of audio channels that the stream contains.
          format: uint32
        codec:
          type: string
          description: The audio codec that the stream uses.
        vendor:
          type: string
          description: A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.
      description: Information about an audio stream.
    VideoFileDetailsVideoStream:
      type: object
      properties:
        aspectRatio:
          type: number
          description: The video content's display aspect ratio, which specifies the aspect ratio in which the video should be displayed.
          format: double
        bitrateBps:
          type: string
          description: The video stream's bitrate, in bits per second.
          format: uint64
        codec:
          type: string
          description: The video codec that the stream uses.
        frameRateFps:
          type: number
          description: The video stream's frame rate, in frames per second.
          format: double
        heightPixels:
          type: integer
          description: The encoded video content's height in pixels.
          format: uint32
        rotation:
          type: string
          description: The amount that YouTube needs to rotate the original source content to properly display the video.
          enum:
            - clockwise
            - counterClockwise
            - none
            - other
            - upsideDown
        vendor:
          type: string
          description: A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.
        widthPixels:
          type: integer
          description: The encoded video content's width in pixels. You can calculate the video's encoding aspect ratio as width_pixels / height_pixels.
          format: uint32
      description: Information about a video stream.
    VideoGetRatingResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of ratings that match the request criteria.
          items:
            $ref: '#/components/schemas/VideoRating'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoGetRatingResponse".'
          default: youtube#videoGetRatingResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    VideoListResponse:
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          type: array
          description: A list of videos that match the request criteria.
          items:
            $ref: '#/components/schemas/Video'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "youtube#videoListResponse".'
          default: youtube#videoListResponse
        nextPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
    VideoLiveStreamingDetails:
      type: object
      properties:
        activeLiveChatId:
          type: string
          description: The ID of the currently active live chat attached to this video. This field is filled only if the video is a currently live broadcast that has live chat. Once the broadcast transitions to complete this field will be removed and the live chat closed down. For persistent broadcasts that live chat id will no longer be tied to this video but rather to the new video being displayed at the persistent page.
        actualEndTime:
          type: string
          description: The time that the broadcast actually ended. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast is over.
          format: date-time
        actualStartTime:
          type: string
          description: The time that the broadcast actually started. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast begins.
          format: date-time
        concurrentViewers:
          type: string
          description: The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.
          format: uint64
        scheduledEndTime:
          type: string
          description: The time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. If the value is empty or the property is not present, then the broadcast is scheduled to continue indefinitely.
          format: date-time
        scheduledStartTime:
          type: string
          description: The time that the broadcast is scheduled to begin. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
      description: Details about the live streaming metadata.
    VideoLocalization:
      type: object
      properties:
        description:
          type: string
          description: Localized version of the video's description.
        title:
          type: string
          description: Localized version of the video's title.
      description: Localized versions of certain video properties (e.g. title).
    VideoMonetizationDetails:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/AccessPolicy'
      description: Details about monetization of a YouTube Video.
    VideoPlayer:
      type: object
      properties:
        embedHeight:
          type: string
          format: int64
        embedHtml:
          type: string
          description: An <iframe> tag that embeds a player that will play the video.
        embedWidth:
          type: string
          description: The embed width
          format: int64
      description: Player to be used for a video playback.
    VideoProcessingDetails:
      type: object
      properties:
        editorSuggestionsAvailability:
          type: string
          description: This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
        fileDetailsAvailability:
          type: string
          description: This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request.
        processingFailureReason:
          type: string
          description: The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed.
          enum:
            - other
            - streamingFailed
            - transcodeFailed
            - uploadFailed
        processingIssuesAvailability:
          type: string
          description: This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
        processingProgress:
          $ref: '#/components/schemas/VideoProcessingDetailsProcessingProgress'
        processingStatus:
          type: string
          description: The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed.
          enum:
            - failed
            - processing
            - succeeded
            - terminated
        tagSuggestionsAvailability:
          type: string
          description: This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
        thumbnailsAvailability:
          type: string
          description: This value indicates whether thumbnail images have been generated for the video.
      description: Describes processing status and progress and availability of some other Video resource parts.
    VideoProcessingDetailsProcessingProgress:
      type: object
      properties:
        partsProcessed:
          type: string
          description: |-
            The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating:
            100 * parts_processed / parts_total

            Note that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video.
          format: uint64
        partsTotal:
          type: string
          description: An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video.
          format: uint64
        timeLeftMs:
          type: string
          description: An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video.
          format: uint64
      description: Video processing progress and completion time estimate.
    VideoProjectDetails:
      type: object
      properties:
        tags:
          type: array
          description: A list of project tags associated with the video during the upload.
          items:
            type: string
      description: Project specific details about the content of a YouTube Video.
    VideoRating:
      type: object
      properties:
        rating:
          type: string
          enum:
            - dislike
            - like
            - none
            - unspecified
        videoId:
          type: string
    VideoRecordingDetails:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/GeoPoint'
        locationDescription:
          type: string
          description: The text description of the location where the video was recorded.
        recordingDate:
          type: string
          description: The date and time when the video was recorded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format.
          format: date-time
      description: Recording information associated with the video.
    VideoSnippet:
      type: object
      properties:
        categoryId:
          type: string
          description: The YouTube video category associated with the video.
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel that the video was uploaded to.
        channelTitle:
          type: string
          description: Channel title for the channel that the video belongs to.
        defaultAudioLanguage:
          type: string
          description: The default_audio_language property specifies the language spoken in the video's default audio track.
        defaultLanguage:
          type: string
          description: The language of the videos's default snippet.
        description:
          type: string
          description: The video's description.
        liveBroadcastContent:
          type: string
          description: Indicates if the video is an upcoming/active live broadcast. Or it's "none" if the video is not an upcoming/active live broadcast.
          enum:
            - live
            - none
            - upcoming
        localized:
          $ref: '#/components/schemas/VideoLocalization'
        publishedAt:
          type: string
          description: The date and time that the video was uploaded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        tags:
          type: array
          description: A list of keyword tags associated with the video. Tags may contain spaces.
          items:
            type: string
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
        title:
          type: string
          description: The video's title.
      description: Basic details about a video, including title, description, uploader, thumbnails and category.
    VideoStatistics:
      type: object
      properties:
        commentCount:
          type: string
          description: The number of comments for the video.
          format: uint64
        dislikeCount:
          type: string
          description: The number of users who have indicated that they disliked the video by giving it a negative rating.
          format: uint64
        favoriteCount:
          type: string
          description: The number of users who currently have the video marked as a favorite video.
          format: uint64
        likeCount:
          type: string
          description: The number of users who have indicated that they liked the video by giving it a positive rating.
          format: uint64
        viewCount:
          type: string
          description: The number of times the video has been viewed.
          format: uint64
      description: Statistics about the video, such as the number of times the video was viewed or liked.
    VideoStatus:
      type: object
      properties:
        embeddable:
          type: boolean
          description: This value indicates if the video can be embedded on another website.
        failureReason:
          type: string
          description: This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed.
          enum:
            - codec
            - conversion
            - emptyFile
            - invalidFile
            - tooSmall
            - uploadAborted
        license:
          type: string
          description: The video's license.
          enum:
            - creativeCommon
            - youtube
        privacyStatus:
          type: string
          description: The video's privacy status.
          enum:
            - private
            - public
            - unlisted
        publicStatsViewable:
          type: boolean
          description: This value indicates if the extended video statistics on the watch page can be viewed by everyone. Note that the view count, likes, etc will still be visible if this is disabled.
        publishAt:
          type: string
          description: The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
          format: date-time
        rejectionReason:
          type: string
          description: This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected.
          enum:
            - claim
            - copyright
            - duplicate
            - inappropriate
            - legal
            - length
            - termsOfUse
            - trademark
            - uploaderAccountClosed
            - uploaderAccountSuspended
        uploadStatus:
          type: string
          description: The status of the uploaded video.
          enum:
            - deleted
            - failed
            - processed
            - rejected
            - uploaded
        madeForKids:
          type: boolean
          description: TODO
        selfDeclaredMadeForKids:
          type: boolean
          description: TODO
      description: Basic details about a video category, such as its localized title.
    VideoSuggestions:
      type: object
      properties:
        editorSuggestions:
          type: array
          description: A list of video editing operations that might improve the video quality or playback experience of the uploaded video.
          items:
            type: string
            enum:
              - audioQuietAudioSwap
              - videoAutoLevels
              - videoCrop
              - videoStabilize
        processingErrors:
          type: array
          description: A list of errors that will prevent YouTube from successfully processing the uploaded video video. These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed.
          items:
            type: string
            enum:
              - archiveFile
              - audioFile
              - docFile
              - imageFile
              - notAVideoFile
              - projectFile
              - unsupportedSpatialAudioLayout
        processingHints:
          type: array
          description: A list of suggestions that may improve YouTube's ability to process the video.
          items:
            type: string
            enum:
              - hdrVideo
              - nonStreamableMov
              - sendBestQualityVideo
              - spatialAudio
              - sphericalVideo
              - vrVideo
        processingWarnings:
          type: array
          description: A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that are unlikely to cause the video processing to fail but that might cause problems such as sync issues, video artifacts, or a missing audio track.
          items:
            type: string
            enum:
              - hasEditlist
              - inconsistentResolution
              - problematicAudioCodec
              - problematicHdrLookupTable
              - problematicVideoCodec
              - unknownAudioCodec
              - unknownContainer
              - unknownVideoCodec
              - unsupportedHdrColorMetadata
              - unsupportedHdrPixelFormat
              - unsupportedSphericalProjectionType
              - unsupportedVrStereoMode
        tagSuggestions:
          type: array
          description: A list of keyword tags that could be added to the video's metadata to increase the likelihood that users will locate your video when searching or browsing on YouTube.
          items:
            $ref: '#/components/schemas/VideoSuggestionsTagSuggestion'
      description: Specifies suggestions on how to improve video content, including encoding hints, tag suggestions, and editor suggestions.
    VideoSuggestionsTagSuggestion:
      type: object
      properties:
        categoryRestricts:
          type: array
          description: A set of video categories for which the tag is relevant. You can use this information to display appropriate tag suggestions based on the video category that the video uploader associates with the video. By default, tag suggestions are relevant for all categories if there are no restricts defined for the keyword.
          items:
            type: string
        tag:
          type: string
          description: The keyword tag suggested for the video.
      description: A single tag suggestion with it's relevance information.
    VideoTopicDetails:
      type: object
      properties:
        relevantTopicIds:
          type: array
          description: Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API.
          items:
            type: string
        topicCategories:
          type: array
          description: A list of Wikipedia URLs that provide a high-level description of the video's content.
          items:
            type: string
        topicIds:
          type: array
          description: A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the Freebase Topic API.
          items:
            type: string
      description: Freebase topic information related to the video.
    WatchSettings:
      type: object
      properties:
        backgroundColor:
          type: string
          description: The text color for the video watch page's branded area.
        featuredPlaylistId:
          type: string
          description: An ID that uniquely identifies a playlist that displays next to the video player.
        textColor:
          type: string
          description: The background color for the video watch page's branded area.
      description: Branding properties for the watch. All deprecated.
  parameters:
    alt:
      name: alt
      in: query
      description: Data format for the response.
      schema:
        type: string
        default: json
        enum:
          - json
    fields:
      name: fields
      in: query
      description: Selector specifying which fields to include in a partial response.
      schema:
        type: string
    key:
      name: key
      in: query
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      schema:
        type: string
    oauth_token:
      name: oauth_token
      in: query
      description: OAuth 2.0 token for the current user.
      schema:
        type: string
    prettyPrint:
      name: prettyPrint
      in: query
      description: Returns response with indentations and line breaks.
      schema:
        type: boolean
        default: true
    quotaUser:
      name: quotaUser
      in: query
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      schema:
        type: string
    userIp:
      name: userIp
      in: query
      description: Deprecated. Please use quotaUser instead.
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/youtube: Manage your YouTube account
            https://www.googleapis.com/auth/youtube.force-ssl: See, edit, and permanently delete your YouTube videos, ratings, comments and captions
            https://www.googleapis.com/auth/youtube.readonly: View your YouTube account
            https://www.googleapis.com/auth/youtube.upload: Manage your YouTube videos
            https://www.googleapis.com/auth/youtubepartner: View and manage your assets and associated content on YouTube
            https://www.googleapis.com/auth/youtubepartner-channel-audit: View private information of your YouTube channel relevant during the audit process with a YouTube partner
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 accessCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/youtube: Manage your YouTube account
            https://www.googleapis.com/auth/youtube.force-ssl: See, edit, and permanently delete your YouTube videos, ratings, comments and captions
            https://www.googleapis.com/auth/youtube.readonly: View your YouTube account
            https://www.googleapis.com/auth/youtube.upload: Manage your YouTube videos
            https://www.googleapis.com/auth/youtubepartner: View and manage your assets and associated content on YouTube
            https://www.googleapis.com/auth/youtubepartner-channel-audit: View private information of your YouTube channel relevant during the audit process with a YouTube partner
