openapi: 3.0.1
info:
  title: Genome Nexus API
  description: |-
    This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.

    Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.

     We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.
  license:
    name: MIT License
    url: https://github.com/genome-nexus/genome-nexus/blob/master/LICENSE
  version: "2.0"
servers:
- url: http://localhost:9002/
tags:
- name: info-controller
  description: Info Controller
- name: pdb-controller
  description: PDB Controller
- name: annotation-controller
  description: Annotation Controller
- name: ptm-controller
  description: PTM Controller
- name: pfam-controller
  description: PFAM Controller
- name: ensembl-controller
  description: Ensembl Controller
paths:
  /annotation:
    post:
      tags:
      - annotation-controller
      summary: Retrieves VEP annotation for the provided list of variants
      operationId: fetchVariantAnnotationPOST
      parameters:
      - name: isoformOverrideSource
        in: query
        description: Isoform override source. For example uniprot
        schema:
          type: string
      - name: token
        in: query
        description: Map of tokens. For example {"source1":"put-your-token1-here","source2":"put-your-token2-here"}
        schema:
          type: string
      - name: fields
        in: query
        description: 'Comma separated list of fields to include (case-sensitive!).
          For example: hotspots'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: hotspots
      requestBody:
        description: List of variants. For example ["X:g.66937331T>A","17:g.41242962_41242963insGA"]
          (GRCh37) or ["1:g.182712A>C", "2:g.265023C>T", "3:g.319781del", "19:g.110753dup",
          "1:g.1385015_1387562del"] (GRCh38)
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VariantAnnotation'
      x-codegen-request-body-name: variants
  /annotation/dbsnp/:
    post:
      tags:
      - annotation-controller
      summary: Retrieves VEP annotation for the provided list of dbSNP ids
      operationId: fetchVariantAnnotationByIdPOST
      parameters:
      - name: isoformOverrideSource
        in: query
        description: Isoform override source. For example uniprot
        schema:
          type: string
      - name: token
        in: query
        description: Map of tokens. For example {"source1":"put-your-token1-here","source2":"put-your-token2-here"}
        schema:
          type: string
      - name: fields
        in: query
        description: 'Comma separated list of fields to include (case-sensitive!).
          For example: annotation_summary'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: annotation_summary
      requestBody:
        description: List of variant IDs. For example ["rs116035550"]
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VariantAnnotation'
      x-codegen-request-body-name: variantIds
  /annotation/dbsnp/{variantId}:
    get:
      tags:
      - annotation-controller
      summary: Retrieves VEP annotation for the give dbSNP id
      operationId: fetchVariantAnnotationByIdGET
      parameters:
      - name: variantId
        in: path
        description: dbSNP id. For example rs116035550.
        required: true
        schema:
          type: string
      - name: isoformOverrideSource
        in: query
        description: Isoform override source. For example uniprot
        schema:
          type: string
      - name: token
        in: query
        description: Map of tokens. For example {"source1":"put-your-token1-here","source2":"put-your-token2-here"}
        schema:
          type: string
      - name: fields
        in: query
        description: 'Comma separated list of fields to include (case-sensitive!).
          For example: annotation_summary'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: annotation_summary
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantAnnotation'
  /annotation/genomic:
    post:
      tags:
      - annotation-controller
      summary: Retrieves VEP annotation for the provided list of genomic locations
      operationId: fetchVariantAnnotationByGenomicLocationPOST
      parameters:
      - name: isoformOverrideSource
        in: query
        description: Isoform override source. For example uniprot
        schema:
          type: string
      - name: token
        in: query
        description: Map of tokens. For example {"source1":"put-your-token1-here","source2":"put-your-token2-here"}
        schema:
          type: string
      - name: fields
        in: query
        description: 'Comma separated list of fields to include (case-sensitive!).
          For example: hotspots'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: hotspots
      requestBody:
        description: List of Genomic Locations
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GenomicLocation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VariantAnnotation'
      x-codegen-request-body-name: genomicLocations
  /annotation/genomic/{genomicLocation}:
    get:
      tags:
      - annotation-controller
      summary: Retrieves VEP annotation for the provided genomic location
      operationId: fetchVariantAnnotationByGenomicLocationGET
      parameters:
      - name: genomicLocation
        in: path
        description: A genomic location. For example 7,140453136,140453136,A,T
        required: true
        schema:
          type: string
      - name: isoformOverrideSource
        in: query
        description: Isoform override source. For example uniprot
        schema:
          type: string
      - name: token
        in: query
        description: Map of tokens. For example {"source1":"put-your-token1-here","source2":"put-your-token2-here"}
        schema:
          type: string
      - name: fields
        in: query
        description: 'Comma separated list of fields to include (case-sensitive!).
          For example: hotspots'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: hotspots
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantAnnotation'
  /annotation/{variant}:
    get:
      tags:
      - annotation-controller
      summary: Retrieves VEP annotation for the provided variant
      operationId: fetchVariantAnnotationGET
      parameters:
      - name: variant
        in: path
        description: Variant. For example 17:g.41242962_41242963insGA
        required: true
        schema:
          type: string
      - name: isoformOverrideSource
        in: query
        description: Isoform override source. For example uniprot
        schema:
          type: string
      - name: token
        in: query
        description: Map of tokens. For example {"source1":"put-your-token1-here","source2":"put-your-token2-here"}
        schema:
          type: string
      - name: fields
        in: query
        description: 'Comma separated list of fields to include (case-sensitive!).
          For example: hotspots'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: hotspots
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantAnnotation'
  /ensembl/canonical-gene/entrez:
    post:
      tags:
      - ensembl-controller
      summary: Retrieves canonical Ensembl Gene ID by Entrez Gene Ids
      operationId: fetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST
      requestBody:
        description: List of Entrez Gene Ids. For example ["23140","26009","100131879"]
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnsemblGene'
      x-codegen-request-body-name: entrezGeneIds
  /ensembl/canonical-gene/entrez/{entrezGeneId}:
    get:
      tags:
      - ensembl-controller
      summary: Retrieves Ensembl canonical gene id by Entrez Gene Id
      operationId: fetchCanonicalEnsemblGeneIdByEntrezGeneIdGET
      parameters:
      - name: entrezGeneId
        in: path
        description: An Entrez Gene Id. For example 23140
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnsemblGene'
  /ensembl/canonical-gene/hgnc:
    post:
      tags:
      - ensembl-controller
      summary: Retrieves canonical Ensembl Gene ID by Hugo Symbols
      operationId: fetchCanonicalEnsemblGeneIdByHugoSymbolsPOST
      requestBody:
        description: List of Hugo Symbols. For example ["TP53","PIK3CA","BRCA1"]
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnsemblGene'
      x-codegen-request-body-name: hugoSymbols
  /ensembl/canonical-gene/hgnc/{hugoSymbol}:
    get:
      tags:
      - ensembl-controller
      summary: Retrieves Ensembl canonical gene id by Hugo Symbol
      operationId: fetchCanonicalEnsemblGeneIdByHugoSymbolGET
      parameters:
      - name: hugoSymbol
        in: path
        description: A Hugo Symbol. For example TP53
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnsemblGene'
  /ensembl/canonical-transcript/hgnc:
    post:
      tags:
      - ensembl-controller
      summary: Retrieves Ensembl canonical transcripts by Hugo Symbols
      operationId: fetchCanonicalEnsemblTranscriptsByHugoSymbolsPOST
      parameters:
      - name: isoformOverrideSource
        in: query
        description: Isoform override source. For example uniprot
        schema:
          type: string
          default: uniprot
      requestBody:
        description: List of Hugo Symbols. For example ["TP53","PIK3CA","BRCA1"]
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnsemblTranscript'
      x-codegen-request-body-name: hugoSymbols
  /ensembl/canonical-transcript/hgnc/{hugoSymbol}:
    get:
      tags:
      - ensembl-controller
      summary: Retrieves Ensembl canonical transcript by Hugo Symbol
      operationId: fetchCanonicalEnsemblTranscriptByHugoSymbolGET
      parameters:
      - name: hugoSymbol
        in: path
        description: A Hugo Symbol. For example TP53
        required: true
        schema:
          type: string
      - name: isoformOverrideSource
        in: query
        description: Isoform override source. For example uniprot
        schema:
          type: string
          default: uniprot
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnsemblTranscript'
  /ensembl/transcript:
    get:
      tags:
      - ensembl-controller
      summary: Retrieves Ensembl Transcripts by protein ID, and gene ID. Retrieves
        all transcripts in case no query parameter provided
      operationId: fetchEnsemblTranscriptsGET
      parameters:
      - name: geneId
        in: query
        description: An Ensembl gene ID. For example ENSG00000136999
        schema:
          type: string
      - name: proteinId
        in: query
        description: An Ensembl protein ID. For example ENSP00000439985
        schema:
          type: string
      - name: hugoSymbol
        in: query
        description: A Hugo Symbol For example ARF5
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnsemblTranscript'
    post:
      tags:
      - ensembl-controller
      summary: Retrieves Ensembl Transcripts by Ensembl transcript IDs, hugo Symbols,
        protein IDs, or gene IDs
      operationId: fetchEnsemblTranscriptsByEnsemblFilterPOST
      requestBody:
        description: List of Ensembl transcript IDs. For example ["ENST00000361390",
          "ENST00000361453", "ENST00000361624"]<br>OR<br>List of Hugo Symbols. For
          example ["TP53", "PIK3CA", "BRCA1"]<br>OR<br>List of Ensembl protein IDs.
          For example ["ENSP00000439985", "ENSP00000478460", "ENSP00000346196"]<br>OR<br>List
          of Ensembl gene IDs. For example ["ENSG00000136999", "ENSG00000272398",
          "ENSG00000198695"]
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnsemblFilter'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnsemblTranscript'
      x-codegen-request-body-name: ensemblFilter
  /ensembl/transcript/{transcriptId}:
    get:
      tags:
      - ensembl-controller
      summary: Retrieves the transcript by an Ensembl transcript ID
      operationId: fetchEnsemblTranscriptByTranscriptIdGET
      parameters:
      - name: transcriptId
        in: path
        description: An Ensembl transcript ID. For example ENST00000361390
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnsemblTranscript'
  /ensembl/xrefs:
    get:
      tags:
      - ensembl-controller
      summary: Perform lookups of Ensembl identifiers and retrieve their external
        references in other databases
      operationId: fetchGeneXrefsGET
      parameters:
      - name: accession
        in: query
        description: Ensembl gene accession. For example ENSG00000169083
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneXref'
  /pdb/header:
    post:
      tags:
      - pdb-controller
      summary: Retrieves PDB header info by a PDB id
      operationId: fetchPdbHeaderPOST
      requestBody:
        description: List of pdb ids, for example ["1a37","1a4o"]
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PdbHeader'
      x-codegen-request-body-name: pdbIds
  /pdb/header/{pdbId}:
    get:
      tags:
      - pdb-controller
      summary: Retrieves PDB header info by a PDB id
      operationId: fetchPdbHeaderGET
      parameters:
      - name: pdbId
        in: path
        description: PDB id, for example 1a37
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PdbHeader'
  /pfam/domain:
    post:
      tags:
      - pfam-controller
      summary: Retrieves PFAM domains by PFAM domain accession IDs
      operationId: fetchPfamDomainsByPfamAccessionPOST
      requestBody:
        description: List of PFAM domain accession IDs. For example ["PF02827","PF00093","PF15276"]
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PfamDomain'
      x-codegen-request-body-name: pfamAccessions
  /pfam/domain/{pfamAccession}:
    get:
      tags:
      - pfam-controller
      summary: Retrieves a PFAM domain by a PFAM domain ID
      operationId: fetchPfamDomainsByAccessionGET
      parameters:
      - name: pfamAccession
        in: path
        description: A PFAM domain accession ID. For example PF02827
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PfamDomain'
  /ptm/experimental:
    get:
      tags:
      - ptm-controller
      summary: Retrieves PTM entries by Ensembl Transcript ID
      operationId: fetchPostTranslationalModificationsGET
      parameters:
      - name: ensemblTranscriptId
        in: query
        description: Ensembl Transcript ID. For example ENST00000646891
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostTranslationalModification'
    post:
      tags:
      - ptm-controller
      summary: Retrieves PTM entries by Ensembl Transcript IDs
      operationId: fetchPostTranslationalModificationsByPtmFilterPOST
      requestBody:
        description: List of Ensembl transcript IDs. For example ["ENST00000420316",
          "ENST00000646891", "ENST00000371953"]
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PtmFilter'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostTranslationalModification'
      x-codegen-request-body-name: ptmFilter
  /version:
    get:
      tags:
      - info-controller
      summary: Retrieve Genome Nexus Version
      operationId: fetchVersionGET
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
components:
  schemas:
    AlleleCount:
      required:
      - ac
      - ac_afr
      - ac_amr
      - ac_asj
      - ac_eas
      - ac_fin
      - ac_nfe
      - ac_oth
      - ac_sas
      type: object
      properties:
        ac:
          type: integer
          format: int32
        ac_afr:
          type: integer
          format: int32
        ac_amr:
          type: integer
          format: int32
        ac_asj:
          type: integer
          format: int32
        ac_eas:
          type: integer
          format: int32
        ac_fin:
          type: integer
          format: int32
        ac_nfe:
          type: integer
          format: int32
        ac_oth:
          type: integer
          format: int32
        ac_sas:
          type: integer
          format: int32
    AlleleFrequency:
      required:
      - af
      - af_afr
      - af_amr
      - af_asj
      - af_eas
      - af_fin
      - af_nfe
      - af_oth
      - af_sas
      type: object
      properties:
        af:
          type: number
          format: double
        af_afr:
          type: number
          format: double
        af_amr:
          type: number
          format: double
        af_asj:
          type: number
          format: double
        af_eas:
          type: number
          format: double
        af_fin:
          type: number
          format: double
        af_nfe:
          type: number
          format: double
        af_oth:
          type: number
          format: double
        af_sas:
          type: number
          format: double
    AlleleNumber:
      required:
      - an
      - an_afr
      - an_amr
      - an_asj
      - an_eas
      - an_fin
      - an_nfe
      - an_oth
      - an_sas
      type: object
      properties:
        an:
          type: integer
          format: int32
        an_afr:
          type: integer
          format: int32
        an_amr:
          type: integer
          format: int32
        an_asj:
          type: integer
          format: int32
        an_eas:
          type: integer
          format: int32
        an_fin:
          type: integer
          format: int32
        an_nfe:
          type: integer
          format: int32
        an_oth:
          type: integer
          format: int32
        an_sas:
          type: integer
          format: int32
    Alleles:
      type: object
      properties:
        allele:
          type: string
          description: allele
    ArticleAbstract:
      type: object
      properties:
        abstract:
          type: string
        link:
          type: string
    Citations:
      type: object
      properties:
        abstracts:
          type: array
          items:
            $ref: '#/components/schemas/ArticleAbstract'
        pmids:
          type: array
          items:
            type: string
    ClinVar:
      type: object
      properties:
        alleleId:
          type: integer
          description: allele_id
          format: int32
        alt:
          type: string
          description: alt
        chrom:
          type: string
          description: chrom
        cytogenic:
          type: string
          description: cytogenic
        gene:
          $ref: '#/components/schemas/Gene'
        hg19:
          $ref: '#/components/schemas/Hg19'
        hg38:
          $ref: '#/components/schemas/Hg38'
        hgvs:
          $ref: '#/components/schemas/Hgvs'
        license:
          type: string
          description: license
        rcv:
          type: array
          items:
            $ref: '#/components/schemas/Rcv'
        variantId:
          type: integer
          description: variant_id
          format: int32
    Clinvar:
      type: object
      properties:
        alternateAllele:
          type: string
        chromosome:
          type: string
        clinicalSignificance:
          type: string
        clinvarId:
          type: integer
          format: int32
        conflictingClinicalSignificance:
          type: string
        endPosition:
          type: integer
          format: int32
        referenceAllele:
          type: string
        startPosition:
          type: integer
          format: int32
    ClinvarAnnotation:
      type: object
      properties:
        annotation:
          $ref: '#/components/schemas/Clinvar'
    ColocatedVariant:
      required:
      - gnomad_afr_allele
      - gnomad_afr_maf
      - gnomad_eas_allele
      - gnomad_eas_maf
      - gnomad_nfe_allele
      - gnomad_nfe_maf
      type: object
      properties:
        dbSnpId:
          type: string
        gnomad_nfe_allele:
          type: string
          description: GnomAD Non-Finnish European Allele
        gnomad_nfe_maf:
          type: string
          description: GnomAD Non-Finnish European MAF
        gnomad_afr_allele:
          type: string
          description: GnomAD African/African American Allele
        gnomad_afr_maf:
          type: string
          description: GnomAD African/African American MAF
        gnomad_eas_allele:
          type: string
          description: GnomAD East Asian Allele
        gnomad_eas_maf:
          type: string
          description: GnomAD East Asian MAF
    Cosmic:
      type: object
      properties:
        alt:
          type: string
          description: alt
        chrom:
          type: string
          description: chrom
        cosmicId:
          type: string
          description: cosmic_id
        hg19:
          $ref: '#/components/schemas/Hg19'
        license:
          type: string
          description: _license
        mutFreq:
          type: number
          description: mut_freq
          format: double
        mutNt:
          type: string
          description: mut_nt
        ref:
          type: string
          description: ref
        tumorSite:
          type: string
          description: tumor_site
    CountByTumorType:
      type: object
      properties:
        tumorType:
          type: string
          description: Tumor Type
        tumorTypeCount:
          type: integer
          description: Sample count for Tumor Type
          format: int32
        variantCount:
          type: integer
          description: Variant count for Tumor Type
          format: int32
    Dbsnp:
      type: object
      properties:
        _class:
          type: string
          description: class
        alleleOrigin:
          type: string
          description: allele_origin
        alleles:
          type: array
          description: alleles
          items:
            $ref: '#/components/schemas/Alleles'
        alt:
          type: string
          description: alt
        chrom:
          type: string
          description: chrom
        dbsnpBuild:
          type: integer
          description: dbsnp_build
          format: int32
        flags:
          type: array
          description: flags
          items:
            type: string
        hg19:
          $ref: '#/components/schemas/Hg19'
        license:
          type: string
          description: _license
        ref:
          type: string
          description: ref
        rsid:
          type: string
          description: rsid
        validated:
          type: boolean
          description: validated
          example: false
        varSubtype:
          type: string
          description: var_subtype
        vartype:
          type: string
          description: vartype
    Drug:
      type: object
      properties:
        drugName:
          type: string
        ncitCode:
          type: string
        synonyms:
          type: array
          items:
            type: string
        uuid:
          type: string
    EnsemblFilter:
      type: object
      properties:
        geneIds:
          type: array
          description: List of Ensembl gene IDs. For example ["ENSG00000136999", "ENSG00000272398",
            "ENSG00000198695"]
          items:
            type: string
        hugoSymbols:
          type: array
          description: List of Hugo Symbols. For example ["TP53", "PIK3CA", "BRCA1"]
          items:
            type: string
        proteinIds:
          type: array
          description: List of Ensembl protein IDs. For example ["ENSP00000439985",
            "ENSP00000478460", "ENSP00000346196"]
          items:
            type: string
        transcriptIds:
          type: array
          description: List of Ensembl transcript IDs. For example ["ENST00000361390",
            "ENST00000361453", "ENST00000361624"]
          items:
            type: string
    EnsemblGene:
      required:
      - geneId
      - hugoSymbol
      type: object
      properties:
        geneId:
          type: string
          description: Ensembl gene id
        hugoSymbol:
          type: string
          description: Approved Hugo symbol
        synonyms:
          type: array
          description: Hugo symbol synonyms
          items:
            type: string
        previousSymbols:
          type: array
          description: Previous Hugo symbols
          items:
            type: string
        entrezGeneId:
          type: string
          description: Entrez Gene Id
    EnsemblTranscript:
      required:
      - geneId
      - proteinId
      - transcriptId
      type: object
      properties:
        uniprotId:
          type: string
        transcriptId:
          type: string
          description: Ensembl transcript id
        geneId:
          type: string
          description: Ensembl gene id
        proteinId:
          type: string
          description: Ensembl protein id
        proteinLength:
          type: integer
          description: Length of protein
          format: int32
        pfamDomains:
          type: array
          description: Pfam domains
          items:
            $ref: '#/components/schemas/PfamDomainRange'
        hugoSymbols:
          type: array
          description: Hugo symbols
          items:
            type: string
        refseqMrnaId:
          type: string
          description: RefSeq mRNA ID
        ccdsId:
          type: string
          description: Consensus CDS (CCDS) ID
        exons:
          type: array
          description: Exon information
          items:
            $ref: '#/components/schemas/Exon'
        utrs:
          type: array
          description: UTR information
          items:
            $ref: '#/components/schemas/UntranslatedRegion'
    Exon:
      required:
      - exonEnd
      - exonId
      - exonStart
      - rank
      - strand
      - version
      type: object
      properties:
        exonId:
          type: string
          description: Exon id
        exonStart:
          type: integer
          description: Start position of exon
          format: int32
        exonEnd:
          type: integer
          description: End position of exon
          format: int32
        rank:
          type: integer
          description: Number of exon in transcript
          format: int32
        strand:
          type: integer
          description: Strand exon is on, -1 for - and 1 for +
          format: int32
        version:
          type: integer
          description: Exon version
          format: int32
    Gene:
      type: object
      properties:
        geneId:
          type: string
          description: geneid
        symbol:
          type: string
          description: symbol
    GeneXref:
      required:
      - db_display_name
      - dbname
      - description
      - display_id
      - primary_id
      - version
      type: object
      properties:
        db_display_name:
          type: string
          description: Database display name
        dbname:
          type: string
          description: Database name
        description:
          type: string
          description: Description
        display_id:
          type: string
          description: Display id
        ensemblGeneId:
          type: string
        info_text:
          type: string
          description: Database info text
        info_types:
          type: string
          description: Database info type
        primary_id:
          type: string
          description: Primary id
        synonyms:
          type: array
          description: Synonyms
          items:
            type: string
        version:
          type: string
          description: Version
    GeneralPopulationStats:
      type: object
      properties:
        counts:
          $ref: '#/components/schemas/SignalPopulationStats'
        frequencies:
          $ref: '#/components/schemas/SignalPopulationStats'
    GenomicLocation:
      required:
      - chromosome
      - end
      - referenceAllele
      - start
      - variantAllele
      type: object
      properties:
        chromosome:
          type: string
          description: Chromosome
        start:
          type: integer
          description: Start Position
          format: int32
        end:
          type: integer
          description: End Position
          format: int32
        referenceAllele:
          type: string
          description: Reference Allele
        variantAllele:
          type: string
          description: Variant Allele
    Gnomad:
      type: object
      properties:
        alleleCount:
          $ref: '#/components/schemas/AlleleCount'
        alleleFrequency:
          $ref: '#/components/schemas/AlleleFrequency'
        alleleNumber:
          $ref: '#/components/schemas/AlleleNumber'
        homozygotes:
          $ref: '#/components/schemas/Homozygotes'
    Hg19:
      type: object
      properties:
        end:
          type: integer
          description: end
          format: int32
        start:
          type: integer
          description: start
          format: int32
    Hg38:
      type: object
      properties:
        end:
          type: string
          description: end
        start:
          type: string
          description: start
    Hgvs:
      type: object
      properties:
        coding:
          type: array
          items:
            type: string
        genomic:
          type: array
          items:
            type: string
    Homozygotes:
      required:
      - hom
      - hom_afr
      - hom_amr
      - hom_asj
      - hom_eas
      - hom_fin
      - hom_nfe
      - hom_oth
      - hom_sas
      type: object
      properties:
        hom:
          type: integer
          format: int32
        hom_afr:
          type: integer
          format: int32
        hom_amr:
          type: integer
          format: int32
        hom_asj:
          type: integer
          format: int32
        hom_eas:
          type: integer
          format: int32
        hom_fin:
          type: integer
          format: int32
        hom_nfe:
          type: integer
          format: int32
        hom_oth:
          type: integer
          format: int32
        hom_sas:
          type: integer
          format: int32
    Hotspot:
      type: object
      properties:
        hugoSymbol:
          type: string
          description: Hugo gene symbol
        inframeCount:
          type: integer
          description: Inframe mutation count
          format: int32
        missenseCount:
          type: integer
          description: Missense mutation count
          format: int32
        residue:
          type: string
          description: Hotspot residue
        spliceCount:
          type: integer
          description: Splice mutation count
          format: int32
        transcriptId:
          type: string
          description: Ensembl Transcript Id
        truncatingCount:
          type: integer
          description: Truncation mutation count
          format: int32
        tumorCount:
          type: integer
          description: Tumor count
          format: int32
        type:
          type: string
          description: Hotspot type
    HotspotAnnotation:
      type: object
      properties:
        annotation:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Hotspot'
        license:
          type: string
    HrdScore:
      type: object
      properties:
        fractionLoh:
          type: number
          description: Median HRD Fraction LOH
          format: double
        lst:
          type: number
          description: Median HRD LST
          format: double
        ntelomericAi:
          type: number
          description: Median HRD ntelomeric AI
          format: double
    Implication:
      type: object
      properties:
        alterations:
          type: array
          items:
            type: string
        description:
          type: string
        levelOfEvidence:
          type: string
          enum:
          - LEVEL_0
          - LEVEL_1
          - LEVEL_2
          - LEVEL_2A
          - LEVEL_2B
          - LEVEL_3A
          - LEVEL_3B
          - LEVEL_4
          - LEVEL_R1
          - LEVEL_R2
          - LEVEL_R3
          - LEVEL_Px1
          - LEVEL_Px2
          - LEVEL_Px3
          - LEVEL_Dx1
          - LEVEL_Dx2
          - LEVEL_Dx3
          - NO
        tumorType:
          $ref: '#/components/schemas/TumorType'
    IndicatorQueryResp:
      type: object
      properties:
        alleleExist:
          type: boolean
          example: false
        dataVersion:
          type: string
        diagnosticImplications:
          type: array
          items:
            $ref: '#/components/schemas/Implication'
        diagnosticSummary:
          type: string
        geneExist:
          type: boolean
          example: false
        geneSummary:
          type: string
        highestDiagnosticImplicationLevel:
          type: string
          enum:
          - LEVEL_0
          - LEVEL_1
          - LEVEL_2
          - LEVEL_2A
          - LEVEL_2B
          - LEVEL_3A
          - LEVEL_3B
          - LEVEL_4
          - LEVEL_R1
          - LEVEL_R2
          - LEVEL_R3
          - LEVEL_Px1
          - LEVEL_Px2
          - LEVEL_Px3
          - LEVEL_Dx1
          - LEVEL_Dx2
          - LEVEL_Dx3
          - NO
        highestPrognosticImplicationLevel:
          type: string
          enum:
          - LEVEL_0
          - LEVEL_1
          - LEVEL_2
          - LEVEL_2A
          - LEVEL_2B
          - LEVEL_3A
          - LEVEL_3B
          - LEVEL_4
          - LEVEL_R1
          - LEVEL_R2
          - LEVEL_R3
          - LEVEL_Px1
          - LEVEL_Px2
          - LEVEL_Px3
          - LEVEL_Dx1
          - LEVEL_Dx2
          - LEVEL_Dx3
          - NO
        highestResistanceLevel:
          type: string
          enum:
          - LEVEL_0
          - LEVEL_1
          - LEVEL_2
          - LEVEL_2A
          - LEVEL_2B
          - LEVEL_3A
          - LEVEL_3B
          - LEVEL_4
          - LEVEL_R1
          - LEVEL_R2
          - LEVEL_R3
          - LEVEL_Px1
          - LEVEL_Px2
          - LEVEL_Px3
          - LEVEL_Dx1
          - LEVEL_Dx2
          - LEVEL_Dx3
          - NO
        highestSensitiveLevel:
          type: string
          enum:
          - LEVEL_0
          - LEVEL_1
          - LEVEL_2
          - LEVEL_2A
          - LEVEL_2B
          - LEVEL_3A
          - LEVEL_3B
          - LEVEL_4
          - LEVEL_R1
          - LEVEL_R2
          - LEVEL_R3
          - LEVEL_Px1
          - LEVEL_Px2
          - LEVEL_Px3
          - LEVEL_Dx1
          - LEVEL_Dx2
          - LEVEL_Dx3
          - NO
        hotspot:
          type: boolean
          example: false
        lastUpdate:
          type: string
        mutationEffect:
          $ref: '#/components/schemas/MutationEffectResp'
        oncogenic:
          type: string
        otherSignificantResistanceLevels:
          type: array
          items:
            type: string
            enum:
            - LEVEL_0
            - LEVEL_1
            - LEVEL_2
            - LEVEL_2A
            - LEVEL_2B
            - LEVEL_3A
            - LEVEL_3B
            - LEVEL_4
            - LEVEL_R1
            - LEVEL_R2
            - LEVEL_R3
            - LEVEL_Px1
            - LEVEL_Px2
            - LEVEL_Px3
            - LEVEL_Dx1
            - LEVEL_Dx2
            - LEVEL_Dx3
            - NO
        otherSignificantSensitiveLevels:
          type: array
          items:
            type: string
            enum:
            - LEVEL_0
            - LEVEL_1
            - LEVEL_2
            - LEVEL_2A
            - LEVEL_2B
            - LEVEL_3A
            - LEVEL_3B
            - LEVEL_4
            - LEVEL_R1
            - LEVEL_R2
            - LEVEL_R3
            - LEVEL_Px1
            - LEVEL_Px2
            - LEVEL_Px3
            - LEVEL_Dx1
            - LEVEL_Dx2
            - LEVEL_Dx3
            - NO
        prognosticImplications:
          type: array
          items:
            $ref: '#/components/schemas/Implication'
        prognosticSummary:
          type: string
        query:
          $ref: '#/components/schemas/Query'
        treatments:
          type: array
          items:
            $ref: '#/components/schemas/IndicatorQueryTreatment'
        tumorTypeSummary:
          type: string
        variantExist:
          type: boolean
          example: false
        variantSummary:
          type: string
        vus:
          type: boolean
          example: false
    IndicatorQueryTreatment:
      type: object
      properties:
        abstracts:
          type: array
          items:
            $ref: '#/components/schemas/ArticleAbstract'
        alterations:
          type: array
          items:
            type: string
        approvedIndications:
          type: array
          items:
            type: string
        description:
          type: string
        drugs:
          type: array
          items:
            $ref: '#/components/schemas/Drug'
        fdaApproved:
          type: boolean
          example: false
        level:
          type: string
          enum:
          - LEVEL_0
          - LEVEL_1
          - LEVEL_2
          - LEVEL_2A
          - LEVEL_2B
          - LEVEL_3A
          - LEVEL_3B
          - LEVEL_4
          - LEVEL_R1
          - LEVEL_R2
          - LEVEL_R3
          - LEVEL_Px1
          - LEVEL_Px2
          - LEVEL_Px3
          - LEVEL_Dx1
          - LEVEL_Dx2
          - LEVEL_Dx3
          - NO
        levelAssociatedCancerType:
          $ref: '#/components/schemas/TumorType'
        pmids:
          type: array
          items:
            type: string
    IntegerRange:
      type: object
      properties:
        end:
          type: integer
          format: int32
        start:
          type: integer
          format: int32
    IntergenicConsequences:
      required:
      - consequenceTerms
      - impact
      - variantAllele
      type: object
      properties:
        impact:
          type: string
          description: impact
        variantAllele:
          type: string
          description: variant_allele
        consequenceTerms:
          type: array
          description: consequence_terms
          items:
            type: string
    MainType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        tumorForm:
          type: string
          enum:
          - SOLID
          - LIQUID
      description: OncoTree Cancer Type
    MutationAssessor:
      required:
      - input
      type: object
      properties:
        codonStartPosition:
          type: string
          description: Codon start position
        cosmicCount:
          type: integer
          description: Number of mutations in COSMIC for this protein
          format: int32
        functionalImpact:
          type: string
          description: Functional impact
        functionalImpactScore:
          type: number
          description: Functional impact score
          format: double
        hgvs:
          type: string
        hugoSymbol:
          type: string
          description: Hugo gene symbol
        input:
          type: string
          description: User-input variants
        mappingIssue:
          type: string
          description: Mapping issue info
        msaGaps:
          type: number
          description: Portion of gaps in variant position in multiple sequence alignment
          format: double
        msaHeight:
          type: integer
          description: Number of diverse sequences in multiple sequence alignment
            (identical or highly similar sequences filtered out)
          format: int32
        msaLink:
          type: string
          description: Link to multiple sequence alignment
        pdbLink:
          type: string
          description: Link to 3d structure browser
        referenceGenomeVariant:
          type: string
          description: Reference genome variant
        referenceGenomeVariantType:
          type: string
          description: Reference genome variant type
        refseqId:
          type: string
          description: Refseq protein ID
        refseqPosition:
          type: integer
          description: Variant position in Refseq protein, can be different from the
            one in Uniprot
          format: int32
        refseqResidue:
          type: string
          description: Reference residue in Refseq protein, can be different from
            the one in Uniprot
        snpCount:
          type: integer
          description: Number of SNPs in dbSNP for this protein
          format: int32
        uniprotId:
          type: string
          description: Uniprot protein accession ID
        uniprotPosition:
          type: integer
          description: Variant position in Uniprot protein, can be different from
            the one in Refseq
          format: int32
        uniprotResidue:
          type: string
          description: Reference residue in Uniprot protein, can be different from
            the one in Refseq
        variant:
          type: string
          description: Amino acid substitution
        variantConservationScore:
          type: number
          description: Variant conservation score
          format: double
        variantSpecificityScore:
          type: number
          description: Variant specificity score
          format: double
    MutationAssessorAnnotation:
      type: object
      properties:
        annotation:
          $ref: '#/components/schemas/MutationAssessor'
        license:
          type: string
    MutationEffectResp:
      type: object
      properties:
        citations:
          $ref: '#/components/schemas/Citations'
        description:
          type: string
        knownEffect:
          type: string
    Mutdb:
      type: object
      properties:
        alt:
          type: string
          description: alt
        chrom:
          type: string
          description: chrom
        cosmicId:
          type: string
          description: cosmic_id
        hg19:
          $ref: '#/components/schemas/Hg19'
        mutpredScore:
          type: number
          description: mutpred_score
          format: double
        ref:
          type: string
          description: ref
        rsid:
          type: string
          description: rsid
        uniprotId:
          type: string
          description: uniprot_id
    MyVariantInfo:
      type: object
      properties:
        clinVar:
          $ref: '#/components/schemas/ClinVar'
        cosmic:
          $ref: '#/components/schemas/Cosmic'
        dbsnp:
          $ref: '#/components/schemas/Dbsnp'
        gnomadExome:
          $ref: '#/components/schemas/Gnomad'
        gnomadGenome:
          $ref: '#/components/schemas/Gnomad'
        hgvs:
          type: string
          description: hgvs
        mutdb:
          $ref: '#/components/schemas/Mutdb'
        query:
          type: string
        snpeff:
          $ref: '#/components/schemas/Snpeff'
        variant:
          type: string
          description: variant
        vcf:
          $ref: '#/components/schemas/Vcf'
        version:
          type: integer
          description: version
          format: int32
    MyVariantInfoAnnotation:
      type: object
      properties:
        annotation:
          $ref: '#/components/schemas/MyVariantInfo'
        license:
          type: string
    NucleotideContext:
      required:
      - seq
      type: object
      properties:
        hgvs:
          type: string
        id:
          type: string
        molecule:
          type: string
        query:
          type: string
        seq:
          type: string
          description: Nucleotide context sequence
    NucleotideContextAnnotation:
      type: object
      properties:
        annotation:
          $ref: '#/components/schemas/NucleotideContext'
        license:
          type: string
    OncokbAnnotation:
      type: object
      properties:
        annotation:
          $ref: '#/components/schemas/IndicatorQueryResp'
        license:
          type: string
    PdbHeader:
      required:
      - pdbId
      - title
      type: object
      properties:
        compound:
          type: object
          properties: {}
        pdbId:
          type: string
          description: PDB id
        source:
          type: object
          properties: {}
        title:
          type: string
          description: PDB description
    PfamDomain:
      required:
      - name
      - pfamAccession
      type: object
      properties:
        description:
          type: string
          description: PFAM domain description
        name:
          type: string
          description: PFAM domain name
        pfamAccession:
          type: string
          description: PFAM domain accession
    PfamDomainRange:
      required:
      - pfamDomainEnd
      - pfamDomainId
      - pfamDomainStart
      type: object
      properties:
        pfamDomainId:
          type: string
          description: Pfam domain id
        pfamDomainStart:
          type: integer
          description: Pfam domain start amino acid
          format: int32
        pfamDomainEnd:
          type: integer
          description: Pfam domain end amino acid
          format: int32
    PostTranslationalModification:
      type: object
      properties:
        ensemblTranscriptIds:
          type: array
          items:
            type: string
        position:
          type: integer
          format: int32
        pubmedIds:
          type: array
          items:
            type: string
        sequence:
          type: string
        type:
          type: string
        uniprotAccession:
          type: string
        uniprotEntry:
          type: string
    PtmAnnotation:
      type: object
      properties:
        annotation:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/PostTranslationalModification'
        license:
          type: string
    PtmFilter:
      type: object
      properties:
        transcriptIds:
          type: array
          description: List of Ensembl transcript IDs. For example ["ENST00000361390",
            "ENST00000361453", "ENST00000361624"]
          items:
            type: string
    Query:
      type: object
      properties:
        alteration:
          type: string
        alterationType:
          type: string
        consequence:
          type: string
        entrezGeneId:
          type: integer
          format: int32
        hgvs:
          type: string
        hugoSymbol:
          type: string
        id:
          type: string
        proteinEnd:
          type: integer
          format: int32
        proteinStart:
          type: integer
          format: int32
        svType:
          type: string
          enum:
          - DELETION
          - TRANSLOCATION
          - DUPLICATION
          - INSERTION
          - INVERSION
          - FUSION
          - UNKNOWN
        tumorType:
          type: string
        type:
          type: string
    Rcv:
      type: object
      properties:
        accession:
          type: string
          description: accession
        clinicalSignificance:
          type: string
          description: clinical_significance
        origin:
          type: string
          description: origin
        preferredName:
          type: string
          description: preferred_name
    SignalAnnotation:
      type: object
      properties:
        annotation:
          type: array
          items:
            $ref: '#/components/schemas/SignalMutation'
        license:
          type: string
    SignalMutation:
      type: object
      properties:
        biallelicCountsByTumorType:
          type: array
          description: Biallelic Counts by Tumor Type
          items:
            $ref: '#/components/schemas/CountByTumorType'
        chromosome:
          type: string
          description: Chromosome
        countsByTumorType:
          type: array
          description: Counts by Tumor Type
          items:
            $ref: '#/components/schemas/CountByTumorType'
        endPosition:
          type: integer
          description: End Position
          format: int64
        generalPopulationStats:
          $ref: '#/components/schemas/GeneralPopulationStats'
        hugoGeneSymbol:
          type: string
          description: Hugo Gene Symbol
        mskExperReview:
          type: boolean
          description: Msk Expert Review
          example: false
        mutationStatus:
          type: string
          description: Mutation Status
        overallNumberOfGermlineHomozygous:
          type: integer
          format: int32
        pathogenic:
          type: string
          description: Pathogenic
        penetrance:
          type: string
          description: Penetrance
        qcPassCountsByTumorType:
          type: array
          description: QC Pass Counts by Tumor Type
          items:
            $ref: '#/components/schemas/CountByTumorType'
        referenceAllele:
          type: string
          description: Reference Allele
        startPosition:
          type: integer
          description: Start Position
          format: int64
        statsByTumorType:
          type: array
          description: Stats By Tumor Type
          items:
            $ref: '#/components/schemas/StatsByTumorType'
        variantAllele:
          type: string
          description: Variant Allele
    SignalPopulationStats:
      type: object
      properties:
        afr:
          type: number
          description: African/African American
          format: double
        asj:
          type: number
          description: Ashkenazi Jewish
          format: double
        asn:
          type: number
          description: Asian
          format: double
        eur:
          type: number
          description: European
          format: double
        impact:
          type: number
          description: Impact
          format: double
        oth:
          type: number
          description: Other
          format: double
    Snpeff:
      type: object
      properties:
        license:
          type: string
          description: license
    StatsByTumorType:
      type: object
      properties:
        ageAtDx:
          type: integer
          description: Median Age at Dx
          format: int32
        fBiallelic:
          type: number
          description: Frequency Of Biallelic
          format: double
        fCancerTypeCount:
          type: number
          description: Frequency Of Cancer Type Count
          format: double
        hrdScore:
          $ref: '#/components/schemas/HrdScore'
        msiScore:
          type: number
          description: Msi Score
          format: double
        nCancerTypeCount:
          type: integer
          description: Number Of Cancer Type Count
          format: int32
        numberOfGermlineHomozygous:
          type: integer
          description: Number Of Germline Homozygous Per Tumor Type
          format: int32
        numberWithSig:
          type: integer
          description: Number of Variants with Signature
          format: int32
        tmb:
          type: number
          description: Median TMB
          format: double
        tumorType:
          type: string
          description: Tumor Type
    TranscriptConsequence:
      required:
      - transcript_id
      type: object
      properties:
        amino_acids:
          type: string
          description: Amino acids
        canonical:
          type: string
          description: Canonical transcript indicator
        codons:
          type: string
          description: Codons
        consequence_terms:
          type: array
          description: List of consequence terms
          items:
            type: string
        exon:
          type: string
        gene_id:
          type: string
          description: Ensembl gene id
        gene_symbol:
          type: string
          description: Hugo gene symbol
        hgnc_id:
          type: string
          description: HGNC id
        hgvsc:
          type: string
          description: HGVSc
        hgvsg:
          type: string
          description: HGVSg
        hgvsp:
          type: string
          description: HGVSp
        polyphen_prediction:
          type: string
          description: Polyphen Prediction
        polyphen_score:
          type: number
          description: Polyphen Score
          format: double
        protein_end:
          type: integer
          description: Protein end position
          format: int32
        protein_id:
          type: string
          description: Ensembl protein id
        protein_start:
          type: integer
          description: Protein start position
          format: int32
        refseq_transcript_ids:
          type: array
          description: List of RefSeq transcript ids
          items:
            type: string
        sift_prediction:
          type: string
          description: Sift Prediction
        sift_score:
          type: number
          description: Sift Score
          format: double
        transcript_id:
          type: string
          description: Ensembl transcript id
        uniprotId:
          type: string
        variant_allele:
          type: string
          description: Variant allele
    TranscriptConsequenceSummary:
      required:
      - transcriptId
      type: object
      properties:
        aminoAcidAlt:
          type: string
          description: Alt Amino Acid
        aminoAcidRef:
          type: string
          description: Reference Amino Acid
        aminoAcids:
          type: string
          description: Amino acids change
        codonChange:
          type: string
          description: Codon change
        consequenceTerms:
          type: string
          description: Consequence terms (comma separated)
        entrezGeneId:
          type: string
          description: Entrez gene id
        exon:
          type: string
        hgvsc:
          type: string
          description: HGVSc
        hgvsp:
          type: string
          description: HGVSp
        hgvspShort:
          type: string
          description: HGVSp short
        hugoGeneSymbol:
          type: string
          description: Hugo gene symbol
        polyphenPrediction:
          type: string
          description: Polyphen Prediction
        polyphenScore:
          type: number
          description: Polyphen Score
          format: double
        proteinPosition:
          $ref: '#/components/schemas/IntegerRange'
        refSeq:
          type: string
          description: RefSeq id
        siftPrediction:
          type: string
          description: Sift Prediction
        siftScore:
          type: number
          description: Sift Score
          format: double
        transcriptId:
          type: string
          description: Transcript id
        uniprotId:
          type: string
          description: Uniprot ID
        variantClassification:
          type: string
          description: Variant classification
    TumorType:
      type: object
      properties:
        children:
          type: object
          properties: {}
        code:
          type: string
        color:
          type: string
        id:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        mainType:
          $ref: '#/components/schemas/MainType'
        name:
          type: string
        parent:
          type: string
        tissue:
          type: string
        tumorForm:
          type: string
          enum:
          - SOLID
          - LIQUID
      description: OncoTree Detailed Cancer Type
    UntranslatedRegion:
      required:
      - end
      - start
      - strand
      - type
      type: object
      properties:
        type:
          type: string
          description: UTR Type
        start:
          type: integer
          description: Start position of UTR
          format: int32
        end:
          type: integer
          description: End position of UTR
          format: int32
        strand:
          type: integer
          description: Strand UTR is on, -1 for - and 1 for +
          format: int32
    VariantAnnotation:
      required:
      - id
      - intergenic_consequences
      - originalVariantQuery
      - variant
      type: object
      properties:
        allele_string:
          type: string
          description: 'Allele string (e.g: A/T)'
        annotationJSON:
          type: string
          description: Annotation data as JSON string
        annotation_summary:
          $ref: '#/components/schemas/VariantAnnotationSummary'
        assembly_name:
          type: string
          description: NCBI build number
        clinvar:
          $ref: '#/components/schemas/ClinvarAnnotation'
        colocatedVariants:
          type: array
          items:
            $ref: '#/components/schemas/ColocatedVariant'
        end:
          type: integer
          description: End position
          format: int32
        hgvsg:
          type: string
        hotspots:
          $ref: '#/components/schemas/HotspotAnnotation'
        id:
          type: string
          description: Variant id
        intergenic_consequences:
          type: array
          description: intergenicConsequences
          items:
            $ref: '#/components/schemas/IntergenicConsequences'
        most_severe_consequence:
          type: string
          description: Most severe consequence
        mutation_assessor:
          $ref: '#/components/schemas/MutationAssessorAnnotation'
        my_variant_info:
          $ref: '#/components/schemas/MyVariantInfoAnnotation'
        nucleotide_context:
          $ref: '#/components/schemas/NucleotideContextAnnotation'
        oncokb:
          $ref: '#/components/schemas/OncokbAnnotation'
        originalVariantQuery:
          type: string
          description: Original variant query
        ptms:
          $ref: '#/components/schemas/PtmAnnotation'
        seq_region_name:
          type: string
          description: Chromosome
        signalAnnotation:
          $ref: '#/components/schemas/SignalAnnotation'
        start:
          type: integer
          description: Start position
          format: int32
        strand:
          type: integer
          description: Strand (negative or positive)
          format: int32
        successfully_annotated:
          type: boolean
          description: Status flag indicating whether variant was succesfully annotated
          example: false
        transcript_consequences:
          type: array
          description: List of transcripts
          items:
            $ref: '#/components/schemas/TranscriptConsequence'
        variant:
          type: string
          description: Variant key
    VariantAnnotationSummary:
      required:
      - transcriptConsequenceSummaries
      - transcriptConsequenceSummary
      - transcriptConsequences
      - variant
      type: object
      properties:
        assemblyName:
          type: string
          description: Assembly name
        canonicalTranscriptId:
          type: string
          description: Canonical transcript id
        genomicLocation:
          $ref: '#/components/schemas/GenomicLocation'
        strandSign:
          type: string
          description: Strand (- or +)
        transcriptConsequenceSummaries:
          type: array
          description: All transcript consequence summaries
          items:
            $ref: '#/components/schemas/TranscriptConsequenceSummary'
        transcriptConsequenceSummary:
          $ref: '#/components/schemas/TranscriptConsequenceSummary'
        transcriptConsequences:
          type: array
          description: (Deprecated) Transcript consequence summaries (list of one
            when using annotation/, multiple when using annotation/summary/
          items:
            $ref: '#/components/schemas/TranscriptConsequenceSummary'
        variant:
          type: string
          description: Variant key
        variantType:
          type: string
          description: Variant type
    Vcf:
      type: object
      properties:
        alt:
          type: string
          description: alt
        position:
          type: string
          description: position
        ref:
          type: string
          description: ref
    Version:
      type: object
      properties:
        version:
          type: string
