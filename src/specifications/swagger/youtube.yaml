swagger: '2.0'
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: >-
    Supports core YouTube features, such as uploading videos, creating and
    managing playlists, searching for content, and much more.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: YouTube Data
  version: 1.0.0
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - media
  x-logo:
    url: >-
      https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.31
      format: google
      url: 'https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: youtube
host: 'localhost:9009'
basePath: /api
schemes:
  - http
paths:
  /search:
    get:
      produces:
        - application/octet-stream
      parameters:
        - description: >-
            The channelId parameter indicates that the API response should only
            contain resources created by the channel
          in: query
          name: channelId
          type: string
        - description: >-
            The channelType parameter lets you restrict a search to a particular
            type of channel.
          enum:
            - any
            - show
          in: query
          name: channelType
          type: string
        - description: >-
            The eventType parameter restricts a search to broadcast events. If
            you specify a value for this parameter, you must also set the type
            parameter's value to video.
          enum:
            - completed
            - live
            - upcoming
          in: query
          name: eventType
          type: string
        - description: >-
            Note: This parameter is intended exclusively for YouTube content
            partners.


            The forContentOwner parameter restricts the search to only retrieve
            resources owned by the content owner specified by the
            onBehalfOfContentOwner parameter. The user must be authenticated
            using a CMS account linked to the specified content owner and
            onBehalfOfContentOwner must be provided.
          in: query
          name: forContentOwner
          type: boolean
        - description: >-
            The forDeveloper parameter restricts the search to only retrieve
            videos uploaded via the developer's application or website. The API
            server uses the request's authorization credentials to identify the
            developer. Therefore, a developer can restrict results to videos
            uploaded through the developer's own app or website but not to
            videos uploaded through other apps or sites.
          in: query
          name: forDeveloper
          type: boolean
        - description: >-
            The forMine parameter restricts the search to only retrieve videos
            owned by the authenticated user. If you set this parameter to true,
            then the type parameter's value must also be set to video.
          in: query
          name: forMine
          type: boolean
        - description: >-
            The location parameter, in conjunction with the locationRadius
            parameter, defines a circular geographic area and also restricts a
            search to videos that specify, in their metadata, a geographic
            location that falls within that area. The parameter value is a
            string that specifies latitude/longitude coordinates e.g.
            (37.42307,-122.08427).



            - The location parameter value identifies the point at the center of
            the area.

            - The locationRadius parameter specifies the maximum distance that
            the location associated with a video can be from that point for the
            video to still be included in the search results.The API returns an
            error if your request specifies a value for the location parameter
            but does not also specify a value for the locationRadius parameter.
          in: query
          name: location
          type: string
        - description: >-
            The locationRadius parameter, in conjunction with the location
            parameter, defines a circular geographic area.


            The parameter value must be a floating point number followed by a
            measurement unit. Valid measurement units are m, km, ft, and mi. For
            example, valid parameter values include 1500m, 5km, 10000ft, and
            0.75mi. The API does not support locationRadius parameter values
            larger than 1000 kilometers.


            Note: See the definition of the location parameter for more
            information.
          in: query
          name: locationRadius
          type: string
        - default: 5
          description: >-
            The maxResults parameter specifies the maximum number of items that
            should be returned in the result set.
          in: query
          maximum: 50
          minimum: 0
          name: maxResults
          type: integer
        - description: >-
            Note: This parameter is intended exclusively for YouTube content
            partners.


            The onBehalfOfContentOwner parameter indicates that the request's
            authorization credentials identify a YouTube CMS user who is acting
            on behalf of the content owner specified in the parameter value.
            This parameter is intended for YouTube content partners that own and
            manage many different YouTube channels. It allows content owners to
            authenticate once and get access to all their video and channel
            data, without having to provide authentication credentials for each
            individual channel. The CMS account that the user authenticates with
            must be linked to the specified YouTube content owner.
          in: query
          name: onBehalfOfContentOwner
          type: string
        - default: relevance
          description: >-
            The order parameter specifies the method that will be used to order
            resources in the API response.
          enum:
            - date
            - rating
            - relevance
            - title
            - videoCount
            - viewCount
          in: query
          name: order
          type: string
        - description: >-
            The pageToken parameter identifies a specific page in the result set
            that should be returned. In an API response, the nextPageToken and
            prevPageToken properties identify other pages that could be
            retrieved.
          in: query
          name: pageToken
          type: string
        - description: >-
            The part parameter specifies a comma-separated list of one or more
            search resource properties that the API response will include. Set
            the parameter value to snippet.
          enum:
            - snippet
          in: query
          name: part
          required: true
          type: string
        - description: >-
            The publishedAfter parameter indicates that the API response should
            only contain resources created after the specified time. The value
            is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).
          in: query
          name: publishedAfter
          type: string
        - description: >-
            The publishedBefore parameter indicates that the API response should
            only contain resources created before the specified time. The value
            is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).
          in: query
          name: publishedBefore
          type: string
        - description: >-
            The q parameter specifies the query term to search for.


            Your request can also use the Boolean NOT (-) and OR (|) operators
            to exclude videos or to find videos that are associated with one of
            several search terms. For example, to search for videos matching
            either "boating" or "sailing", set the q parameter value to
            boating|sailing. Similarly, to search for videos matching either
            "boating" or "sailing" but not "fishing", set the q parameter value
            to boating|sailing -fishing. Note that the pipe character must be
            URL-escaped when it is sent in your API request. The URL-escaped
            value for the pipe character is %7C.
          in: query
          name: q
          type: string
        - description: >-
            The regionCode parameter instructs the API to return search results
            for the specified country. The parameter value is an ISO 3166-1
            alpha-2 country code.
          in: query
          name: regionCode
          type: string
        - description: >-
            The relatedToVideoId parameter retrieves a list of videos that are
            related to the video that the parameter value identifies. The
            parameter value must be set to a YouTube video ID and, if you are
            using this parameter, the type parameter must be set to video.
          in: query
          name: relatedToVideoId
          type: string
        - description: >-
            The relevanceLanguage parameter instructs the API to return search
            results that are most relevant to the specified language. The
            parameter value is typically an ISO 639-1 two-letter language code.
            However, you should use the values zh-Hans for simplified Chinese
            and zh-Hant for traditional Chinese. Please note that results in
            other languages will still be returned if they are highly relevant
            to the search query term.
          in: query
          name: relevanceLanguage
          type: string
        - description: >-
            The safeSearch parameter indicates whether the search results should
            include restricted content as well as standard content.
          enum:
            - moderate
            - none
            - strict
          in: query
          name: safeSearch
          type: string
        - description: >-
            The topicId parameter indicates that the API response should only
            contain resources associated with the specified topic. The value
            identifies a Freebase topic ID.
          in: query
          name: topicId
          type: string
        - default: 'video,channel,playlist'
          description: >-
            The type parameter restricts a search query to only retrieve a
            particular type of resource. The value is a comma-separated list of
            resource types.
          in: query
          name: type
          type: string
        - description: >-
            The videoCaption parameter indicates whether the API should filter
            video search results based on whether they have captions. If you
            specify a value for this parameter, you must also set the type
            parameter's value to video.
          enum:
            - any
            - closedCaption
            - none
          in: query
          name: videoCaption
          type: string
        - description: >-
            The videoCategoryId parameter filters video search results based on
            their category. If you specify a value for this parameter, you must
            also set the type parameter's value to video.
          in: query
          name: videoCategoryId
          type: string
        - description: >-
            The videoDefinition parameter lets you restrict a search to only
            include either high definition (HD) or standard definition (SD)
            videos. HD videos are available for playback in at least 720p,
            though higher resolutions, like 1080p, might also be available. If
            you specify a value for this parameter, you must also set the type
            parameter's value to video.
          enum:
            - any
            - high
            - standard
          in: query
          name: videoDefinition
          type: string
        - description: >-
            The videoDimension parameter lets you restrict a search to only
            retrieve 2D or 3D videos. If you specify a value for this parameter,
            you must also set the type parameter's value to video.
          enum:
            - 2d
            - 3d
            - any
          in: query
          name: videoDimension
          type: string
        - description: >-
            The videoDuration parameter filters video search results based on
            their duration. If you specify a value for this parameter, you must
            also set the type parameter's value to video.
          enum:
            - any
            - long
            - medium
            - short
          in: query
          name: videoDuration
          type: string
        - description: >-
            The videoEmbeddable parameter lets you to restrict a search to only
            videos that can be embedded into a webpage. If you specify a value
            for this parameter, you must also set the type parameter's value to
            video.
          enum:
            - any
            - 'true'
          in: query
          name: videoEmbeddable
          type: string
        - description: >-
            The videoLicense parameter filters search results to only include
            videos with a particular license. YouTube lets video uploaders
            choose to attach either the Creative Commons license or the standard
            YouTube license to each of their videos. If you specify a value for
            this parameter, you must also set the type parameter's value to
            video.
          enum:
            - any
            - creativeCommon
            - youtube
          in: query
          name: videoLicense
          type: string
        - description: >-
            The videoSyndicated parameter lets you to restrict a search to only
            videos that can be played outside youtube.com. If you specify a
            value for this parameter, you must also set the type parameter's
            value to video.
          enum:
            - any
            - 'true'
          in: query
          name: videoSyndicated
          type: string
        - description: >-
            The videoType parameter lets you restrict a search to a particular
            type of videos. If you specify a value for this parameter, you must
            also set the type parameter's value to video.
          enum:
            - any
            - episode
            - movie
          in: query
          name: videoType
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SearchListResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/youtube'
          Oauth2c:
            - 'https://www.googleapis.com/auth/youtube'
        - Oauth2:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
          Oauth2c:
            - 'https://www.googleapis.com/auth/youtube.force-ssl'
        - Oauth2:
            - 'https://www.googleapis.com/auth/youtube.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/youtube.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/youtubepartner'
          Oauth2c:
            - 'https://www.googleapis.com/auth/youtubepartner'
      tags:
        - search
      description: >-
        Returns a collection of search results that match the query parameters
        specified in the API request. By default, a search result set identifies
        matching video, channel, and playlist resources, but you can also
        configure queries to only retrieve a specific type of resource.
      operationId: youtube.search.list
definitions:
  AccessPolicy:
    description: Rights management policy for YouTube resources.
    properties:
      allowed:
        description: >-
          The value of allowed indicates whether the access to the policy is
          allowed or denied by default.
        type: boolean
      exception:
        description: >-
          A list of region codes that identify countries where the default
          policy do not apply.
        items:
          type: string
        type: array
    type: object
  Activity:
    description: >-
      An activity resource contains information about an action that a
      particular channel, or user, has taken on YouTube.The actions reported in
      activity feeds include rating a video, sharing a video, marking a video as
      a favorite, commenting on a video, uploading a video, and so forth. Each
      activity resource identifies the type of action, the channel associated
      with the action, and the resource(s) associated with the action, such as
      the video that was rated or uploaded.
    properties:
      contentDetails:
        $ref: '#/definitions/ActivityContentDetails'
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the activity.
        type: string
      kind:
        default: youtube#activity
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#activity".
        type: string
      snippet:
        $ref: '#/definitions/ActivitySnippet'
    type: object
  ActivityContentDetails:
    description: >-
      Details about the content of an activity: the video that was shared, the
      channel that was subscribed to, etc.
    properties:
      bulletin:
        $ref: '#/definitions/ActivityContentDetailsBulletin'
      channelItem:
        $ref: '#/definitions/ActivityContentDetailsChannelItem'
      comment:
        $ref: '#/definitions/ActivityContentDetailsComment'
      favorite:
        $ref: '#/definitions/ActivityContentDetailsFavorite'
      like:
        $ref: '#/definitions/ActivityContentDetailsLike'
      playlistItem:
        $ref: '#/definitions/ActivityContentDetailsPlaylistItem'
      promotedItem:
        $ref: '#/definitions/ActivityContentDetailsPromotedItem'
      recommendation:
        $ref: '#/definitions/ActivityContentDetailsRecommendation'
      social:
        $ref: '#/definitions/ActivityContentDetailsSocial'
      subscription:
        $ref: '#/definitions/ActivityContentDetailsSubscription'
      upload:
        $ref: '#/definitions/ActivityContentDetailsUpload'
    type: object
  ActivityContentDetailsBulletin:
    description: Details about a channel bulletin post.
    properties:
      resourceId:
        $ref: '#/definitions/ResourceId'
    type: object
  ActivityContentDetailsChannelItem:
    description: Details about a resource which was added to a channel.
    properties:
      resourceId:
        $ref: '#/definitions/ResourceId'
    type: object
  ActivityContentDetailsComment:
    description: Information about a resource that received a comment.
    properties:
      resourceId:
        $ref: '#/definitions/ResourceId'
    type: object
  ActivityContentDetailsFavorite:
    description: Information about a video that was marked as a favorite video.
    properties:
      resourceId:
        $ref: '#/definitions/ResourceId'
    type: object
  ActivityContentDetailsLike:
    description: Information about a resource that received a positive (like) rating.
    properties:
      resourceId:
        $ref: '#/definitions/ResourceId'
    type: object
  ActivityContentDetailsPlaylistItem:
    description: Information about a new playlist item.
    properties:
      playlistId:
        description: The value that YouTube uses to uniquely identify the playlist.
        type: string
      playlistItemId:
        description: ID of the item within the playlist.
        type: string
      resourceId:
        $ref: '#/definitions/ResourceId'
    type: object
  ActivityContentDetailsPromotedItem:
    description: Details about a resource which is being promoted.
    properties:
      adTag:
        description: The URL the client should fetch to request a promoted item.
        type: string
      clickTrackingUrl:
        description: >-
          The URL the client should ping to indicate that the user clicked
          through on this promoted item.
        type: string
      creativeViewUrl:
        description: >-
          The URL the client should ping to indicate that the user was shown
          this promoted item.
        type: string
      ctaType:
        description: >-
          The type of call-to-action, a message to the user indicating action
          that can be taken.
        enum:
          - unspecified
          - visitAdvertiserSite
        type: string
      customCtaButtonText:
        description: >-
          The custom call-to-action button text. If specified, it will override
          the default button text for the cta_type.
        type: string
      descriptionText:
        description: The text description to accompany the promoted item.
        type: string
      destinationUrl:
        description: >-
          The URL the client should direct the user to, if the user chooses to
          visit the advertiser's website.
        type: string
      forecastingUrl:
        description: >-
          The list of forecasting URLs. The client should ping all of these URLs
          when a promoted item is not available, to indicate that a promoted
          item could have been shown.
        items:
          type: string
        type: array
      impressionUrl:
        description: >-
          The list of impression URLs. The client should ping all of these URLs
          to indicate that the user was shown this promoted item.
        items:
          type: string
        type: array
      videoId:
        description: The ID that YouTube uses to uniquely identify the promoted video.
        type: string
    type: object
  ActivityContentDetailsRecommendation:
    description: Information that identifies the recommended resource.
    properties:
      reason:
        description: The reason that the resource is recommended to the user.
        enum:
          - unspecified
          - videoFavorited
          - videoLiked
          - videoWatched
        type: string
      resourceId:
        $ref: '#/definitions/ResourceId'
      seedResourceId:
        $ref: '#/definitions/ResourceId'
    type: object
  ActivityContentDetailsSocial:
    description: Details about a social network post.
    properties:
      author:
        description: The author of the social network post.
        type: string
      imageUrl:
        description: An image of the post's author.
        type: string
      referenceUrl:
        description: The URL of the social network post.
        type: string
      resourceId:
        $ref: '#/definitions/ResourceId'
      type:
        description: The name of the social network.
        enum:
          - facebook
          - googlePlus
          - twitter
          - unspecified
        type: string
    type: object
  ActivityContentDetailsSubscription:
    description: Information about a channel that a user subscribed to.
    properties:
      resourceId:
        $ref: '#/definitions/ResourceId'
    type: object
  ActivityContentDetailsUpload:
    description: Information about the uploaded video.
    properties:
      videoId:
        description: The ID that YouTube uses to uniquely identify the uploaded video.
        type: string
    type: object
  ActivityListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: 'A list of activities, or events, that match the request criteria.'
        items:
          $ref: '#/definitions/Activity'
        type: array
      kind:
        default: youtube#activityListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#activityListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  ActivitySnippet:
    description: >-
      Basic details about an activity, including title, description, thumbnails,
      activity type and group.
    properties:
      channelId:
        description: >-
          The ID that YouTube uses to uniquely identify the channel associated
          with the activity.
        type: string
      channelTitle:
        description: Channel title for the channel responsible for this activity
        type: string
      description:
        description: >-
          The description of the resource primarily associated with the
          activity.
        type: string
      groupId:
        description: >-
          The group ID associated with the activity. A group ID identifies user
          events that are associated with the same user and resource. For
          example, if a user rates a video and marks the same video as a
          favorite, the entries for those events would have the same group ID in
          the user's activity feed. In your user interface, you can avoid
          repetition by grouping events with the same groupId value.
        type: string
      publishedAt:
        description: >-
          The date and time that the video was uploaded. The value is specified
          in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      thumbnails:
        $ref: '#/definitions/ThumbnailDetails'
      title:
        description: The title of the resource primarily associated with the activity.
        type: string
      type:
        description: The type of activity that the resource describes.
        enum:
          - bulletin
          - channelItem
          - comment
          - favorite
          - like
          - playlistItem
          - promotedItem
          - recommendation
          - social
          - subscription
          - upload
        type: string
    type: object
  Caption:
    description: >-
      A caption resource represents a YouTube caption track. A caption track is
      associated with exactly one YouTube video.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the caption track.
        type: string
      kind:
        default: youtube#caption
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#caption".
        type: string
      snippet:
        $ref: '#/definitions/CaptionSnippet'
    type: object
  CaptionListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of captions that match the request criteria.
        items:
          $ref: '#/definitions/Caption'
        type: array
      kind:
        default: youtube#captionListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#captionListResponse".
        type: string
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  CaptionSnippet:
    description: 'Basic details about a caption track, such as its language and name.'
    properties:
      audioTrackType:
        description: The type of audio track associated with the caption track.
        enum:
          - commentary
          - descriptive
          - primary
          - unknown
        type: string
      failureReason:
        description: >-
          The reason that YouTube failed to process the caption track. This
          property is only present if the state property's value is failed.
        enum:
          - processingFailed
          - unknownFormat
          - unsupportedFormat
        type: string
      isAutoSynced:
        description: >-
          Indicates whether YouTube synchronized the caption track to the audio
          track in the video. The value will be true if a sync was explicitly
          requested when the caption track was uploaded. For example, when
          calling the captions.insert or captions.update methods, you can set
          the sync parameter to true to instruct YouTube to sync the uploaded
          track to the video. If the value is false, YouTube uses the time codes
          in the uploaded caption track to determine when to display captions.
        type: boolean
      isCC:
        description: >-
          Indicates whether the track contains closed captions for the deaf and
          hard of hearing. The default value is false.
        type: boolean
      isDraft:
        description: >-
          Indicates whether the caption track is a draft. If the value is true,
          then the track is not publicly visible. The default value is false.
        type: boolean
      isEasyReader:
        description: >-
          Indicates whether caption track is formatted for "easy reader,"
          meaning it is at a third-grade level for language learners. The
          default value is false.
        type: boolean
      isLarge:
        description: >-
          Indicates whether the caption track uses large text for the
          vision-impaired. The default value is false.
        type: boolean
      language:
        description: >-
          The language of the caption track. The property value is a BCP-47
          language tag.
        type: string
      lastUpdated:
        description: >-
          The date and time when the caption track was last updated. The value
          is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      name:
        description: >-
          The name of the caption track. The name is intended to be visible to
          the user as an option during playback.
        type: string
      status:
        description: The caption track's status.
        enum:
          - failed
          - serving
          - syncing
        type: string
      trackKind:
        description: The caption track's type.
        enum:
          - ASR
          - forced
          - standard
        type: string
      videoId:
        description: >-
          The ID that YouTube uses to uniquely identify the video associated
          with the caption track.
        type: string
    type: object
  CdnSettings:
    description: Brief description of the live stream cdn settings.
    properties:
      format:
        description: The format of the video stream that you are sending to Youtube.
        type: string
      frameRate:
        description: The frame rate of the inbound video data.
        enum:
          - 30fps
          - 60fps
          - variable
        type: string
      ingestionInfo:
        $ref: '#/definitions/IngestionInfo'
      ingestionType:
        description: The method or protocol used to transmit the video stream.
        enum:
          - dash
          - hls
          - rtmp
          - webrtc
        type: string
      resolution:
        description: The resolution of the inbound video data.
        enum:
          - 1080p
          - 1440p
          - 2160p
          - 240p
          - 360p
          - 480p
          - 720p
          - variable
        type: string
    type: object
  Channel:
    description: A channel resource contains information about a YouTube channel.
    properties:
      auditDetails:
        $ref: '#/definitions/ChannelAuditDetails'
      brandingSettings:
        $ref: '#/definitions/ChannelBrandingSettings'
      contentDetails:
        $ref: '#/definitions/ChannelContentDetails'
      contentOwnerDetails:
        $ref: '#/definitions/ChannelContentOwnerDetails'
      conversionPings:
        $ref: '#/definitions/ChannelConversionPings'
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the channel.
        type: string
      invideoPromotion:
        $ref: '#/definitions/InvideoPromotion'
      kind:
        default: youtube#channel
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#channel".
        type: string
      localizations:
        additionalProperties:
          $ref: '#/definitions/ChannelLocalization'
        description: Localizations for different languages
        type: object
      snippet:
        $ref: '#/definitions/ChannelSnippet'
      statistics:
        $ref: '#/definitions/ChannelStatistics'
      status:
        $ref: '#/definitions/ChannelStatus'
      topicDetails:
        $ref: '#/definitions/ChannelTopicDetails'
    type: object
  ChannelAuditDetails:
    description: >-
      The auditDetails object encapsulates channel data that is relevant for
      YouTube Partners during the audit process.
    properties:
      communityGuidelinesGoodStanding:
        description: Whether or not the channel respects the community guidelines.
        type: boolean
      contentIdClaimsGoodStanding:
        description: Whether or not the channel has any unresolved claims.
        type: boolean
      copyrightStrikesGoodStanding:
        description: Whether or not the channel has any copyright strikes.
        type: boolean
    type: object
  ChannelBannerResource:
    description: A channel banner returned as the response to a channel_banner.insert call.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      kind:
        default: youtube#channelBannerResource
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#channelBannerResource".
        type: string
      url:
        description: The URL of this banner image.
        type: string
    type: object
  ChannelBrandingSettings:
    description: Branding properties of a YouTube channel.
    properties:
      channel:
        $ref: '#/definitions/ChannelSettings'
      hints:
        description: Additional experimental branding properties.
        items:
          $ref: '#/definitions/PropertyValue'
        type: array
      image:
        $ref: '#/definitions/ImageSettings'
      watch:
        $ref: '#/definitions/WatchSettings'
    type: object
  ChannelContentDetails:
    description: Details about the content of a channel.
    properties:
      relatedPlaylists:
        properties:
          favorites:
            description: >-
              The ID of the playlist that contains the channel"s favorite
              videos. Use the  playlistItems.insert and  playlistItems.delete to
              add or remove items from that list.
            type: string
          likes:
            description: >-
              The ID of the playlist that contains the channel"s liked videos.
              Use the   playlistItems.insert and  playlistItems.delete to add or
              remove items from that list.
            type: string
          uploads:
            description: >-
              The ID of the playlist that contains the channel"s uploaded
              videos. Use the  videos.insert method to upload new videos and the
              videos.delete method to delete previously uploaded videos.
            type: string
          watchHistory:
            description: >-
              The ID of the playlist that contains the channel"s watch history.
              Use the  playlistItems.insert and  playlistItems.delete to add or
              remove items from that list.
            type: string
          watchLater:
            description: >-
              The ID of the playlist that contains the channel"s watch later
              playlist. Use the playlistItems.insert and  playlistItems.delete
              to add or remove items from that list.
            type: string
        type: object
    type: object
  ChannelContentOwnerDetails:
    description: >-
      The contentOwnerDetails object encapsulates channel data that is relevant
      for YouTube Partners linked with the channel.
    properties:
      contentOwner:
        description: The ID of the content owner linked to the channel.
        type: string
      timeLinked:
        description: >-
          The date and time of when the channel was linked to the content owner.
          The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
    type: object
  ChannelConversionPing:
    description: >-
      Pings that the app shall fire (authenticated by biscotti cookie). Each
      ping has a context, in which the app must fire the ping, and a url
      identifying the ping.
    properties:
      context:
        description: Defines the context of the ping.
        enum:
          - cview
          - subscribe
          - unsubscribe
        type: string
      conversionUrl:
        description: >-
          The url (without the schema) that the player shall send the ping to.
          It's at caller's descretion to decide which schema to use (http vs
          https) Example of a returned url:
          //googleads.g.doubleclick.net/pagead/
          viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D
          cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default The caller must
          append biscotti authentication (ms param in case of mobile, for
          example) to this ping.
        type: string
    type: object
  ChannelConversionPings:
    description: >-
      The conversionPings object encapsulates information about conversion pings
      that need to be respected by the channel.
    properties:
      pings:
        description: >-
          Pings that the app shall fire (authenticated by biscotti cookie). Each
          ping has a context, in which the app must fire the ping, and a url
          identifying the ping.
        items:
          $ref: '#/definitions/ChannelConversionPing'
        type: array
    type: object
  ChannelListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of channels that match the request criteria.
        items:
          $ref: '#/definitions/Channel'
        type: array
      kind:
        default: youtube#channelListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#channelListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  ChannelLocalization:
    description: Channel localization setting
    properties:
      description:
        description: The localized strings for channel's description.
        type: string
      title:
        description: The localized strings for channel's title.
        type: string
    type: object
  ChannelProfileDetails:
    properties:
      channelId:
        description: The YouTube channel ID.
        type: string
      channelUrl:
        description: The channel's URL.
        type: string
      displayName:
        description: The channel's display name.
        type: string
      profileImageUrl:
        description: The channels's avatar URL.
        type: string
    type: object
  ChannelSection:
    properties:
      contentDetails:
        $ref: '#/definitions/ChannelSectionContentDetails'
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the channel section.
        type: string
      kind:
        default: youtube#channelSection
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#channelSection".
        type: string
      localizations:
        additionalProperties:
          $ref: '#/definitions/ChannelSectionLocalization'
        description: Localizations for different languages
        type: object
      snippet:
        $ref: '#/definitions/ChannelSectionSnippet'
      targeting:
        $ref: '#/definitions/ChannelSectionTargeting'
    type: object
  ChannelSectionContentDetails:
    description: 'Details about a channelsection, including playlists and channels.'
    properties:
      channels:
        description: The channel ids for type multiple_channels.
        items:
          type: string
        type: array
      playlists:
        description: >-
          The playlist ids for type single_playlist and multiple_playlists. For
          singlePlaylist, only one playlistId is allowed.
        items:
          type: string
        type: array
    type: object
  ChannelSectionListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of ChannelSections that match the request criteria.
        items:
          $ref: '#/definitions/ChannelSection'
        type: array
      kind:
        default: youtube#channelSectionListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#channelSectionListResponse".
        type: string
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  ChannelSectionLocalization:
    description: ChannelSection localization setting
    properties:
      title:
        description: The localized strings for channel section's title.
        type: string
    type: object
  ChannelSectionSnippet:
    description: >-
      Basic details about a channel section, including title, style and
      position.
    properties:
      channelId:
        description: >-
          The ID that YouTube uses to uniquely identify the channel that
          published the channel section.
        type: string
      defaultLanguage:
        description: The language of the channel section's default title and description.
        type: string
      localized:
        $ref: '#/definitions/ChannelSectionLocalization'
      position:
        description: The position of the channel section in the channel.
        format: uint32
        type: integer
      style:
        description: The style of the channel section.
        enum:
          - channelsectionStyleUndefined
          - horizontalRow
          - verticalList
        type: string
      title:
        description: >-
          The channel section's title for multiple_playlists and
          multiple_channels.
        type: string
      type:
        description: The type of the channel section.
        enum:
          - allPlaylists
          - channelsectionTypeUndefined
          - completedEvents
          - likedPlaylists
          - likes
          - liveEvents
          - multipleChannels
          - multiplePlaylists
          - popularUploads
          - postedPlaylists
          - postedVideos
          - recentActivity
          - recentPosts
          - recentUploads
          - singlePlaylist
          - subscriptions
          - upcomingEvents
        type: string
    type: object
  ChannelSectionTargeting:
    description: ChannelSection targeting setting.
    properties:
      countries:
        description: The country the channel section is targeting.
        items:
          type: string
        type: array
      languages:
        description: The language the channel section is targeting.
        items:
          type: string
        type: array
      regions:
        description: The region the channel section is targeting.
        items:
          type: string
        type: array
    type: object
  ChannelSettings:
    description: Branding properties for the channel view.
    properties:
      country:
        description: The country of the channel.
        type: string
      defaultLanguage:
        type: string
      defaultTab:
        description: Which content tab users should see when viewing the channel.
        type: string
      description:
        description: Specifies the channel description.
        type: string
      featuredChannelsTitle:
        description: Title for the featured channels tab.
        type: string
      featuredChannelsUrls:
        description: The list of featured channels.
        items:
          type: string
        type: array
      keywords:
        description: 'Lists keywords associated with the channel, comma-separated.'
        type: string
      moderateComments:
        description: >-
          Whether user-submitted comments left on the channel page need to be
          approved by the channel owner to be publicly visible.
        type: boolean
      profileColor:
        description: A prominent color that can be rendered on this channel page.
        type: string
      showBrowseView:
        description: Whether the tab to browse the videos should be displayed.
        type: boolean
      showRelatedChannels:
        description: Whether related channels should be proposed.
        type: boolean
      title:
        description: Specifies the channel title.
        type: string
      trackingAnalyticsAccountId:
        description: >-
          The ID for a Google Analytics account to track and measure traffic to
          the channels.
        type: string
      unsubscribedTrailer:
        description: 'The trailer of the channel, for users that are not subscribers.'
        type: string
    type: object
  ChannelSnippet:
    description: >-
      Basic details about a channel, including title, description and
      thumbnails.
    properties:
      country:
        description: The country of the channel.
        type: string
      customUrl:
        description: The custom url of the channel.
        type: string
      defaultLanguage:
        description: The language of the channel's default title and description.
        type: string
      description:
        description: The description of the channel.
        type: string
      localized:
        $ref: '#/definitions/ChannelLocalization'
      publishedAt:
        description: >-
          The date and time that the channel was created. The value is specified
          in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      thumbnails:
        $ref: '#/definitions/ThumbnailDetails'
      title:
        description: The channel's title.
        type: string
    type: object
  ChannelStatistics:
    description: >-
      Statistics about a channel: number of subscribers, number of videos in the
      channel, etc.
    properties:
      commentCount:
        description: The number of comments for the channel.
        format: uint64
        type: string
      hiddenSubscriberCount:
        description: Whether or not the number of subscribers is shown for this user.
        type: boolean
      subscriberCount:
        description: The number of subscribers that the channel has.
        format: uint64
        type: string
      videoCount:
        description: The number of videos uploaded to the channel.
        format: uint64
        type: string
      viewCount:
        description: The number of times the channel has been viewed.
        format: uint64
        type: string
    type: object
  ChannelStatus:
    description: JSON template for the status part of a channel.
    properties:
      isLinked:
        description: >-
          If true, then the user is linked to either a YouTube username or G+
          account. Otherwise, the user doesn't have a public YouTube identity.
        type: boolean
      longUploadsStatus:
        description: The long uploads status of this channel. See
        enum:
          - allowed
          - disallowed
          - eligible
          - longUploadsUnspecified
        type: string
      privacyStatus:
        description: Privacy status of the channel.
        enum:
          - private
          - public
          - unlisted
        type: string
    type: object
  ChannelTopicDetails:
    description: Freebase topic information related to the channel.
    properties:
      topicCategories:
        description: A list of Wikipedia URLs that describe the channel's content.
        items:
          type: string
        type: array
      topicIds:
        description: >-
          A list of Freebase topic IDs associated with the channel. You can
          retrieve information about each topic using the Freebase Topic API.
        items:
          type: string
        type: array
    type: object
  Comment:
    description: A comment represents a single YouTube comment.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the comment.
        type: string
      kind:
        default: youtube#comment
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#comment".
        type: string
      snippet:
        $ref: '#/definitions/CommentSnippet'
    type: object
  CommentListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of comments that match the request criteria.
        items:
          $ref: '#/definitions/Comment'
        type: array
      kind:
        default: youtube#commentListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#commentListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  CommentSnippet:
    description: 'Basic details about a comment, such as its author and text.'
    properties:
      authorChannelId:
        description: 'The id of the author''s YouTube channel, if any.'
        properties:
          value:
            type: string
        type: object
      authorChannelUrl:
        description: 'Link to the author''s YouTube channel, if any.'
        type: string
      authorDisplayName:
        description: The name of the user who posted the comment.
        type: string
      authorProfileImageUrl:
        description: The URL for the avatar of the user who posted the comment.
        type: string
      canRate:
        description: Whether the current viewer can rate this comment.
        type: boolean
      channelId:
        description: >-
          The id of the corresponding YouTube channel. In case of a channel
          comment this is the channel the comment refers to. In case of a video
          comment it's the video's channel.
        type: string
      likeCount:
        description: The total number of likes this comment has received.
        format: uint32
        type: integer
      moderationStatus:
        description: >-
          The comment's moderation status. Will not be set if the comments were
          requested through the id filter.
        enum:
          - heldForReview
          - likelySpam
          - published
          - rejected
        type: string
      parentId:
        description: 'The unique id of the parent comment, only set for replies.'
        type: string
      publishedAt:
        description: >-
          The date and time when the comment was orignally published. The value
          is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      textDisplay:
        description: >-
          The comment's text. The format is either plain text or HTML dependent
          on what has been requested. Even the plain text representation may
          differ from the text originally posted in that it may replace video
          links with video titles etc.
        type: string
      textOriginal:
        description: >-
          The comment's original raw text as initially posted or last updated.
          The original text will only be returned if it is accessible to the
          viewer, which is only guaranteed if the viewer is the comment's
          author.
        type: string
      updatedAt:
        description: >-
          The date and time when was last updated . The value is specified in
          ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      videoId:
        description: 'The ID of the video the comment refers to, if any.'
        type: string
      viewerRating:
        description: >-
          The rating the viewer has given to this comment. For the time being
          this will never return RATE_TYPE_DISLIKE and instead return
          RATE_TYPE_NONE. This may change in the future.
        enum:
          - dislike
          - like
          - none
          - unspecified
        type: string
    type: object
  CommentThread:
    description: >-
      A comment thread represents information that applies to a top level
      comment and all its replies. It can also include the top level comment
      itself and some of the replies.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the comment thread.
        type: string
      kind:
        default: youtube#commentThread
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#commentThread".
        type: string
      replies:
        $ref: '#/definitions/CommentThreadReplies'
      snippet:
        $ref: '#/definitions/CommentThreadSnippet'
    type: object
  CommentThreadListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of comment threads that match the request criteria.
        items:
          $ref: '#/definitions/CommentThread'
        type: array
      kind:
        default: youtube#commentThreadListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#commentThreadListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  CommentThreadReplies:
    description: Comments written in (direct or indirect) reply to the top level comment.
    properties:
      comments:
        description: >-
          A limited number of replies. Unless the number of replies returned
          equals total_reply_count in the snippet the returned replies are only
          a subset of the total number of replies.
        items:
          $ref: '#/definitions/Comment'
        type: array
    type: object
  CommentThreadSnippet:
    description: Basic details about a comment thread.
    properties:
      canReply:
        description: >-
          Whether the current viewer of the thread can reply to it. This is
          viewer specific - other viewers may see a different value for this
          field.
        type: boolean
      channelId:
        description: >-
          The YouTube channel the comments in the thread refer to or the channel
          with the video the comments refer to. If video_id isn't set the
          comments refer to the channel itself.
        type: string
      isPublic:
        description: >-
          Whether the thread (and therefore all its comments) is visible to all
          YouTube users.
        type: boolean
      topLevelComment:
        $ref: '#/definitions/Comment'
      totalReplyCount:
        description: The total number of replies (not including the top level comment).
        format: uint32
        type: integer
      videoId:
        description: >-
          The ID of the video the comments refer to, if any. No video_id implies
          a channel discussion comment.
        type: string
    type: object
  ContentRating:
    description: >-
      Ratings schemes. The country-specific ratings are mostly for movies and
      shows. NEXT_ID: 72
    properties:
      acbRating:
        description: >-
          The video's Australian Classification Board (ACB) or Australian
          Communications and Media Authority (ACMA) rating. ACMA ratings are
          used to classify children's television programming.
        enum:
          - acbC
          - acbE
          - acbG
          - acbM
          - acbMa15plus
          - acbP
          - acbPg
          - acbR18plus
          - acbUnrated
        type: string
      agcomRating:
        description: >-
          The video's rating from Italy's Autorità per le Garanzie nelle
          Comunicazioni (AGCOM).
        enum:
          - agcomT
          - agcomUnrated
          - agcomVm14
          - agcomVm18
        type: string
      anatelRating:
        description: >-
          The video's Anatel (Asociación Nacional de Televisión) rating for
          Chilean television.
        enum:
          - anatelA
          - anatelF
          - anatelI
          - anatelI10
          - anatelI12
          - anatelI7
          - anatelR
          - anatelUnrated
        type: string
      bbfcRating:
        description: The video's British Board of Film Classification (BBFC) rating.
        enum:
          - bbfc12
          - bbfc12a
          - bbfc15
          - bbfc18
          - bbfcPg
          - bbfcR18
          - bbfcU
          - bbfcUnrated
        type: string
      bfvcRating:
        description: The video's rating from Thailand's Board of Film and Video Censors.
        enum:
          - bfvc13
          - bfvc15
          - bfvc18
          - bfvc20
          - bfvcB
          - bfvcE
          - bfvcG
          - bfvcUnrated
        type: string
      bmukkRating:
        description: >-
          The video's rating from the Austrian Board of Media Classification
          (Bundesministerium für Unterricht, Kunst und Kultur).
        enum:
          - bmukk10
          - bmukk12
          - bmukk14
          - bmukk16
          - bmukk6
          - bmukk8
          - bmukkAa
          - bmukkUnrated
        type: string
      catvRating:
        description: >-
          Rating system for Canadian TV - Canadian TV Classification System The
          video's rating from the Canadian Radio-Television and
          Telecommunications Commission (CRTC) for Canadian English-language
          broadcasts. For more information, see the Canadian Broadcast Standards
          Council website.
        enum:
          - catv14plus
          - catv18plus
          - catvC
          - catvC8
          - catvG
          - catvPg
          - catvUnrated
        type: string
      catvfrRating:
        description: >-
          The video's rating from the Canadian Radio-Television and
          Telecommunications Commission (CRTC) for Canadian French-language
          broadcasts. For more information, see the Canadian Broadcast Standards
          Council website.
        enum:
          - catvfr13plus
          - catvfr16plus
          - catvfr18plus
          - catvfr8plus
          - catvfrG
          - catvfrUnrated
        type: string
      cbfcRating:
        description: The video's Central Board of Film Certification (CBFC - India) rating.
        enum:
          - cbfcA
          - cbfcS
          - cbfcU
          - cbfcUA
          - cbfcUnrated
        type: string
      cccRating:
        description: The video's Consejo de Calificación Cinematográfica (Chile) rating.
        enum:
          - ccc14
          - ccc18
          - ccc18s
          - ccc18v
          - ccc6
          - cccTe
          - cccUnrated
        type: string
      cceRating:
        description: >-
          The video's rating from Portugal's Comissão de Classificação de
          Espect´culos.
        enum:
          - cceM12
          - cceM14
          - cceM16
          - cceM18
          - cceM4
          - cceM6
          - cceUnrated
        type: string
      chfilmRating:
        description: The video's rating in Switzerland.
        enum:
          - chfilm0
          - chfilm12
          - chfilm16
          - chfilm18
          - chfilm6
          - chfilmUnrated
        type: string
      chvrsRating:
        description: The video's Canadian Home Video Rating System (CHVRS) rating.
        enum:
          - chvrs14a
          - chvrs18a
          - chvrsE
          - chvrsG
          - chvrsPg
          - chvrsR
          - chvrsUnrated
        type: string
      cicfRating:
        description: >-
          The video's rating from the Commission de Contrôle des Films
          (Belgium).
        enum:
          - cicfE
          - cicfKntEna
          - cicfKtEa
          - cicfUnrated
        type: string
      cnaRating:
        description: >-
          The video's rating from Romania's CONSILIUL NATIONAL AL
          AUDIOVIZUALULUI (CNA).
        enum:
          - cna12
          - cna15
          - cna18
          - cna18plus
          - cnaAp
          - cnaUnrated
        type: string
      cncRating:
        description: >-
          Rating system in France - Commission de classification
          cinematographique
        enum:
          - cnc10
          - cnc12
          - cnc16
          - cnc18
          - cncE
          - cncInterdiction
          - cncT
          - cncUnrated
        type: string
      csaRating:
        description: >-
          The video's rating from France's Conseil supérieur de l?audiovisuel,
          which rates broadcast content.
        enum:
          - csa10
          - csa12
          - csa16
          - csa18
          - csaInterdiction
          - csaT
          - csaUnrated
        type: string
      cscfRating:
        description: >-
          The video's rating from Luxembourg's Commission de surveillance de la
          classification des films (CSCF).
        enum:
          - cscf12
          - cscf16
          - cscf18
          - cscf6
          - cscf9
          - cscfA
          - cscfAl
          - cscfUnrated
        type: string
      czfilmRating:
        description: The video's rating in the Czech Republic.
        enum:
          - czfilm12
          - czfilm14
          - czfilm18
          - czfilmU
          - czfilmUnrated
        type: string
      djctqRating:
        description: >-
          The video's Departamento de Justiça, Classificação, Qualificação e
          Títulos (DJCQT - Brazil) rating.
        enum:
          - djctq10
          - djctq1012
          - djctq1014
          - djctq1016
          - djctq1018
          - djctq12
          - djctq1214
          - djctq1216
          - djctq1218
          - djctq14
          - djctq1416
          - djctq1418
          - djctq16
          - djctq1618
          - djctq18
          - djctqEr
          - djctqL
          - djctqL10
          - djctqL12
          - djctqL14
          - djctqL16
          - djctqL18
          - djctqUnrated
        type: string
      djctqRatingReasons:
        description: Reasons that explain why the video received its DJCQT (Brazil) rating.
        items:
          enum:
            - djctqCriminalActs
            - djctqDrugs
            - djctqExplicitSex
            - djctqExtremeViolence
            - djctqIllegalDrugs
            - djctqImpactingContent
            - djctqInappropriateLanguage
            - djctqLegalDrugs
            - djctqNudity
            - djctqSex
            - djctqSexualContent
            - djctqViolence
          type: string
        type: array
      ecbmctRating:
        description: >-
          Rating system in Turkey - Evaluation and Classification Board of the
          Ministry of Culture and Tourism
        enum:
          - ecbmct13a
          - ecbmct13plus
          - ecbmct15a
          - ecbmct15plus
          - ecbmct18plus
          - ecbmct7a
          - ecbmct7plus
          - ecbmctG
          - ecbmctUnrated
        type: string
      eefilmRating:
        description: The video's rating in Estonia.
        enum:
          - eefilmK12
          - eefilmK14
          - eefilmK16
          - eefilmK6
          - eefilmL
          - eefilmMs12
          - eefilmMs6
          - eefilmPere
          - eefilmUnrated
        type: string
      egfilmRating:
        description: The video's rating in Egypt.
        enum:
          - egfilm18
          - egfilmBn
          - egfilmGn
          - egfilmUnrated
        type: string
      eirinRating:
        description: The video's Eirin (映倫) rating. Eirin is the Japanese rating system.
        enum:
          - eirinG
          - eirinPg12
          - eirinR15plus
          - eirinR18plus
          - eirinUnrated
        type: string
      fcbmRating:
        description: The video's rating from Malaysia's Film Censorship Board.
        enum:
          - fcbm18
          - fcbm18pa
          - fcbm18pl
          - fcbm18sg
          - fcbm18sx
          - fcbmP13
          - fcbmPg13
          - fcbmU
          - fcbmUnrated
        type: string
      fcoRating:
        description: >-
          The video's rating from Hong Kong's Office for Film, Newspaper and
          Article Administration.
        enum:
          - fcoI
          - fcoIi
          - fcoIia
          - fcoIib
          - fcoIii
          - fcoUnrated
        type: string
      fmocRating:
        description: >-
          This property has been deprecated. Use the
          contentDetails.contentRating.cncRating instead.
        enum:
          - fmoc10
          - fmoc12
          - fmoc16
          - fmoc18
          - fmocE
          - fmocU
          - fmocUnrated
        type: string
      fpbRating:
        description: The video's rating from South Africa's Film and Publication Board.
        enum:
          - fpb10
          - fpb1012Pg
          - fpb13
          - fpb16
          - fpb18
          - fpb79Pg
          - fpbA
          - fpbPg
          - fpbUnrated
          - fpbX18
          - fpbXx
        type: string
      fpbRatingReasons:
        description: >-
          Reasons that explain why the video received its FPB (South Africa)
          rating.
        items:
          enum:
            - fpbBlasphemy
            - fpbCriminalTechniques
            - fpbDrugs
            - fpbHorror
            - fpbImitativeActsTechniques
            - fpbLanguage
            - fpbNudity
            - fpbPrejudice
            - fpbSex
            - fpbSexualViolence
            - fpbViolence
          type: string
        type: array
      fskRating:
        description: >-
          The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK -
          Germany) rating.
        enum:
          - fsk0
          - fsk12
          - fsk16
          - fsk18
          - fsk6
          - fskUnrated
        type: string
      grfilmRating:
        description: The video's rating in Greece.
        enum:
          - grfilmE
          - grfilmK
          - grfilmK12
          - grfilmK13
          - grfilmK15
          - grfilmK17
          - grfilmK18
          - grfilmUnrated
        type: string
      icaaRating:
        description: >-
          The video's Instituto de la Cinematografía y de las Artes
          Audiovisuales (ICAA - Spain) rating.
        enum:
          - icaa12
          - icaa13
          - icaa16
          - icaa18
          - icaa7
          - icaaApta
          - icaaUnrated
          - icaaX
        type: string
      ifcoRating:
        description: >-
          The video's Irish Film Classification Office (IFCO - Ireland) rating.
          See the IFCO website for more information.
        enum:
          - ifco12
          - ifco12a
          - ifco15
          - ifco15a
          - ifco16
          - ifco18
          - ifcoG
          - ifcoPg
          - ifcoUnrated
        type: string
      ilfilmRating:
        description: The video's rating in Israel.
        enum:
          - ilfilm12
          - ilfilm14
          - ilfilm16
          - ilfilm18
          - ilfilmAa
          - ilfilmUnrated
        type: string
      incaaRating:
        description: >-
          The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales -
          Argentina) rating.
        enum:
          - incaaAtp
          - incaaC
          - incaaSam13
          - incaaSam16
          - incaaSam18
          - incaaUnrated
        type: string
      kfcbRating:
        description: The video's rating from the Kenya Film Classification Board.
        enum:
          - kfcb16plus
          - kfcbG
          - kfcbPg
          - kfcbR
          - kfcbUnrated
        type: string
      kijkwijzerRating:
        description: voor de Classificatie van Audiovisuele Media (Netherlands).
        enum:
          - kijkwijzer12
          - kijkwijzer16
          - kijkwijzer18
          - kijkwijzer6
          - kijkwijzer9
          - kijkwijzerAl
          - kijkwijzerUnrated
        type: string
      kmrbRating:
        description: >-
          The video's Korea Media Rating Board (영상물등급위원회) rating. The KMRB rates
          videos in South Korea.
        enum:
          - kmrb12plus
          - kmrb15plus
          - kmrbAll
          - kmrbR
          - kmrbTeenr
          - kmrbUnrated
        type: string
      lsfRating:
        description: The video's rating from Indonesia's Lembaga Sensor Film.
        enum:
          - lsf13
          - lsf17
          - lsf21
          - lsfA
          - lsfBo
          - lsfD
          - lsfR
          - lsfSu
          - lsfUnrated
        type: string
      mccaaRating:
        description: The video's rating from Malta's Film Age-Classification Board.
        enum:
          - mccaa12
          - mccaa12a
          - mccaa14
          - mccaa15
          - mccaa16
          - mccaa18
          - mccaaPg
          - mccaaU
          - mccaaUnrated
        type: string
      mccypRating:
        description: >-
          The video's rating from the Danish Film Institute's (Det Danske
          Filminstitut) Media Council for Children and Young People.
        enum:
          - mccyp11
          - mccyp15
          - mccyp7
          - mccypA
          - mccypUnrated
        type: string
      mcstRating:
        description: The video's rating system for Vietnam - MCST
        enum:
          - mcst0
          - mcst16plus
          - mcstC13
          - mcstC16
          - mcstC18
          - mcstGPg
          - mcstP
          - mcstUnrated
        type: string
      mdaRating:
        description: >-
          The video's rating from Singapore's Media Development Authority (MDA)
          and, specifically, it's Board of Film Censors (BFC).
        enum:
          - mdaG
          - mdaM18
          - mdaNc16
          - mdaPg
          - mdaPg13
          - mdaR21
          - mdaUnrated
        type: string
      medietilsynetRating:
        description: 'The video''s rating from Medietilsynet, the Norwegian Media Authority.'
        enum:
          - medietilsynet11
          - medietilsynet12
          - medietilsynet15
          - medietilsynet18
          - medietilsynet6
          - medietilsynet7
          - medietilsynet9
          - medietilsynetA
          - medietilsynetUnrated
        type: string
      mekuRating:
        description: >-
          The video's rating from Finland's Kansallinen Audiovisuaalinen
          Instituutti (National Audiovisual Institute).
        enum:
          - meku12
          - meku16
          - meku18
          - meku7
          - mekuS
          - mekuUnrated
        type: string
      menaMpaaRating:
        description: 'The rating system for MENA countries, a clone of MPAA. It is needed to'
        enum:
          - menaMpaaG
          - menaMpaaPg
          - menaMpaaPg13
          - menaMpaaR
          - menaMpaaUnrated
        type: string
      mibacRating:
        description: >-
          The video's rating from the Ministero dei Beni e delle Attività
          Culturali e del Turismo (Italy).
        enum:
          - mibacT
          - mibacUnrated
          - mibacVap
          - mibacVm12
          - mibacVm14
          - mibacVm18
        type: string
      mocRating:
        description: The video's Ministerio de Cultura (Colombia) rating.
        enum:
          - moc12
          - moc15
          - moc18
          - moc7
          - mocBanned
          - mocE
          - mocT
          - mocUnrated
          - mocX
        type: string
      moctwRating:
        description: The video's rating from Taiwan's Ministry of Culture (文化部).
        enum:
          - moctwG
          - moctwP
          - moctwPg
          - moctwR
          - moctwR12
          - moctwR15
          - moctwUnrated
        type: string
      mpaaRating:
        description: The video's Motion Picture Association of America (MPAA) rating.
        enum:
          - mpaaG
          - mpaaNc17
          - mpaaPg
          - mpaaPg13
          - mpaaR
          - mpaaUnrated
          - mpaaX
        type: string
      mpaatRating:
        description: >-
          The rating system for trailer, DVD, and Ad in the US. See
          http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html.
        enum:
          - mpaatGb
          - mpaatRb
        type: string
      mtrcbRating:
        description: >-
          The video's rating from the Movie and Television Review and
          Classification Board (Philippines).
        enum:
          - mtrcbG
          - mtrcbPg
          - mtrcbR13
          - mtrcbR16
          - mtrcbR18
          - mtrcbUnrated
          - mtrcbX
        type: string
      nbcRating:
        description: >-
          The video's rating from the Maldives National Bureau of
          Classification.
        enum:
          - nbc12plus
          - nbc15plus
          - nbc18plus
          - nbc18plusr
          - nbcG
          - nbcPg
          - nbcPu
          - nbcUnrated
        type: string
      nbcplRating:
        description: The video's rating in Poland.
        enum:
          - nbcpl18plus
          - nbcplI
          - nbcplIi
          - nbcplIii
          - nbcplIv
          - nbcplUnrated
        type: string
      nfrcRating:
        description: The video's rating from the Bulgarian National Film Center.
        enum:
          - nfrcA
          - nfrcB
          - nfrcC
          - nfrcD
          - nfrcUnrated
          - nfrcX
        type: string
      nfvcbRating:
        description: >-
          The video's rating from Nigeria's National Film and Video Censors
          Board.
        enum:
          - nfvcb12
          - nfvcb12a
          - nfvcb15
          - nfvcb18
          - nfvcbG
          - nfvcbPg
          - nfvcbRe
          - nfvcbUnrated
        type: string
      nkclvRating:
        description: >-
          The video's rating from the Nacionãlais Kino centrs (National Film
          Centre of Latvia).
        enum:
          - nkclv12plus
          - nkclv16plus
          - nkclv18plus
          - nkclv7plus
          - nkclvU
          - nkclvUnrated
        type: string
      nmcRating:
        enum:
          - nmc15plus
          - nmc18plus
          - nmc18tc
          - nmcG
          - nmcPg
          - nmcPg13
          - nmcPg15
          - nmcUnrated
        type: string
      oflcRating:
        description: >-
          The video's Office of Film and Literature Classification (OFLC - New
          Zealand) rating.
        enum:
          - oflcG
          - oflcM
          - oflcPg
          - oflcR13
          - oflcR15
          - oflcR16
          - oflcR18
          - oflcRp13
          - oflcRp16
          - oflcRp18
          - oflcUnrated
        type: string
      pefilmRating:
        description: The video's rating in Peru.
        enum:
          - pefilm14
          - pefilm18
          - pefilmPg
          - pefilmPt
          - pefilmUnrated
        type: string
      rcnofRating:
        description: >-
          The video's rating from the Hungarian Nemzeti Filmiroda, the Rating
          Committee of the National Office of Film.
        enum:
          - rcnofI
          - rcnofIi
          - rcnofIii
          - rcnofIv
          - rcnofUnrated
          - rcnofV
          - rcnofVi
        type: string
      resorteviolenciaRating:
        description: The video's rating in Venezuela.
        enum:
          - resorteviolenciaA
          - resorteviolenciaB
          - resorteviolenciaC
          - resorteviolenciaD
          - resorteviolenciaE
          - resorteviolenciaUnrated
        type: string
      rtcRating:
        description: >-
          The video's General Directorate of Radio, Television and
          Cinematography (Mexico) rating.
        enum:
          - rtcA
          - rtcAa
          - rtcB
          - rtcB15
          - rtcC
          - rtcD
          - rtcUnrated
        type: string
      rteRating:
        description: The video's rating from Ireland's Raidió Teilifís Éireann.
        enum:
          - rteCh
          - rteGa
          - rteMa
          - rtePs
          - rteUnrated
        type: string
      russiaRating:
        description: >-
          The video's National Film Registry of the Russian Federation (MKRF -
          Russia) rating.
        enum:
          - russia0
          - russia12
          - russia16
          - russia18
          - russia6
          - russiaUnrated
        type: string
      skfilmRating:
        description: The video's rating in Slovakia.
        enum:
          - skfilmG
          - skfilmP2
          - skfilmP5
          - skfilmP8
          - skfilmUnrated
        type: string
      smaisRating:
        description: The video's rating in Iceland.
        enum:
          - smais12
          - smais14
          - smais16
          - smais18
          - smais7
          - smaisL
          - smaisUnrated
        type: string
      smsaRating:
        description: >-
          The video's rating from Statens medieråd (Sweden's National Media
          Council).
        enum:
          - smsa11
          - smsa15
          - smsa7
          - smsaA
          - smsaUnrated
        type: string
      tvpgRating:
        description: The video's TV Parental Guidelines (TVPG) rating.
        enum:
          - pg14
          - tvpgG
          - tvpgMa
          - tvpgPg
          - tvpgUnrated
          - tvpgY
          - tvpgY7
          - tvpgY7Fv
        type: string
      ytRating:
        description: A rating that YouTube uses to identify age-restricted content.
        enum:
          - ytAgeRestricted
        type: string
    type: object
  GeoPoint:
    description: 'Geographical coordinates of a point, in WGS84.'
    properties:
      altitude:
        description: 'Altitude above the reference ellipsoid, in meters.'
        format: double
        type: number
      latitude:
        description: Latitude in degrees.
        format: double
        type: number
      longitude:
        description: Longitude in degrees.
        format: double
        type: number
    type: object
  GuideCategory:
    description: >-
      A guideCategory resource identifies a category that YouTube
      algorithmically assigns based on a channel's content or other indicators,
      such as the channel's popularity. The list is similar to video categories,
      with the difference being that a video's uploader can assign a video
      category but only YouTube can assign a channel category.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the guide category.
        type: string
      kind:
        default: youtube#guideCategory
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#guideCategory".
        type: string
      snippet:
        $ref: '#/definitions/GuideCategorySnippet'
    type: object
  GuideCategoryListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: >-
          A list of categories that can be associated with YouTube channels. In
          this map, the category ID is the map key, and its value is the
          corresponding guideCategory resource.
        items:
          $ref: '#/definitions/GuideCategory'
        type: array
      kind:
        default: youtube#guideCategoryListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#guideCategoryListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  GuideCategorySnippet:
    description: Basic details about a guide category.
    properties:
      channelId:
        default: UCBR8-60-B28hp2BmDPdntcQ
        type: string
      title:
        description: Description of the guide category.
        type: string
    type: object
  I18nLanguage:
    description: >-
      An i18nLanguage resource identifies a UI language currently supported by
      YouTube.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the i18n language.
        type: string
      kind:
        default: youtube#i18nLanguage
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#i18nLanguage".
        type: string
      snippet:
        $ref: '#/definitions/I18nLanguageSnippet'
    type: object
  I18nLanguageListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: >-
          A list of supported i18n languages. In this map, the i18n language ID
          is the map key, and its value is the corresponding i18nLanguage
          resource.
        items:
          $ref: '#/definitions/I18nLanguage'
        type: array
      kind:
        default: youtube#i18nLanguageListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#i18nLanguageListResponse".
        type: string
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  I18nLanguageSnippet:
    description: >-
      Basic details about an i18n language, such as language code and
      human-readable name.
    properties:
      hl:
        description: A short BCP-47 code that uniquely identifies a language.
        type: string
      name:
        description: The human-readable name of the language in the language itself.
        type: string
    type: object
  I18nRegion:
    description: A i18nRegion resource identifies a region where YouTube is available.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the i18n region.
        type: string
      kind:
        default: youtube#i18nRegion
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#i18nRegion".
        type: string
      snippet:
        $ref: '#/definitions/I18nRegionSnippet'
    type: object
  I18nRegionListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: >-
          A list of regions where YouTube is available. In this map, the i18n
          region ID is the map key, and its value is the corresponding
          i18nRegion resource.
        items:
          $ref: '#/definitions/I18nRegion'
        type: array
      kind:
        default: youtube#i18nRegionListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#i18nRegionListResponse".
        type: string
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  I18nRegionSnippet:
    description: >-
      Basic details about an i18n region, such as region code and human-readable
      name.
    properties:
      gl:
        description: The region code as a 2-letter ISO country code.
        type: string
      name:
        description: The human-readable name of the region.
        type: string
    type: object
  ImageSettings:
    description: Branding properties for images associated with the channel.
    properties:
      backgroundImageUrl:
        $ref: '#/definitions/LocalizedProperty'
      bannerExternalUrl:
        description: >-
          This is used only in update requests; if it's set, we use this URL to
          generate all of the above banner URLs.
        type: string
      bannerImageUrl:
        description: Banner image. Desktop size (1060x175).
        type: string
      bannerMobileExtraHdImageUrl:
        description: Banner image. Mobile size high resolution (1440x395).
        type: string
      bannerMobileHdImageUrl:
        description: Banner image. Mobile size high resolution (1280x360).
        type: string
      bannerMobileImageUrl:
        description: Banner image. Mobile size (640x175).
        type: string
      bannerMobileLowImageUrl:
        description: Banner image. Mobile size low resolution (320x88).
        type: string
      bannerMobileMediumHdImageUrl:
        description: Banner image. Mobile size medium/high resolution (960x263).
        type: string
      bannerTabletExtraHdImageUrl:
        description: Banner image. Tablet size extra high resolution (2560x424).
        type: string
      bannerTabletHdImageUrl:
        description: Banner image. Tablet size high resolution (2276x377).
        type: string
      bannerTabletImageUrl:
        description: Banner image. Tablet size (1707x283).
        type: string
      bannerTabletLowImageUrl:
        description: Banner image. Tablet size low resolution (1138x188).
        type: string
      bannerTvHighImageUrl:
        description: Banner image. TV size high resolution (1920x1080).
        type: string
      bannerTvImageUrl:
        description: Banner image. TV size extra high resolution (2120x1192).
        type: string
      bannerTvLowImageUrl:
        description: Banner image. TV size low resolution (854x480).
        type: string
      bannerTvMediumImageUrl:
        description: Banner image. TV size medium resolution (1280x720).
        type: string
      largeBrandedBannerImageImapScript:
        $ref: '#/definitions/LocalizedProperty'
      largeBrandedBannerImageUrl:
        $ref: '#/definitions/LocalizedProperty'
      smallBrandedBannerImageImapScript:
        $ref: '#/definitions/LocalizedProperty'
      smallBrandedBannerImageUrl:
        $ref: '#/definitions/LocalizedProperty'
      trackingImageUrl:
        description: >-
          The URL for a 1px by 1px tracking pixel that can be used to collect
          statistics for views of the channel or video pages.
        type: string
      watchIconImageUrl:
        description: >-
          The URL for the image that appears above the top-left corner of the
          video player. This is a 25-pixel-high image with a flexible width that
          cannot exceed 170 pixels.
        type: string
    type: object
  IngestionInfo:
    description: Describes information necessary for ingesting an RTMP or an HTTP stream.
    properties:
      backupIngestionAddress:
        description: >-
          The backup ingestion URL that you should use to stream video to
          YouTube. You have the option of simultaneously streaming the content
          that you are sending to the ingestionAddress to this URL.
        type: string
      ingestionAddress:
        description: >-
          The primary ingestion URL that you should use to stream video to
          YouTube. You must stream video to this URL.


          Depending on which application or tool you use to encode your video
          stream, you may need to enter the stream URL and stream name
          separately or you may need to concatenate them in the following
          format:


          STREAM_URL/STREAM_NAME
        type: string
      streamName:
        description: The HTTP or RTMP stream name that YouTube assigns to the video stream.
        type: string
    type: object
  InvideoBranding:
    properties:
      imageBytes:
        format: byte
        pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
        type: string
      imageUrl:
        type: string
      position:
        $ref: '#/definitions/InvideoPosition'
      targetChannelId:
        type: string
      timing:
        $ref: '#/definitions/InvideoTiming'
    type: object
  InvideoPosition:
    description: >-
      Describes the spatial position of a visual widget inside a video. It is a
      union of various position types, out of which only will be set one.
    properties:
      cornerPosition:
        description: Describes in which corner of the video the visual widget will appear.
        enum:
          - bottomLeft
          - bottomRight
          - topLeft
          - topRight
        type: string
      type:
        description: Defines the position type.
        enum:
          - corner
        type: string
    type: object
  InvideoPromotion:
    description: >-
      Describes an invideo promotion campaign consisting of multiple promoted
      items. A campaign belongs to a single channel_id.
    properties:
      defaultTiming:
        $ref: '#/definitions/InvideoTiming'
      items:
        description: List of promoted items in decreasing priority.
        items:
          $ref: '#/definitions/PromotedItem'
        type: array
      position:
        $ref: '#/definitions/InvideoPosition'
      useSmartTiming:
        description: >-
          Indicates whether the channel's promotional campaign uses "smart
          timing." This feature attempts to show promotions at a point in the
          video when they are more likely to be clicked and less likely to
          disrupt the viewing experience. This feature also picks up a single
          promotion to show on each video.
        type: boolean
    type: object
  InvideoTiming:
    description: Describes a temporal position of a visual widget inside a video.
    properties:
      durationMs:
        description: >-
          Defines the duration in milliseconds for which the promotion should be
          displayed. If missing, the client should use the default.
        format: uint64
        type: string
      offsetMs:
        description: >-
          Defines the time at which the promotion will appear. Depending on the
          value of type the value of the offsetMs field will represent a time
          offset from the start or from the end of the video, expressed in
          milliseconds.
        format: uint64
        type: string
      type:
        description: >-
          Describes a timing type. If the value is offsetFromStart, then the
          offsetMs field represents an offset from the start of the video. If
          the value is offsetFromEnd, then the offsetMs field represents an
          offset from the end of the video.
        enum:
          - offsetFromEnd
          - offsetFromStart
        type: string
    type: object
  LanguageTag:
    properties:
      value:
        type: string
    type: object
  LevelDetails:
    properties:
      displayName:
        type: string
    type: object
  LiveBroadcast:
    description: >-
      A liveBroadcast resource represents an event that will be streamed, via
      live video, on YouTube.
    properties:
      contentDetails:
        $ref: '#/definitions/LiveBroadcastContentDetails'
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube assigns to uniquely identify the broadcast.
        type: string
      kind:
        default: youtube#liveBroadcast
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#liveBroadcast".
        type: string
      snippet:
        $ref: '#/definitions/LiveBroadcastSnippet'
      statistics:
        $ref: '#/definitions/LiveBroadcastStatistics'
      status:
        $ref: '#/definitions/LiveBroadcastStatus'
    type: object
  LiveBroadcastContentDetails:
    description: Detailed settings of a broadcast.
    properties:
      boundStreamId:
        description: This value uniquely identifies the live stream bound to the broadcast.
        type: string
      boundStreamLastUpdateTimeMs:
        description: >-
          The date and time that the live stream referenced by boundStreamId was
          last updated.
        format: date-time
        type: string
      closedCaptionsType:
        enum:
          - closedCaptionsDisabled
          - closedCaptionsEmbedded
          - closedCaptionsHttpPost
        type: string
      enableAutoStart:
        description: >-
          This setting indicates whether auto start is enabled for this
          broadcast.
        type: boolean
      enableClosedCaptions:
        description: >-
          This setting indicates whether HTTP POST closed captioning is enabled
          for this broadcast. The ingestion URL of the closed captions is
          returned through the liveStreams API. This is mutually exclusive with
          using the closed_captions_type property, and is equivalent to setting
          closed_captions_type to CLOSED_CAPTIONS_HTTP_POST.
        type: boolean
      enableContentEncryption:
        description: >-
          This setting indicates whether YouTube should enable content
          encryption for the broadcast.
        type: boolean
      enableDvr:
        description: >-
          This setting determines whether viewers can access DVR controls while
          watching the video. DVR controls enable the viewer to control the
          video playback experience by pausing, rewinding, or fast forwarding
          content. The default value for this property is true.




          Important: You must set the value to true and also set the
          enableArchive property's value to true if you want to make playback
          available immediately after the broadcast ends.
        type: boolean
      enableEmbed:
        description: >-
          This setting indicates whether the broadcast video can be played in an
          embedded player. If you choose to archive the video (using the
          enableArchive property), this setting will also apply to the archived
          video.
        type: boolean
      enableLowLatency:
        description: Indicates whether this broadcast has low latency enabled.
        type: boolean
      latencyPreference:
        description: >-
          If both this and enable_low_latency are set, they must match.
          LATENCY_NORMAL should match enable_low_latency=false LATENCY_LOW
          should match enable_low_latency=true LATENCY_ULTRA_LOW should have
          enable_low_latency omitted.
        enum:
          - low
          - normal
          - ultraLow
        type: string
      mesh:
        format: byte
        pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
        type: string
      monitorStream:
        $ref: '#/definitions/MonitorStreamInfo'
      projection:
        description: The projection format of this broadcast. This defaults to rectangular.
        enum:
          - '360'
          - mesh
          - rectangular
        type: string
      recordFromStart:
        description: >-
          Automatically start recording after the event goes live. The default
          value for this property is true.




          Important: You must also set the enableDvr property's value to true if
          you want the playback to be available immediately after the broadcast
          ends. If you set this property's value to true but do not also set the
          enableDvr property to true, there may be a delay of around one day
          before the archived video will be available for playback.
        type: boolean
      startWithSlate:
        description: >-
          This setting indicates whether the broadcast should automatically
          begin with an in-stream slate when you update the broadcast's status
          to live. After updating the status, you then need to send a
          liveCuepoints.insert request that sets the cuepoint's eventState to
          end to remove the in-stream slate and make your broadcast stream
          visible to viewers.
        type: boolean
      stereoLayout:
        enum:
          - left_right
          - mono
          - top_bottom
        type: string
    type: object
  LiveBroadcastListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of broadcasts that match the request criteria.
        items:
          $ref: '#/definitions/LiveBroadcast'
        type: array
      kind:
        default: youtube#liveBroadcastListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#liveBroadcastListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  LiveBroadcastSnippet:
    properties:
      actualEndTime:
        description: >-
          The date and time that the broadcast actually ended. This information
          is only available once the broadcast's state is complete. The value is
          specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      actualStartTime:
        description: >-
          The date and time that the broadcast actually started. This
          information is only available once the broadcast's state is live. The
          value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      broadcastType:
        enum:
          - fludd
          - fluddArchive
          - gplusHoa
          - lcrEncoder
          - mobile
          - persistent
          - premiere
          - unspecified
          - webcam
          - ytHoa
        type: string
      channelId:
        description: >-
          The ID that YouTube uses to uniquely identify the channel that is
          publishing the broadcast.
        type: string
      description:
        description: >-
          The broadcast's description. As with the title, you can set this field
          by modifying the broadcast resource or by setting the description
          field of the corresponding video resource.
        type: string
      isDefaultBroadcast:
        type: boolean
      liveChatId:
        description: The id of the live chat for this broadcast.
        type: string
      publishedAt:
        description: >-
          The date and time that the broadcast was added to YouTube's live
          broadcast schedule. The value is specified in ISO 8601
          (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      scheduledEndTime:
        description: >-
          The date and time that the broadcast is scheduled to end. The value is
          specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      scheduledStartTime:
        description: >-
          The date and time that the broadcast is scheduled to start. The value
          is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      thumbnails:
        $ref: '#/definitions/ThumbnailDetails'
      title:
        description: >-
          The broadcast's title. Note that the broadcast represents exactly one
          YouTube video. You can set this field by modifying the broadcast
          resource or by setting the title field of the corresponding video
          resource.
        type: string
    type: object
  LiveBroadcastStatistics:
    description: >-
      Statistics about the live broadcast. These represent a snapshot of the
      values at the time of the request. Statistics are only returned for live
      broadcasts.
    properties:
      concurrentViewers:
        description: >-
          The number of viewers currently watching the broadcast. The property
          and its value will be present if the broadcast has current viewers and
          the broadcast owner has not hidden the viewcount for the video. Note
          that YouTube stops tracking the number of concurrent viewers for a
          broadcast when the broadcast ends. So, this property would not
          identify the number of viewers watching an archived video of a live
          broadcast that already ended.
        format: uint64
        type: string
      totalChatCount:
        description: >-
          The total number of live chat messages currently on the broadcast. The
          property and its value will be present if the broadcast is public, has
          the live chat feature enabled, and has at least one message. Note that
          this field will not be filled after the broadcast ends. So this
          property would not identify the number of chat messages for an
          archived video of a completed live broadcast.
        format: uint64
        type: string
    type: object
  LiveBroadcastStatus:
    properties:
      lifeCycleStatus:
        description: >-
          The broadcast's status. The status can be updated using the API's
          liveBroadcasts.transition method.
        enum:
          - complete
          - created
          - live
          - liveStarting
          - ready
          - revoked
          - testStarting
          - testing
        type: string
      liveBroadcastPriority:
        description: Priority of the live broadcast event (internal state).
        enum:
          - high
          - low
          - normal
        type: string
      privacyStatus:
        description: >-
          The broadcast's privacy status. Note that the broadcast represents
          exactly one YouTube video, so the privacy settings are identical to
          those supported for videos. In addition, you can set this field by
          modifying the broadcast resource or by setting the privacyStatus field
          of the corresponding video resource.
        enum:
          - private
          - public
          - unlisted
        type: string
      recordingStatus:
        description: The broadcast's recording status.
        enum:
          - notRecording
          - recorded
          - recording
        type: string
    type: object
  LiveChatBan:
    description: A liveChatBan resource represents a ban for a YouTube live chat.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube assigns to uniquely identify the ban.
        type: string
      kind:
        default: youtube#liveChatBan
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#liveChatBan".
        type: string
      snippet:
        $ref: '#/definitions/LiveChatBanSnippet'
    type: object
  LiveChatBanSnippet:
    properties:
      banDurationSeconds:
        description: 'The duration of a ban, only filled if the ban has type TEMPORARY.'
        format: uint64
        type: string
      bannedUserDetails:
        $ref: '#/definitions/ChannelProfileDetails'
      liveChatId:
        description: The chat this ban is pertinent to.
        type: string
      type:
        description: The type of ban.
        enum:
          - permanent
          - temporary
        type: string
    type: object
  LiveChatFanFundingEventDetails:
    properties:
      amountDisplayString:
        description: >-
          A rendered string that displays the fund amount and currency to the
          user.
        type: string
      amountMicros:
        description: The amount of the fund.
        format: uint64
        type: string
      currency:
        description: The currency in which the fund was made.
        type: string
      userComment:
        description: The comment added by the user to this fan funding event.
        type: string
    type: object
  LiveChatMessage:
    description: >-
      A liveChatMessage resource represents a chat message in a YouTube Live
      Chat.
    properties:
      authorDetails:
        $ref: '#/definitions/LiveChatMessageAuthorDetails'
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube assigns to uniquely identify the message.
        type: string
      kind:
        default: youtube#liveChatMessage
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#liveChatMessage".
        type: string
      snippet:
        $ref: '#/definitions/LiveChatMessageSnippet'
    type: object
  LiveChatMessageAuthorDetails:
    properties:
      channelId:
        description: The YouTube channel ID.
        type: string
      channelUrl:
        description: The channel's URL.
        type: string
      displayName:
        description: The channel's display name.
        type: string
      isChatModerator:
        description: Whether the author is a moderator of the live chat.
        type: boolean
      isChatOwner:
        description: Whether the author is the owner of the live chat.
        type: boolean
      isChatSponsor:
        description: Whether the author is a sponsor of the live chat.
        type: boolean
      isVerified:
        description: Whether the author's identity has been verified by YouTube.
        type: boolean
      profileImageUrl:
        description: The channels's avatar URL.
        type: string
    type: object
  LiveChatMessageDeletedDetails:
    properties:
      deletedMessageId:
        type: string
    type: object
  LiveChatMessageListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of live chat messages.
        items:
          $ref: '#/definitions/LiveChatMessage'
        type: array
      kind:
        default: youtube#liveChatMessageListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#liveChatMessageListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      offlineAt:
        description: >-
          The date and time when the underlying stream went offline. The value
          is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      pollingIntervalMillis:
        description: The amount of time the client should wait before polling again.
        format: uint32
        type: integer
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  LiveChatMessageRetractedDetails:
    properties:
      retractedMessageId:
        type: string
    type: object
  LiveChatMessageSnippet:
    properties:
      authorChannelId:
        description: >-
          The ID of the user that authored this message, this field is not
          always filled. textMessageEvent - the user that wrote the message
          fanFundingEvent - the user that funded the broadcast newSponsorEvent -
          the user that just became a sponsor messageDeletedEvent - the
          moderator that took the action messageRetractedEvent - the author that
          retracted their message userBannedEvent - the moderator that took the
          action superChatEvent - the user that made the purchase
        type: string
      displayMessage:
        description: >-
          Contains a string that can be displayed to the user. If this field is
          not present the message is silent, at the moment only messages of type
          TOMBSTONE and CHAT_ENDED_EVENT are silent.
        type: string
      fanFundingEventDetails:
        $ref: '#/definitions/LiveChatFanFundingEventDetails'
      hasDisplayContent:
        description: >-
          Whether the message has display content that should be displayed to
          users.
        type: boolean
      liveChatId:
        type: string
      messageDeletedDetails:
        $ref: '#/definitions/LiveChatMessageDeletedDetails'
      messageRetractedDetails:
        $ref: '#/definitions/LiveChatMessageRetractedDetails'
      pollClosedDetails:
        $ref: '#/definitions/LiveChatPollClosedDetails'
      pollEditedDetails:
        $ref: '#/definitions/LiveChatPollEditedDetails'
      pollOpenedDetails:
        $ref: '#/definitions/LiveChatPollOpenedDetails'
      pollVotedDetails:
        $ref: '#/definitions/LiveChatPollVotedDetails'
      publishedAt:
        description: >-
          The date and time when the message was orignally published. The value
          is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      superChatDetails:
        $ref: '#/definitions/LiveChatSuperChatDetails'
      superStickerDetails:
        $ref: '#/definitions/LiveChatSuperStickerDetails'
      textMessageDetails:
        $ref: '#/definitions/LiveChatTextMessageDetails'
      type:
        description: >-
          The type of message, this will always be present, it determines the
          contents of the message as well as which fields will be present.
        enum:
          - chatEndedEvent
          - fanFundingEvent
          - messageDeletedEvent
          - messageRetractedEvent
          - newSponsorEvent
          - pollClosedEvent
          - pollEditedEvent
          - pollOpenedEvent
          - pollVotedEvent
          - sponsorOnlyModeEndedEvent
          - sponsorOnlyModeStartedEvent
          - superChatEvent
          - superStickerEvent
          - textMessageEvent
          - tombstone
          - userBannedEvent
        type: string
      userBannedDetails:
        $ref: '#/definitions/LiveChatUserBannedMessageDetails'
    type: object
  LiveChatModerator:
    description: >-
      A liveChatModerator resource represents a moderator for a YouTube live
      chat. A chat moderator has the ability to ban/unban users from a chat,
      remove message, etc.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube assigns to uniquely identify the moderator.
        type: string
      kind:
        default: youtube#liveChatModerator
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#liveChatModerator".
        type: string
      snippet:
        $ref: '#/definitions/LiveChatModeratorSnippet'
    type: object
  LiveChatModeratorListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of moderators that match the request criteria.
        items:
          $ref: '#/definitions/LiveChatModerator'
        type: array
      kind:
        default: youtube#liveChatModeratorListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#liveChatModeratorListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  LiveChatModeratorSnippet:
    properties:
      liveChatId:
        description: The ID of the live chat this moderator can act on.
        type: string
      moderatorDetails:
        $ref: '#/definitions/ChannelProfileDetails'
    type: object
  LiveChatPollClosedDetails:
    properties:
      pollId:
        description: The id of the poll that was closed.
        type: string
    type: object
  LiveChatPollEditedDetails:
    properties:
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/LiveChatPollItem'
        type: array
      prompt:
        type: string
    type: object
  LiveChatPollItem:
    properties:
      description:
        description: Plain text description of the item.
        type: string
      itemId:
        type: string
    type: object
  LiveChatPollOpenedDetails:
    properties:
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/LiveChatPollItem'
        type: array
      prompt:
        type: string
    type: object
  LiveChatPollVotedDetails:
    properties:
      itemId:
        description: The poll item the user chose.
        type: string
      pollId:
        description: The poll the user voted on.
        type: string
    type: object
  LiveChatSuperChatDetails:
    properties:
      amountDisplayString:
        description: >-
          A rendered string that displays the fund amount and currency to the
          user.
        type: string
      amountMicros:
        description: 'The amount purchased by the user, in micros (1,750,000 micros = 1.75).'
        format: uint64
        type: string
      currency:
        description: The currency in which the purchase was made.
        type: string
      tier:
        description: >-
          The tier in which the amount belongs. Lower amounts belong to lower
          tiers. The lowest tier is 1.
        format: uint32
        type: integer
      userComment:
        description: The comment added by the user to this Super Chat event.
        type: string
    type: object
  LiveChatSuperStickerDetails:
    properties:
      amountDisplayString:
        description: >-
          A rendered string that displays the fund amount and currency to the
          user.
        type: string
      amountMicros:
        description: 'The amount purchased by the user, in micros (1,750,000 micros = 1.75).'
        format: uint64
        type: string
      currency:
        description: The currency in which the purchase was made.
        type: string
      superStickerMetadata:
        $ref: '#/definitions/SuperStickerMetadata'
      tier:
        description: >-
          The tier in which the amount belongs. Lower amounts belong to lower
          tiers. The lowest tier is 1.
        format: uint32
        type: integer
    type: object
  LiveChatTextMessageDetails:
    properties:
      messageText:
        description: The user's message.
        type: string
    type: object
  LiveChatUserBannedMessageDetails:
    properties:
      banDurationSeconds:
        description: >-
          The duration of the ban. This property is only present if the banType
          is temporary.
        format: uint64
        type: string
      banType:
        description: The type of ban.
        enum:
          - permanent
          - temporary
        type: string
      bannedUserDetails:
        $ref: '#/definitions/ChannelProfileDetails'
    type: object
  LiveStream:
    description: A live stream describes a live ingestion point.
    properties:
      cdn:
        $ref: '#/definitions/CdnSettings'
      contentDetails:
        $ref: '#/definitions/LiveStreamContentDetails'
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube assigns to uniquely identify the stream.
        type: string
      kind:
        default: youtube#liveStream
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#liveStream".
        type: string
      snippet:
        $ref: '#/definitions/LiveStreamSnippet'
      status:
        $ref: '#/definitions/LiveStreamStatus'
    type: object
  LiveStreamConfigurationIssue:
    properties:
      description:
        description: The long-form description of the issue and how to resolve it.
        type: string
      reason:
        description: The short-form reason for this issue.
        type: string
      severity:
        description: How severe this issue is to the stream.
        enum:
          - error
          - info
          - warning
        type: string
      type:
        description: The kind of error happening.
        enum:
          - audioBitrateHigh
          - audioBitrateLow
          - audioBitrateMismatch
          - audioCodec
          - audioCodecMismatch
          - audioSampleRate
          - audioSampleRateMismatch
          - audioStereoMismatch
          - audioTooManyChannels
          - badContainer
          - bitrateHigh
          - bitrateLow
          - frameRateHigh
          - framerateMismatch
          - gopMismatch
          - gopSizeLong
          - gopSizeOver
          - gopSizeShort
          - interlacedVideo
          - multipleAudioStreams
          - multipleVideoStreams
          - noAudioStream
          - noVideoStream
          - openGop
          - resolutionMismatch
          - videoBitrateMismatch
          - videoCodec
          - videoCodecMismatch
          - videoIngestionFasterThanRealtime
          - videoIngestionStarved
          - videoInterlaceMismatch
          - videoProfileMismatch
          - videoResolutionSuboptimal
          - videoResolutionUnsupported
        type: string
    type: object
  LiveStreamContentDetails:
    description: Detailed settings of a stream.
    properties:
      closedCaptionsIngestionUrl:
        description: The ingestion URL where the closed captions of this stream are sent.
        type: string
      isReusable:
        description: >-
          Indicates whether the stream is reusable, which means that it can be
          bound to multiple broadcasts. It is common for broadcasters to reuse
          the same stream for many different broadcasts if those broadcasts
          occur at different times.


          If you set this value to false, then the stream will not be reusable,
          which means that it can only be bound to one broadcast. Non-reusable
          streams differ from reusable streams in the following ways:

          - A non-reusable stream can only be bound to one broadcast.

          - A non-reusable stream might be deleted by an automated process after
          the broadcast ends.

          - The  liveStreams.list method does not list non-reusable streams if
          you call the method and set the mine parameter to true. The only way
          to use that method to retrieve the resource for a non-reusable stream
          is to use the id parameter to identify the stream.
        type: boolean
    type: object
  LiveStreamHealthStatus:
    properties:
      configurationIssues:
        description: The configurations issues on this stream
        items:
          $ref: '#/definitions/LiveStreamConfigurationIssue'
        type: array
      lastUpdateTimeSeconds:
        description: The last time this status was updated (in seconds)
        format: uint64
        type: string
      status:
        description: The status code of this stream
        enum:
          - bad
          - good
          - noData
          - ok
          - revoked
        type: string
    type: object
  LiveStreamListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of live streams that match the request criteria.
        items:
          $ref: '#/definitions/LiveStream'
        type: array
      kind:
        default: youtube#liveStreamListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#liveStreamListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  LiveStreamSnippet:
    properties:
      channelId:
        description: >-
          The ID that YouTube uses to uniquely identify the channel that is
          transmitting the stream.
        type: string
      description:
        description: >-
          The stream's description. The value cannot be longer than 10000
          characters.
        type: string
      isDefaultStream:
        type: boolean
      publishedAt:
        description: >-
          The date and time that the stream was created. The value is specified
          in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      title:
        description: >-
          The stream's title. The value must be between 1 and 128 characters
          long.
        type: string
    type: object
  LiveStreamStatus:
    description: Brief description of the live stream status.
    properties:
      healthStatus:
        $ref: '#/definitions/LiveStreamHealthStatus'
      streamStatus:
        enum:
          - active
          - created
          - error
          - inactive
          - ready
        type: string
    type: object
  LocalizedProperty:
    properties:
      default:
        type: string
      defaultLanguage:
        $ref: '#/definitions/LanguageTag'
      localized:
        items:
          $ref: '#/definitions/LocalizedString'
        type: array
    type: object
  LocalizedString:
    properties:
      language:
        type: string
      value:
        type: string
    type: object
  Member:
    description: >-
      A member resource represents a member for a YouTube channel. A member
      provides recurring monetary support to a creator and receives special
      benefits.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube assigns to uniquely identify the member.
        type: string
      kind:
        default: youtube#member
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#member".
        type: string
      snippet:
        $ref: '#/definitions/MemberSnippet'
    type: object
  MemberListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of members that match the request criteria.
        items:
          $ref: '#/definitions/Member'
        type: array
      kind:
        default: youtube#memberListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#memberListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  MemberSnippet:
    properties:
      creatorChannelId:
        description: The id of the channel that's offering memberships.
        type: string
      memberDetails:
        $ref: '#/definitions/ChannelProfileDetails'
      membershipsDetails:
        $ref: '#/definitions/MembershipsDetails'
    type: object
  MembershipsDetails:
    properties:
      accessibleLevels:
        description: >-
          All levels that the user has access to. This includes the purchased
          level and all other levels that are included because of a higher
          purchase.
        items:
          type: string
        type: array
      memberSince:
        description: >-
          The date and time when the user became a continuous member across all
          levels.
        type: string
      memberSinceCurrentLevel:
        description: >-
          The date and time when the user started to continuously have access to
          the currently highest level.
        type: string
      memberTotalDuration:
        description: >-
          The cumulative time the user has been a member across all levels in
          complete months (the time is rounded down to the nearest integer).
        format: int32
        type: integer
      memberTotalDurationCurrentLevel:
        description: >-
          The cumulative time the user has had access to the currently highest
          level in complete months (the time is rounded down to the nearest
          integer).
        format: int32
        type: integer
      purchasedLevel:
        description: The highest level the user has access to at the moment.
        type: string
    type: object
  MembershipsLevel:
    description: >-
      A membershipsLevel resource represents an offer made by YouTube creators
      for their fans. Users can become members of the channel by joining one of
      the available levels. They will provide recurring monetary support and
      receives special benefits.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: >-
          The ID that YouTube assigns to uniquely identify the memberships
          level.
        type: string
      kind:
        default: youtube#membershipsLevel
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#membershipsLevel".
        type: string
      snippet:
        $ref: '#/definitions/MembershipsLevelSnippet'
    type: object
  MembershipsLevelListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of pricing levels offered by a creator to the fans.
        items:
          $ref: '#/definitions/MembershipsLevel'
        type: array
      kind:
        default: youtube#membershipsLevelListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#membershipsLevelListResponse".
        type: string
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  MembershipsLevelSnippet:
    properties:
      creatorChannelId:
        description: The id of the channel that's offering channel memberships.
        type: string
      levelDetails:
        $ref: '#/definitions/LevelDetails'
    type: object
  MonitorStreamInfo:
    description: Settings and Info of the monitor stream
    properties:
      broadcastStreamDelayMs:
        description: >-
          If you have set the enableMonitorStream property to true, then this
          property determines the length of the live broadcast delay.
        format: uint32
        type: integer
      embedHtml:
        description: HTML code that embeds a player that plays the monitor stream.
        type: string
      enableMonitorStream:
        description: >-
          This value determines whether the monitor stream is enabled for the
          broadcast. If the monitor stream is enabled, then YouTube will
          broadcast the event content on a special stream intended only for the
          broadcaster's consumption. The broadcaster can use the stream to
          review the event content and also to identify the optimal times to
          insert cuepoints.


          You need to set this value to true if you intend to have a broadcast
          delay for your event.


          Note: This property cannot be updated once the broadcast is in the
          testing or live state.
        type: boolean
    type: object
  Nonprofit:
    description: Nonprofit information.
    properties:
      nonprofitId:
        $ref: '#/definitions/NonprofitId'
      nonprofitLegalName:
        description: Legal name of the nonprofit.
        type: string
    type: object
  NonprofitId:
    properties:
      value:
        type: string
    type: object
  PageInfo:
    description: >-
      Paging details for lists of resources, including total number of items
      available and number of resources returned in a single page.
    properties:
      resultsPerPage:
        description: The number of results included in the API response.
        format: int32
        type: integer
      totalResults:
        description: The total number of results in the result set.
        format: int32
        type: integer
    type: object
  Playlist:
    description: >-
      A playlist resource represents a YouTube playlist. A playlist is a
      collection of videos that can be viewed sequentially and shared with other
      users. A playlist can contain up to 200 videos, and YouTube does not limit
      the number of playlists that each user creates. By default, playlists are
      publicly visible to other users, but playlists can be public or private.


      YouTube also uses playlists to identify special collections of videos for
      a channel, such as:

      - uploaded videos

      - favorite videos

      - positively rated (liked) videos

      - watch history

      - watch later  To be more specific, these lists are associated with a
      channel, which is a collection of a person, group, or company's videos,
      playlists, and other YouTube information. You can retrieve the playlist
      IDs for each of these lists from the  channel resource for a given
      channel.


      You can then use the   playlistItems.list method to retrieve any of those
      lists. You can also add or remove items from those lists by calling the  
      playlistItems.insert and   playlistItems.delete methods.
    properties:
      contentDetails:
        $ref: '#/definitions/PlaylistContentDetails'
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the playlist.
        type: string
      kind:
        default: youtube#playlist
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#playlist".
        type: string
      localizations:
        additionalProperties:
          $ref: '#/definitions/PlaylistLocalization'
        description: Localizations for different languages
        type: object
      player:
        $ref: '#/definitions/PlaylistPlayer'
      snippet:
        $ref: '#/definitions/PlaylistSnippet'
      status:
        $ref: '#/definitions/PlaylistStatus'
    type: object
  PlaylistContentDetails:
    properties:
      itemCount:
        description: The number of videos in the playlist.
        format: uint32
        type: integer
    type: object
  PlaylistItem:
    description: >-
      A playlistItem resource identifies another resource, such as a video, that
      is included in a playlist. In addition, the playlistItem  resource
      contains details about the included resource that pertain specifically to
      how that resource is used in that playlist.


      YouTube uses playlists to identify special collections of videos for a
      channel, such as:

      - uploaded videos

      - favorite videos

      - positively rated (liked) videos

      - watch history

      - watch later  To be more specific, these lists are associated with a
      channel, which is a collection of a person, group, or company's videos,
      playlists, and other YouTube information.


      You can retrieve the playlist IDs for each of these lists from the 
      channel resource  for a given channel. You can then use the  
      playlistItems.list method to retrieve any of those lists. You can also add
      or remove items from those lists by calling the   playlistItems.insert
      and   playlistItems.delete methods. For example, if a user gives a
      positive rating to a video, you would insert that video into the liked
      videos playlist for that user's channel.
    properties:
      contentDetails:
        $ref: '#/definitions/PlaylistItemContentDetails'
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the playlist item.
        type: string
      kind:
        default: youtube#playlistItem
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#playlistItem".
        type: string
      snippet:
        $ref: '#/definitions/PlaylistItemSnippet'
      status:
        $ref: '#/definitions/PlaylistItemStatus'
    type: object
  PlaylistItemContentDetails:
    properties:
      endAt:
        description: >-
          The time, measured in seconds from the start of the video, when the
          video should stop playing. (The playlist owner can specify the times
          when the video should start and stop playing when the video is played
          in the context of the playlist.) By default, assume that the
          video.endTime is the end of the video.
        type: string
      note:
        description: A user-generated note for this item.
        type: string
      startAt:
        description: >-
          The time, measured in seconds from the start of the video, when the
          video should start playing. (The playlist owner can specify the times
          when the video should start and stop playing when the video is played
          in the context of the playlist.) The default value is 0.
        type: string
      videoId:
        description: >-
          The ID that YouTube uses to uniquely identify a video. To retrieve the
          video resource, set the id query parameter to this value in your API
          request.
        type: string
      videoPublishedAt:
        description: >-
          The date and time that the video was published to YouTube. The value
          is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
    type: object
  PlaylistItemListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of playlist items that match the request criteria.
        items:
          $ref: '#/definitions/PlaylistItem'
        type: array
      kind:
        default: youtube#playlistItemListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#playlistItemListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  PlaylistItemSnippet:
    description: >-
      Basic details about a playlist, including title, description and
      thumbnails.
    properties:
      channelId:
        description: >-
          The ID that YouTube uses to uniquely identify the user that added the
          item to the playlist.
        type: string
      channelTitle:
        description: Channel title for the channel that the playlist item belongs to.
        type: string
      description:
        description: The item's description.
        type: string
      playlistId:
        description: >-
          The ID that YouTube uses to uniquely identify the playlist that the
          playlist item is in.
        type: string
      position:
        description: >-
          The order in which the item appears in the playlist. The value uses a
          zero-based index, so the first item has a position of 0, the second
          item has a position of 1, and so forth.
        format: uint32
        type: integer
      publishedAt:
        description: >-
          The date and time that the item was added to the playlist. The value
          is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      resourceId:
        $ref: '#/definitions/ResourceId'
      thumbnails:
        $ref: '#/definitions/ThumbnailDetails'
      title:
        description: The item's title.
        type: string
    type: object
  PlaylistItemStatus:
    description: Information about the playlist item's privacy status.
    properties:
      privacyStatus:
        description: This resource's privacy status.
        enum:
          - private
          - public
          - unlisted
        type: string
    type: object
  PlaylistListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of playlists that match the request criteria.
        items:
          $ref: '#/definitions/Playlist'
        type: array
      kind:
        default: youtube#playlistListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#playlistListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  PlaylistLocalization:
    description: Playlist localization setting
    properties:
      description:
        description: The localized strings for playlist's description.
        type: string
      title:
        description: The localized strings for playlist's title.
        type: string
    type: object
  PlaylistPlayer:
    properties:
      embedHtml:
        description: An <iframe> tag that embeds a player that will play the playlist.
        type: string
    type: object
  PlaylistSnippet:
    description: >-
      Basic details about a playlist, including title, description and
      thumbnails.
    properties:
      tags:
        description: Keyword tags associated with the playlist.
        items:
          type: string
        type: array
      channelId:
        description: >-
          The ID that YouTube uses to uniquely identify the channel that
          published the playlist.
        type: string
      channelTitle:
        description: The channel title of the channel that the video belongs to.
        type: string
      defaultLanguage:
        description: The language of the playlist's default title and description.
        type: string
      description:
        description: The playlist's description.
        type: string
      localized:
        $ref: '#/definitions/PlaylistLocalization'
      publishedAt:
        description: >-
          The date and time that the playlist was created. The value is
          specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      thumbnails:
        $ref: '#/definitions/ThumbnailDetails'
      title:
        description: The playlist's title.
        type: string
    type: object
  PlaylistStatus:
    properties:
      privacyStatus:
        description: The playlist's privacy status.
        enum:
          - private
          - public
          - unlisted
        type: string
    type: object
  PromotedItem:
    description: Describes a single promoted item.
    properties:
      customMessage:
        description: >-
          A custom message to display for this promotion. This field is
          currently ignored unless the promoted item is a website.
        type: string
      id:
        $ref: '#/definitions/PromotedItemId'
      promotedByContentOwner:
        description: >-
          If true, the content owner's name will be used when displaying the
          promotion. This field can only be set when the update is made on
          behalf of the content owner.
        type: boolean
      timing:
        $ref: '#/definitions/InvideoTiming'
    type: object
  PromotedItemId:
    description: >-
      Describes a single promoted item id. It is a union of various possible
      types.
    properties:
      recentlyUploadedBy:
        description: >-
          If type is recentUpload, this field identifies the channel from which
          to take the recent upload. If missing, the channel is assumed to be
          the same channel for which the invideoPromotion is set.
        type: string
      type:
        description: Describes the type of the promoted item.
        enum:
          - recentUpload
          - video
          - website
        type: string
      videoId:
        description: >-
          If the promoted item represents a video, this field represents the
          unique YouTube ID identifying it. This field will be present only if
          type has the value video.
        type: string
      websiteUrl:
        description: >-
          If the promoted item represents a website, this field represents the
          url pointing to the website. This field will be present only if type
          has the value website.
        type: string
    type: object
  PropertyValue:
    description: A pair Property / Value.
    properties:
      property:
        description: A property.
        type: string
      value:
        description: The property's value.
        type: string
    type: object
  ResourceId:
    description: >-
      A resource id is a generic reference that points to another YouTube
      resource.
    properties:
      channelId:
        description: >-
          The ID that YouTube uses to uniquely identify the referred resource,
          if that resource is a channel. This property is only present if the
          resourceId.kind value is youtube#channel.
        type: string
      kind:
        description: The type of the API resource.
        type: string
      playlistId:
        description: >-
          The ID that YouTube uses to uniquely identify the referred resource,
          if that resource is a playlist. This property is only present if the
          resourceId.kind value is youtube#playlist.
        type: string
      videoId:
        description: >-
          The ID that YouTube uses to uniquely identify the referred resource,
          if that resource is a video. This property is only present if the
          resourceId.kind value is youtube#video.
        type: string
    type: object
  SearchListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of results that match the search criteria.
        items:
          $ref: '#/definitions/SearchResult'
        type: array
      kind:
        default: youtube#searchListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#searchListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      regionCode:
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  SearchResult:
    description: >-
      A search result contains information about a YouTube video, channel, or
      playlist that matches the search parameters specified in an API request.
      While a search result points to a uniquely identifiable resource, like a
      video, it does not have its own persistent data.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        $ref: '#/definitions/ResourceId'
      kind:
        default: youtube#searchResult
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#searchResult".
        type: string
      snippet:
        $ref: '#/definitions/SearchResultSnippet'
    type: object
  SearchResultSnippet:
    description: >-
      Basic details about a search result, including title, description and
      thumbnails of the item referenced by the search result.
    properties:
      channelId:
        description: >-
          The value that YouTube uses to uniquely identify the channel that
          published the resource that the search result identifies.
        type: string
      channelTitle:
        description: >-
          The title of the channel that published the resource that the search
          result identifies.
        type: string
      description:
        description: A description of the search result.
        type: string
      liveBroadcastContent:
        description: >-
          It indicates if the resource (video or channel) has upcoming/active
          live broadcast content. Or it's "none" if there is not any
          upcoming/active live broadcasts.
        enum:
          - live
          - none
          - upcoming
        type: string
      publishedAt:
        description: >-
          The creation date and time of the resource that the search result
          identifies. The value is specified in ISO 8601
          (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      thumbnails:
        $ref: '#/definitions/ThumbnailDetails'
      title:
        description: The title of the search result.
        type: string
    type: object
  Sponsor:
    description: >-
      A sponsor resource represents a sponsor for a YouTube channel. A sponsor
      provides recurring monetary support to a creator and receives special
      benefits.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      kind:
        default: youtube#sponsor
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#sponsor".
        type: string
      snippet:
        $ref: '#/definitions/SponsorSnippet'
    type: object
  SponsorListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of sponsors that match the request criteria.
        items:
          $ref: '#/definitions/Sponsor'
        type: array
      kind:
        default: youtube#sponsorListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#sponsorListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  SponsorSnippet:
    properties:
      channelId:
        description: The id of the channel being sponsored.
        type: string
      cumulativeDurationMonths:
        description: The cumulative time a user has been a sponsor in months.
        format: int32
        type: integer
      sponsorDetails:
        $ref: '#/definitions/ChannelProfileDetails'
      sponsorSince:
        description: >-
          The date and time when the user became a sponsor. The value is
          specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
    type: object
  Subscription:
    description: >-
      A subscription resource contains information about a YouTube user
      subscription. A subscription notifies a user when new videos are added to
      a channel or when another user takes one of several actions on YouTube,
      such as uploading a video, rating a video, or commenting on a video.
    properties:
      contentDetails:
        $ref: '#/definitions/SubscriptionContentDetails'
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the subscription.
        type: string
      kind:
        default: youtube#subscription
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#subscription".
        type: string
      snippet:
        $ref: '#/definitions/SubscriptionSnippet'
      subscriberSnippet:
        $ref: '#/definitions/SubscriptionSubscriberSnippet'
    type: object
  SubscriptionContentDetails:
    description: Details about the content to witch a subscription refers.
    properties:
      activityType:
        description: >-
          The type of activity this subscription is for (only uploads,
          everything).
        enum:
          - all
          - uploads
        type: string
      newItemCount:
        description: >-
          The number of new items in the subscription since its content was last
          read.
        format: uint32
        type: integer
      totalItemCount:
        description: The approximate number of items that the subscription points to.
        format: uint32
        type: integer
    type: object
  SubscriptionListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of subscriptions that match the request criteria.
        items:
          $ref: '#/definitions/Subscription'
        type: array
      kind:
        default: youtube#subscriptionListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#subscriptionListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  SubscriptionSnippet:
    description: >-
      Basic details about a subscription, including title, description and
      thumbnails of the subscribed item.
    properties:
      channelId:
        description: >-
          The ID that YouTube uses to uniquely identify the subscriber's
          channel.
        type: string
      channelTitle:
        description: Channel title for the channel that the subscription belongs to.
        type: string
      description:
        description: The subscription's details.
        type: string
      publishedAt:
        description: >-
          The date and time that the subscription was created. The value is
          specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      resourceId:
        $ref: '#/definitions/ResourceId'
      thumbnails:
        $ref: '#/definitions/ThumbnailDetails'
      title:
        description: The subscription's title.
        type: string
    type: object
  SubscriptionSubscriberSnippet:
    description: >-
      Basic details about a subscription's subscriber including title,
      description, channel ID and thumbnails.
    properties:
      channelId:
        description: The channel ID of the subscriber.
        type: string
      description:
        description: The description of the subscriber.
        type: string
      thumbnails:
        $ref: '#/definitions/ThumbnailDetails'
      title:
        description: The title of the subscriber.
        type: string
    type: object
  SuperChatEvent:
    description: >-
      A superChatEvent resource represents a Super Chat purchase on a YouTube
      channel.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube assigns to uniquely identify the Super Chat event.
        type: string
      kind:
        default: youtube#superChatEvent
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#superChatEvent".
        type: string
      snippet:
        $ref: '#/definitions/SuperChatEventSnippet'
    type: object
  SuperChatEventListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of Super Chat purchases that match the request criteria.
        items:
          $ref: '#/definitions/SuperChatEvent'
        type: array
      kind:
        default: youtube#superChatEventListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#superChatEventListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  SuperChatEventSnippet:
    properties:
      amountMicros:
        description: >-
          The purchase amount, in micros of the purchase currency. e.g., 1 is
          represented as 1000000.
        format: uint64
        type: string
      channelId:
        description: Channel id where the event occurred.
        type: string
      commentText:
        description: The text contents of the comment left by the user.
        type: string
      createdAt:
        description: >-
          The date and time when the event occurred. The value is specified in
          ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      currency:
        description: The currency in which the purchase was made. ISO 4217.
        type: string
      displayString:
        description: >-
          A rendered string that displays the purchase amount and currency
          (e.g., "$1.00"). The string is rendered for the given language.
        type: string
      isSuperChatForGood:
        description: True if this event is a Super Chat for Good purchase.
        type: boolean
      isSuperStickerEvent:
        description: True if this event is a Super Sticker event.
        type: boolean
      messageType:
        description: >-
          The tier for the paid message, which is based on the amount of money
          spent to purchase the message.
        format: uint32
        type: integer
      nonprofit:
        $ref: '#/definitions/Nonprofit'
      superStickerMetadata:
        $ref: '#/definitions/SuperStickerMetadata'
      supporterDetails:
        $ref: '#/definitions/ChannelProfileDetails'
    type: object
  SuperStickerMetadata:
    properties:
      altText:
        description: >-
          Internationalized alt text that describes the sticker image and any
          animation associated with it.
        type: string
      altTextLanguage:
        description: Specifies the localization language in which the alt text is returned.
        type: string
      stickerId:
        description: >-
          Unique identifier of the Super Sticker. This is a shorter form of the
          alt_text that includes pack name and a recognizable characteristic of
          the sticker.
        type: string
    type: object
  Thumbnail:
    description: A thumbnail is an image representing a YouTube resource.
    properties:
      height:
        description: (Optional) Height of the thumbnail image.
        format: uint32
        type: integer
      url:
        description: The thumbnail image's URL.
        type: string
      width:
        description: (Optional) Width of the thumbnail image.
        format: uint32
        type: integer
    type: object
  ThumbnailDetails:
    description: Internal representation of thumbnails for a YouTube resource.
    properties:
      default:
        $ref: '#/definitions/Thumbnail'
      high:
        $ref: '#/definitions/Thumbnail'
      maxres:
        $ref: '#/definitions/Thumbnail'
      medium:
        $ref: '#/definitions/Thumbnail'
      standard:
        $ref: '#/definitions/Thumbnail'
    type: object
  ThumbnailSetResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of thumbnails.
        items:
          $ref: '#/definitions/ThumbnailDetails'
        type: array
      kind:
        default: youtube#thumbnailSetResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#thumbnailSetResponse".
        type: string
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  TokenPagination:
    description: Stub token pagination template to suppress results.
    type: object
  Video:
    description: A video resource represents a YouTube video.
    properties:
      ageGating:
        $ref: '#/definitions/VideoAgeGating'
      contentDetails:
        $ref: '#/definitions/VideoContentDetails'
      etag:
        description: Etag of this resource.
        type: string
      fileDetails:
        $ref: '#/definitions/VideoFileDetails'
      id:
        description: The ID that YouTube uses to uniquely identify the video.
        type: string
      kind:
        default: youtube#video
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#video".
        type: string
      liveStreamingDetails:
        $ref: '#/definitions/VideoLiveStreamingDetails'
      localizations:
        additionalProperties:
          $ref: '#/definitions/VideoLocalization'
        description: List with all localizations.
        type: object
      monetizationDetails:
        $ref: '#/definitions/VideoMonetizationDetails'
      player:
        $ref: '#/definitions/VideoPlayer'
      processingDetails:
        $ref: '#/definitions/VideoProcessingDetails'
      projectDetails:
        $ref: '#/definitions/VideoProjectDetails'
      recordingDetails:
        $ref: '#/definitions/VideoRecordingDetails'
      snippet:
        $ref: '#/definitions/VideoSnippet'
      statistics:
        $ref: '#/definitions/VideoStatistics'
      status:
        $ref: '#/definitions/VideoStatus'
      suggestions:
        $ref: '#/definitions/VideoSuggestions'
      topicDetails:
        $ref: '#/definitions/VideoTopicDetails'
    type: object
  VideoAbuseReport:
    properties:
      comments:
        description: Additional comments regarding the abuse report.
        type: string
      language:
        description: The language that the content was viewed in.
        type: string
      reasonId:
        description: >-
          The high-level, or primary, reason that the content is abusive. The
          value is an abuse report reason ID.
        type: string
      secondaryReasonId:
        description: >-
          The specific, or secondary, reason that this content is abusive (if
          available). The value is an abuse report reason ID that is a valid
          secondary reason for the primary reason.
        type: string
      videoId:
        description: The ID that YouTube uses to uniquely identify the video.
        type: string
    type: object
  VideoAbuseReportReason:
    description: >-
      A videoAbuseReportReason resource identifies a reason that a video could
      be reported as abusive. Video abuse report reasons are used with
      video.ReportAbuse.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID of this abuse report reason.
        type: string
      kind:
        default: youtube#videoAbuseReportReason
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#videoAbuseReportReason".
        type: string
      snippet:
        $ref: '#/definitions/VideoAbuseReportReasonSnippet'
    type: object
  VideoAbuseReportReasonListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of valid abuse reasons that are used with video.ReportAbuse.
        items:
          $ref: '#/definitions/VideoAbuseReportReason'
        type: array
      kind:
        default: youtube#videoAbuseReportReasonListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#videoAbuseReportReasonListResponse".
        type: string
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  VideoAbuseReportReasonSnippet:
    description: 'Basic details about a video category, such as its localized title.'
    properties:
      label:
        description: The localized label belonging to this abuse report reason.
        type: string
      secondaryReasons:
        description: >-
          The secondary reasons associated with this reason, if any are
          available. (There might be 0 or more.)
        items:
          $ref: '#/definitions/VideoAbuseReportSecondaryReason'
        type: array
    type: object
  VideoAbuseReportSecondaryReason:
    properties:
      id:
        description: The ID of this abuse report secondary reason.
        type: string
      label:
        description: The localized label for this abuse report secondary reason.
        type: string
    type: object
  VideoAgeGating:
    properties:
      alcoholContent:
        description: >-
          Indicates whether or not the video has alcoholic beverage content.
          Only users of legal purchasing age in a particular country, as
          identified by ICAP, can view the content.
        type: boolean
      restricted:
        description: >-
          Age-restricted trailers. For redband trailers and adult-rated
          video-games. Only users aged 18+ can view the content. The the field
          is true the content is restricted to viewers aged 18+. Otherwise The
          field won't be present.
        type: boolean
      videoGameRating:
        description: 'Video game rating, if any.'
        enum:
          - anyone
          - m15Plus
          - m16Plus
          - m17Plus
        type: string
    type: object
  VideoCategory:
    description: >-
      A videoCategory resource identifies a category that has been or could be
      associated with uploaded videos.
    properties:
      etag:
        description: Etag of this resource.
        type: string
      id:
        description: The ID that YouTube uses to uniquely identify the video category.
        type: string
      kind:
        default: youtube#videoCategory
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#videoCategory".
        type: string
      snippet:
        $ref: '#/definitions/VideoCategorySnippet'
    type: object
  VideoCategoryListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: >-
          A list of video categories that can be associated with YouTube videos.
          In this map, the video category ID is the map key, and its value is
          the corresponding videoCategory resource.
        items:
          $ref: '#/definitions/VideoCategory'
        type: array
      kind:
        default: youtube#videoCategoryListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#videoCategoryListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  VideoCategorySnippet:
    description: 'Basic details about a video category, such as its localized title.'
    properties:
      assignable:
        type: boolean
      channelId:
        default: UCBR8-60-B28hp2BmDPdntcQ
        description: The YouTube channel that created the video category.
        type: string
      title:
        description: The video category's title.
        type: string
    type: object
  VideoContentDetails:
    description: Details about the content of a YouTube Video.
    properties:
      caption:
        description: The value of captions indicates whether the video has captions or not.
        enum:
          - 'false'
          - 'true'
        type: string
      contentRating:
        $ref: '#/definitions/ContentRating'
      countryRestriction:
        $ref: '#/definitions/AccessPolicy'
      definition:
        description: >-
          The value of definition indicates whether the video is available in
          high definition or only in standard definition.
        enum:
          - hd
          - sd
        type: string
      dimension:
        description: >-
          The value of dimension indicates whether the video is available in 3D
          or in 2D.
        type: string
      duration:
        description: >-
          The length of the video. The tag value is an ISO 8601 duration in the
          format PT#M#S, in which the letters PT indicate that the value
          specifies a period of time, and the letters M and S refer to length in
          minutes and seconds, respectively. The # characters preceding the M
          and S letters are both integers that specify the number of minutes (or
          seconds) of the video. For example, a value of PT15M51S indicates that
          the video is 15 minutes and 51 seconds long.
        type: string
      hasCustomThumbnail:
        description: >-
          Indicates whether the video uploader has provided a custom thumbnail
          image for the video. This property is only visible to the video
          uploader.
        type: boolean
      licensedContent:
        description: >-
          The value of is_license_content indicates whether the video is
          licensed content.
        type: boolean
      projection:
        description: Specifies the projection format of the video.
        enum:
          - '360'
          - rectangular
        type: string
      regionRestriction:
        $ref: '#/definitions/VideoContentDetailsRegionRestriction'
    type: object
  VideoContentDetailsRegionRestriction:
    description: DEPRECATED Region restriction of the video.
    properties:
      allowed:
        description: >-
          A list of region codes that identify countries where the video is
          viewable. If this property is present and a country is not listed in
          its value, then the video is blocked from appearing in that country.
          If this property is present and contains an empty list, the video is
          blocked in all countries.
        items:
          type: string
        type: array
      blocked:
        description: >-
          A list of region codes that identify countries where the video is
          blocked. If this property is present and a country is not listed in
          its value, then the video is viewable in that country. If this
          property is present and contains an empty list, the video is viewable
          in all countries.
        items:
          type: string
        type: array
    type: object
  VideoFileDetails:
    description: >-
      Describes original video file properties, including technical details
      about audio and video streams, but also metadata information like content
      length, digitization time, or geotagging information.
    properties:
      audioStreams:
        description: >-
          A list of audio streams contained in the uploaded video file. Each
          item in the list contains detailed metadata about an audio stream.
        items:
          $ref: '#/definitions/VideoFileDetailsAudioStream'
        type: array
      bitrateBps:
        description: >-
          The uploaded video file's combined (video and audio) bitrate in bits
          per second.
        format: uint64
        type: string
      container:
        description: The uploaded video file's container format.
        type: string
      creationTime:
        description: >-
          The date and time when the uploaded video file was created. The value
          is specified in ISO 8601 format. Currently, the following ISO 8601
          formats are supported:

          - Date only: YYYY-MM-DD

          - Naive time: YYYY-MM-DDTHH:MM:SS

          - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM
        type: string
      durationMs:
        description: The length of the uploaded video in milliseconds.
        format: uint64
        type: string
      fileName:
        description: >-
          The uploaded file's name. This field is present whether a video file
          or another type of file was uploaded.
        type: string
      fileSize:
        description: >-
          The uploaded file's size in bytes. This field is present whether a
          video file or another type of file was uploaded.
        format: uint64
        type: string
      fileType:
        description: >-
          The uploaded file's type as detected by YouTube's video processing
          engine. Currently, YouTube only processes video files, but this field
          is present whether a video file or another type of file was uploaded.
        enum:
          - archive
          - audio
          - document
          - image
          - other
          - project
          - video
        type: string
      videoStreams:
        description: >-
          A list of video streams contained in the uploaded video file. Each
          item in the list contains detailed metadata about a video stream.
        items:
          $ref: '#/definitions/VideoFileDetailsVideoStream'
        type: array
    type: object
  VideoFileDetailsAudioStream:
    description: Information about an audio stream.
    properties:
      bitrateBps:
        description: 'The audio stream''s bitrate, in bits per second.'
        format: uint64
        type: string
      channelCount:
        description: The number of audio channels that the stream contains.
        format: uint32
        type: integer
      codec:
        description: The audio codec that the stream uses.
        type: string
      vendor:
        description: >-
          A value that uniquely identifies a video vendor. Typically, the value
          is a four-letter vendor code.
        type: string
    type: object
  VideoFileDetailsVideoStream:
    description: Information about a video stream.
    properties:
      aspectRatio:
        description: >-
          The video content's display aspect ratio, which specifies the aspect
          ratio in which the video should be displayed.
        format: double
        type: number
      bitrateBps:
        description: 'The video stream''s bitrate, in bits per second.'
        format: uint64
        type: string
      codec:
        description: The video codec that the stream uses.
        type: string
      frameRateFps:
        description: 'The video stream''s frame rate, in frames per second.'
        format: double
        type: number
      heightPixels:
        description: The encoded video content's height in pixels.
        format: uint32
        type: integer
      rotation:
        description: >-
          The amount that YouTube needs to rotate the original source content to
          properly display the video.
        enum:
          - clockwise
          - counterClockwise
          - none
          - other
          - upsideDown
        type: string
      vendor:
        description: >-
          A value that uniquely identifies a video vendor. Typically, the value
          is a four-letter vendor code.
        type: string
      widthPixels:
        description: >-
          The encoded video content's width in pixels. You can calculate the
          video's encoding aspect ratio as width_pixels / height_pixels.
        format: uint32
        type: integer
    type: object
  VideoGetRatingResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of ratings that match the request criteria.
        items:
          $ref: '#/definitions/VideoRating'
        type: array
      kind:
        default: youtube#videoGetRatingResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#videoGetRatingResponse".
        type: string
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  VideoListResponse:
    properties:
      etag:
        description: Etag of this resource.
        type: string
      eventId:
        description: Serialized EventId of the request which produced this response.
        type: string
      items:
        description: A list of videos that match the request criteria.
        items:
          $ref: '#/definitions/Video'
        type: array
      kind:
        default: youtube#videoListResponse
        description: >-
          Identifies what kind of resource this is. Value: the fixed string
          "youtube#videoListResponse".
        type: string
      nextPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the next page in the result set.
        type: string
      pageInfo:
        $ref: '#/definitions/PageInfo'
      prevPageToken:
        description: >-
          The token that can be used as the value of the pageToken parameter to
          retrieve the previous page in the result set.
        type: string
      tokenPagination:
        $ref: '#/definitions/TokenPagination'
      visitorId:
        description: The visitorId identifies the visitor.
        type: string
    type: object
  VideoLiveStreamingDetails:
    description: Details about the live streaming metadata.
    properties:
      activeLiveChatId:
        description: >-
          The ID of the currently active live chat attached to this video. This
          field is filled only if the video is a currently live broadcast that
          has live chat. Once the broadcast transitions to complete this field
          will be removed and the live chat closed down. For persistent
          broadcasts that live chat id will no longer be tied to this video but
          rather to the new video being displayed at the persistent page.
        type: string
      actualEndTime:
        description: >-
          The time that the broadcast actually ended. The value is specified in
          ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be
          available until the broadcast is over.
        format: date-time
        type: string
      actualStartTime:
        description: >-
          The time that the broadcast actually started. The value is specified
          in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be
          available until the broadcast begins.
        format: date-time
        type: string
      concurrentViewers:
        description: >-
          The number of viewers currently watching the broadcast. The property
          and its value will be present if the broadcast has current viewers and
          the broadcast owner has not hidden the viewcount for the video. Note
          that YouTube stops tracking the number of concurrent viewers for a
          broadcast when the broadcast ends. So, this property would not
          identify the number of viewers watching an archived video of a live
          broadcast that already ended.
        format: uint64
        type: string
      scheduledEndTime:
        description: >-
          The time that the broadcast is scheduled to end. The value is
          specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. If the value is
          empty or the property is not present, then the broadcast is scheduled
          to continue indefinitely.
        format: date-time
        type: string
      scheduledStartTime:
        description: >-
          The time that the broadcast is scheduled to begin. The value is
          specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
    type: object
  VideoLocalization:
    description: Localized versions of certain video properties (e.g. title).
    properties:
      description:
        description: Localized version of the video's description.
        type: string
      title:
        description: Localized version of the video's title.
        type: string
    type: object
  VideoMonetizationDetails:
    description: Details about monetization of a YouTube Video.
    properties:
      access:
        $ref: '#/definitions/AccessPolicy'
    type: object
  VideoPlayer:
    description: Player to be used for a video playback.
    properties:
      embedHeight:
        format: int64
        type: string
      embedHtml:
        description: An <iframe> tag that embeds a player that will play the video.
        type: string
      embedWidth:
        description: The embed width
        format: int64
        type: string
    type: object
  VideoProcessingDetails:
    description: >-
      Describes processing status and progress and availability of some other
      Video resource parts.
    properties:
      editorSuggestionsAvailability:
        description: >-
          This value indicates whether video editing suggestions, which might
          improve video quality or the playback experience, are available for
          the video. You can retrieve these suggestions by requesting the
          suggestions part in your videos.list() request.
        type: string
      fileDetailsAvailability:
        description: >-
          This value indicates whether file details are available for the
          uploaded video. You can retrieve a video's file details by requesting
          the fileDetails part in your videos.list() request.
        type: string
      processingFailureReason:
        description: >-
          The reason that YouTube failed to process the video. This property
          will only have a value if the processingStatus property's value is
          failed.
        enum:
          - other
          - streamingFailed
          - transcodeFailed
          - uploadFailed
        type: string
      processingIssuesAvailability:
        description: >-
          This value indicates whether the video processing engine has generated
          suggestions that might improve YouTube's ability to process the the
          video, warnings that explain video processing problems, or errors that
          cause video processing problems. You can retrieve these suggestions by
          requesting the suggestions part in your videos.list() request.
        type: string
      processingProgress:
        $ref: '#/definitions/VideoProcessingDetailsProcessingProgress'
      processingStatus:
        description: >-
          The video's processing status. This value indicates whether YouTube
          was able to process the video or if the video is still being
          processed.
        enum:
          - failed
          - processing
          - succeeded
          - terminated
        type: string
      tagSuggestionsAvailability:
        description: >-
          This value indicates whether keyword (tag) suggestions are available
          for the video. Tags can be added to a video's metadata to make it
          easier for other users to find the video. You can retrieve these
          suggestions by requesting the suggestions part in your videos.list()
          request.
        type: string
      thumbnailsAvailability:
        description: >-
          This value indicates whether thumbnail images have been generated for
          the video.
        type: string
    type: object
  VideoProcessingDetailsProcessingProgress:
    description: Video processing progress and completion time estimate.
    properties:
      partsProcessed:
        description: >-
          The number of parts of the video that YouTube has already processed.
          You can estimate the percentage of the video that YouTube has already
          processed by calculating:

          100 * parts_processed / parts_total


          Note that since the estimated number of parts could increase without a
          corresponding increase in the number of parts that have already been
          processed, it is possible that the calculated progress could
          periodically decrease while YouTube processes a video.
        format: uint64
        type: string
      partsTotal:
        description: >-
          An estimate of the total number of parts that need to be processed for
          the video. The number may be updated with more precise estimates while
          YouTube processes the video.
        format: uint64
        type: string
      timeLeftMs:
        description: >-
          An estimate of the amount of time, in millseconds, that YouTube needs
          to finish processing the video.
        format: uint64
        type: string
    type: object
  VideoProjectDetails:
    description: Project specific details about the content of a YouTube Video.
    properties:
      tags:
        description: A list of project tags associated with the video during the upload.
        items:
          type: string
        type: array
    type: object
  VideoRating:
    properties:
      rating:
        enum:
          - dislike
          - like
          - none
          - unspecified
        type: string
      videoId:
        type: string
    type: object
  VideoRecordingDetails:
    description: Recording information associated with the video.
    properties:
      location:
        $ref: '#/definitions/GeoPoint'
      locationDescription:
        description: The text description of the location where the video was recorded.
        type: string
      recordingDate:
        description: >-
          The date and time when the video was recorded. The value is specified
          in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format.
        format: date-time
        type: string
    type: object
  VideoSnippet:
    description: >-
      Basic details about a video, including title, description, uploader,
      thumbnails and category.
    properties:
      tags:
        description: >-
          A list of keyword tags associated with the video. Tags may contain
          spaces.
        items:
          type: string
        type: array
      categoryId:
        description: The YouTube video category associated with the video.
        type: string
      channelId:
        description: >-
          The ID that YouTube uses to uniquely identify the channel that the
          video was uploaded to.
        type: string
      channelTitle:
        description: Channel title for the channel that the video belongs to.
        type: string
      defaultAudioLanguage:
        description: >-
          The default_audio_language property specifies the language spoken in
          the video's default audio track.
        type: string
      defaultLanguage:
        description: The language of the videos's default snippet.
        type: string
      description:
        description: The video's description.
        type: string
      liveBroadcastContent:
        description: >-
          Indicates if the video is an upcoming/active live broadcast. Or it's
          "none" if the video is not an upcoming/active live broadcast.
        enum:
          - live
          - none
          - upcoming
        type: string
      localized:
        $ref: '#/definitions/VideoLocalization'
      publishedAt:
        description: >-
          The date and time that the video was uploaded. The value is specified
          in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      thumbnails:
        $ref: '#/definitions/ThumbnailDetails'
      title:
        description: The video's title.
        type: string
    type: object
  VideoStatistics:
    description: >-
      Statistics about the video, such as the number of times the video was
      viewed or liked.
    properties:
      commentCount:
        description: The number of comments for the video.
        format: uint64
        type: string
      dislikeCount:
        description: >-
          The number of users who have indicated that they disliked the video by
          giving it a negative rating.
        format: uint64
        type: string
      favoriteCount:
        description: >-
          The number of users who currently have the video marked as a favorite
          video.
        format: uint64
        type: string
      likeCount:
        description: >-
          The number of users who have indicated that they liked the video by
          giving it a positive rating.
        format: uint64
        type: string
      viewCount:
        description: The number of times the video has been viewed.
        format: uint64
        type: string
    type: object
  VideoStatus:
    description: 'Basic details about a video category, such as its localized title.'
    properties:
      embeddable:
        description: This value indicates if the video can be embedded on another website.
        type: boolean
      failureReason:
        description: >-
          This value explains why a video failed to upload. This property is
          only present if the uploadStatus property indicates that the upload
          failed.
        enum:
          - codec
          - conversion
          - emptyFile
          - invalidFile
          - tooSmall
          - uploadAborted
        type: string
      license:
        description: The video's license.
        enum:
          - creativeCommon
          - youtube
        type: string
      madeForKids:
        description: TODO
        type: boolean
      privacyStatus:
        description: The video's privacy status.
        enum:
          - private
          - public
          - unlisted
        type: string
      publicStatsViewable:
        description: >-
          This value indicates if the extended video statistics on the watch
          page can be viewed by everyone. Note that the view count, likes, etc
          will still be visible if this is disabled.
        type: boolean
      publishAt:
        description: >-
          The date and time when the video is scheduled to publish. It can be
          set only if the privacy status of the video is private. The value is
          specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
        format: date-time
        type: string
      rejectionReason:
        description: >-
          This value explains why YouTube rejected an uploaded video. This
          property is only present if the uploadStatus property indicates that
          the upload was rejected.
        enum:
          - claim
          - copyright
          - duplicate
          - inappropriate
          - legal
          - length
          - termsOfUse
          - trademark
          - uploaderAccountClosed
          - uploaderAccountSuspended
        type: string
      selfDeclaredMadeForKids:
        description: TODO
        type: boolean
      uploadStatus:
        description: The status of the uploaded video.
        enum:
          - deleted
          - failed
          - processed
          - rejected
          - uploaded
        type: string
    type: object
  VideoSuggestions:
    description: >-
      Specifies suggestions on how to improve video content, including encoding
      hints, tag suggestions, and editor suggestions.
    properties:
      editorSuggestions:
        description: >-
          A list of video editing operations that might improve the video
          quality or playback experience of the uploaded video.
        items:
          enum:
            - audioQuietAudioSwap
            - videoAutoLevels
            - videoCrop
            - videoStabilize
          type: string
        type: array
      processingErrors:
        description: >-
          A list of errors that will prevent YouTube from successfully
          processing the uploaded video video. These errors indicate that,
          regardless of the video's current processing status, eventually, that
          status will almost certainly be failed.
        items:
          enum:
            - archiveFile
            - audioFile
            - docFile
            - imageFile
            - notAVideoFile
            - projectFile
            - unsupportedSpatialAudioLayout
          type: string
        type: array
      processingHints:
        description: >-
          A list of suggestions that may improve YouTube's ability to process
          the video.
        items:
          enum:
            - hdrVideo
            - nonStreamableMov
            - sendBestQualityVideo
            - spatialAudio
            - sphericalVideo
            - vrVideo
          type: string
        type: array
      processingWarnings:
        description: >-
          A list of reasons why YouTube may have difficulty transcoding the
          uploaded video or that might result in an erroneous transcoding. These
          warnings are generated before YouTube actually processes the uploaded
          video file. In addition, they identify issues that are unlikely to
          cause the video processing to fail but that might cause problems such
          as sync issues, video artifacts, or a missing audio track.
        items:
          enum:
            - hasEditlist
            - inconsistentResolution
            - problematicAudioCodec
            - problematicHdrLookupTable
            - problematicVideoCodec
            - unknownAudioCodec
            - unknownContainer
            - unknownVideoCodec
            - unsupportedHdrColorMetadata
            - unsupportedHdrPixelFormat
            - unsupportedSphericalProjectionType
            - unsupportedVrStereoMode
          type: string
        type: array
      tagSuggestions:
        description: >-
          A list of keyword tags that could be added to the video's metadata to
          increase the likelihood that users will locate your video when
          searching or browsing on YouTube.
        items:
          $ref: '#/definitions/VideoSuggestionsTagSuggestion'
        type: array
    type: object
  VideoSuggestionsTagSuggestion:
    description: A single tag suggestion with it's relevance information.
    properties:
      categoryRestricts:
        description: >-
          A set of video categories for which the tag is relevant. You can use
          this information to display appropriate tag suggestions based on the
          video category that the video uploader associates with the video. By
          default, tag suggestions are relevant for all categories if there are
          no restricts defined for the keyword.
        items:
          type: string
        type: array
      tag:
        description: The keyword tag suggested for the video.
        type: string
    type: object
  VideoTopicDetails:
    description: Freebase topic information related to the video.
    properties:
      relevantTopicIds:
        description: >-
          Similar to topic_id, except that these topics are merely relevant to
          the video. These are topics that may be mentioned in, or appear in the
          video. You can retrieve information about each topic using Freebase
          Topic API.
        items:
          type: string
        type: array
      topicCategories:
        description: >-
          A list of Wikipedia URLs that provide a high-level description of the
          video's content.
        items:
          type: string
        type: array
      topicIds:
        description: >-
          A list of Freebase topic IDs that are centrally associated with the
          video. These are topics that are centrally featured in the video, and
          it can be said that the video is mainly about each of these. You can
          retrieve information about each topic using the Freebase Topic API.
        items:
          type: string
        type: array
    type: object
  WatchSettings:
    description: Branding properties for the watch. All deprecated.
    properties:
      backgroundColor:
        description: The text color for the video watch page's branded area.
        type: string
      featuredPlaylistId:
        description: >-
          An ID that uniquely identifies a playlist that displays next to the
          video player.
        type: string
      textColor:
        description: The background color for the video watch page's branded area.
        type: string
    type: object
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 implicit authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/youtube': Manage your YouTube account
      'https://www.googleapis.com/auth/youtube.force-ssl': >-
        See, edit, and permanently delete your YouTube videos, ratings, comments
        and captions
      'https://www.googleapis.com/auth/youtube.readonly': View your YouTube account
      'https://www.googleapis.com/auth/youtube.upload': Manage your YouTube videos
      'https://www.googleapis.com/auth/youtubepartner': View and manage your assets and associated content on YouTube
      'https://www.googleapis.com/auth/youtubepartner-channel-audit': >-
        View private information of your YouTube channel relevant during the
        audit process with a YouTube partner
    type: oauth2
  Oauth2c:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 accessCode authentication
    flow: accessCode
    scopes:
      'https://www.googleapis.com/auth/youtube': Manage your YouTube account
      'https://www.googleapis.com/auth/youtube.force-ssl': >-
        See, edit, and permanently delete your YouTube videos, ratings, comments
        and captions
      'https://www.googleapis.com/auth/youtube.readonly': View your YouTube account
      'https://www.googleapis.com/auth/youtube.upload': Manage your YouTube videos
      'https://www.googleapis.com/auth/youtubepartner': View and manage your assets and associated content on YouTube
      'https://www.googleapis.com/auth/youtubepartner-channel-audit': >-
        View private information of your YouTube channel relevant during the
        audit process with a YouTube partner
    tokenUrl: 'https://accounts.google.com/o/oauth2/token'
    type: oauth2
tags:
  - name: activities
  - name: captions
  - name: channelBanners
  - name: channelSections
  - name: channels
  - name: commentThreads
  - name: comments
  - name: guideCategories
  - name: i18nLanguages
  - name: i18nRegions
  - name: liveBroadcasts
  - name: liveChatBans
  - name: liveChatMessages
  - name: liveChatModerators
  - name: liveStreams
  - name: members
  - name: membershipsLevels
  - name: playlistItems
  - name: playlists
  - name: search
  - name: sponsors
  - name: subscriptions
  - name: superChatEvents
  - name: thumbnails
  - name: videoAbuseReportReasons
  - name: videoCategories
  - name: videos
  - name: watermarks
externalDocs:
  url: 'https://developers.google.com/youtube/v3'
x-components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        default: json
        enum:
          - json
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        default: true
        type: boolean
    quotaUser:
      description: >-
        An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string

