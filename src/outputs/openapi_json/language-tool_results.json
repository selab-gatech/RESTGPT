{
    "openapi": "3.0.1",
    "info": {
        "title": "LanguageTool API",
        "description": "Check texts for style and grammar issues with LanguageTool. See <a href='http://wiki.languagetool.org/public-http-api'>our wiki</a> for access limitations.",
        "version": "1.0.2"
    },
    "servers": [
        {
            "url": "http://localhost:9003/v2"
        }
    ],
    "paths": {
        "/check": {
            "post": {
                "summary": "Check a text",
                "description": "The main feature - check a text with LanguageTool for possible style and grammar issues.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "language"
                                ],
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "description": "The text to be checked. This or 'data' is required."
                                    },
                                    "data": {
                                        "type": "string",
                                        "description": "The text to be checked, given as a JSON document that specifies what's text and what's markup. This or 'text' is required. Markup will be ignored when looking for errors. Example text: <pre>A &lt;b>test&lt;/b></pre>JSON for the example text: <pre>{\"annotation\":[\n {\"text\": \"A \"},\n {\"markup\": \"&lt;b>\"},\n {\"text\": \"test\"},\n {\"markup\": \"&lt;/b>\"}\n]}</pre> <p>If you have markup that should be interpreted as whitespace, like <tt>&lt;p&gt;</tt> in HTML, you can have it interpreted like this: <pre>{\"markup\": \"&lt;p&gt;\", \"interpretAs\": \"\\n\\n\"}</pre><p>The 'data' feature is not limited to HTML or XML, it can be used for any kind of markup."
                                    },
                                    "language": {
                                        "type": "string",
                                        "description": "A language code like `en-US`, `de-DE`, `fr`, or `auto` to guess the language automatically (see `preferredVariants` below). For languages with variants (English, German, Portuguese) spell checking will only be activated when you specify the variant, e.g. `en-GB` instead of just `en`.",
                                        "minLength": 2,
                                        "maxLength": 5
                                    },
                                    "altLanguages": {
                                        "type": "string",
                                        "description": "EXPERIMENTAL: Comma-separated list of language codes to check if a word is not similar to one of the main language (parameter `language`). Unknown words that are similar to a word from the main language will still be considered errors but with type `Hint`. For languages with variants (English, German, Portuguese) you need to specify the variant, e.g. `en-GB` instead of just `en`.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "minLength": 2
                                    },
                                    "motherTongue": {
                                        "type": "string",
                                        "description": "A language code of the user's native language, enabling false friends checks for some language pairs."
                                    },
                                    "preferredVariants": {
                                        "type": "string",
                                        "description": "Comma-separated list of preferred language variants. The language detector used with `language=auto` can detect e.g. English, but it cannot decide whether British English or American English is used. Thus this parameter can be used to specify the preferred variants like `en-GB` and `de-AT`. Only available with `language=auto`.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "minLength": 5,
                                        "maxLength": 5
                                    },
                                    "enabledRules": {
                                        "type": "string",
                                        "description": "IDs of rules to be enabled, comma-separated",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "disabledRules": {
                                        "type": "string",
                                        "description": "IDs of rules to be disabled, comma-separated",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "enabledCategories": {
                                        "type": "string",
                                        "description": "IDs of categories to be enabled, comma-separated",
                                        "items": {
                                            "type": "number"
                                        }
                                    },
                                    "disabledCategories": {
                                        "type": "string",
                                        "description": "IDs of categories to be disabled, comma-separated",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "enabledOnly": {
                                        "type": "boolean",
                                        "description": "If true, only the rules and categories whose IDs are specified with `enabledRules` or `enabledCategories` are enabled.",
                                        "default": false
                                    }
                                }
                            },
                            "examples": {
                                "GENERATED_0": {
                                    "value": "101"
                                },
                                "GENERATED_1": {
                                    "value": "202"
                                },
                                "GENERATED_2": {
                                    "value": "303"
                                },
                                "GENERATED_3": {
                                    "value": "404"
                                },
                                "GENERATED_4": {
                                    "value": "505"
                                },
                                "GENERATED_5": {
                                    "value": "606"
                                },
                                "GENERATED_6": {
                                    "value": "707"
                                },
                                "GENERATED_7": {
                                    "value": "808"
                                },
                                "GENERATED_8": {
                                    "value": "909"
                                },
                                "GENERATED_9": {
                                    "value": "1001"
                                },
                                "GENERATED_10": {
                                    "value": "11"
                                },
                                "GENERATED_11": {
                                    "value": "12"
                                },
                                "GENERATED_12": {
                                    "value": "13"
                                },
                                "GENERATED_13": {
                                    "value": "14"
                                },
                                "GENERATED_14": {
                                    "value": "15"
                                },
                                "GENERATED_15": {
                                    "value": "zh-TW"
                                },
                                "GENERATED_16": {
                                    "value": "FI"
                                },
                                "GENERATED_17": {
                                    "value": "PL"
                                },
                                "GENERATED_18": {
                                    "value": "TR"
                                },
                                "GENERATED_19": {
                                    "value": "CS"
                                },
                                "GENERATED_20": {
                                    "value": "HU"
                                },
                                "GENERATED_21": {
                                    "value": "EL"
                                },
                                "GENERATED_22": {
                                    "value": "TH"
                                },
                                "GENERATED_23": {
                                    "value": "VI"
                                },
                                "GENERATED_24": {
                                    "value": "RO"
                                },
                                "GENERATED_25": {
                                    "value": "BG"
                                },
                                "GENERATED_26": {
                                    "value": "HR"
                                },
                                "GENERATED_27": {
                                    "value": "LT"
                                },
                                "GENERATED_28": {
                                    "value": "LV"
                                },
                                "GENERATED_29": {
                                    "value": "SL"
                                },
                                "GENERATED_30": {
                                    "value": "ET"
                                },
                                "GENERATED_31": {
                                    "value": "IS"
                                },
                                "GENERATED_32": {
                                    "value": "MS"
                                },
                                "GENERATED_33": {
                                    "value": "SW"
                                },
                                "GENERATED_34": {
                                    "value": "TL"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "the result of checking the text",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-dependencies": [
                    "Or(text, data);",
                    "Or(data, text);",
                    "IF language=='auto' THEN ZeroOrOne(preferredVariants);",
                    "IF enabledOnly THEN OnlyOne(enabledRules, enabledCategories);"
                ]
            }
        },
        "/languages": {
            "get": {
                "summary": "Get a list of supported languages.",
                "responses": {
                    "200": {
                        "description": "An array of language objects.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "required": [
                                            "code",
                                            "longCode",
                                            "name"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "a language name like 'French' or 'English (Australia)'"
                                            },
                                            "code": {
                                                "type": "string",
                                                "description": "a language code like 'en'"
                                            },
                                            "longCode": {
                                                "type": "string",
                                                "description": "a language code like 'en-US' or 'ca-ES-valencia'"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {}
}